{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "properties": {
        "external_retry_count": {
            "type": "integer",
            "description": "Control how many times envoy makes an attempt to forward a query to\n an external server"
        },
        "virtual_domains": {
            "items": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The domain name for which Envoy will respond to query requests"
                    },
                    "endpoint": {
                        "properties": {
                            "address_list": {
                                "properties": {
                                    "address": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array",
                                        "description": "This field contains a well formed IP address that is returned\n in the answer for a name query. The address field can be an\n IPv4 or IPv6 address. Address family detection is done automatically\n when Envoy parses the string. Since this field is repeated,\n Envoy will return one randomly chosen entry from this list in the\n DNS response. The random index will vary per query so that we prevent\n clients pinning on a single address for a configured domain"
                                    }
                                },
                                "additionalProperties": true,
                                "type": "object"
                            }
                        },
                        "additionalProperties": true,
                        "type": "object",
                        "description": "The configuration containing the method to determine the address\n of this endpoint"
                    },
                    "answer_ttl": {
                        "properties": {
                            "seconds": {
                                "type": "string",
                                "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                            },
                            "nanos": {
                                "type": "integer",
                                "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."
                            }
                        },
                        "additionalProperties": true,
                        "type": "object",
                        "description": "Sets the TTL in dns answers from Envoy returned to the client"
                    }
                },
                "additionalProperties": true,
                "type": "object"
            },
            "type": "array",
            "description": "Fully qualified domain names for which Envoy will respond to queries"
        },
        "known_suffixes": {
            "items": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "properties": {
                    "exact": {
                        "type": "string",
                        "description": "The input string must match exactly the string specified here.\n\n Examples:\n\n * *abc* only matches the value *abc*."
                    },
                    "prefix": {
                        "type": "string",
                        "description": "The input string must have the prefix specified here.\n Note: empty prefix is not allowed, please use regex instead.\n\n Examples:\n\n * *abc* matches the value *abc.xyz*"
                    },
                    "suffix": {
                        "type": "string",
                        "description": "The input string must have the suffix specified here.\n Note: empty prefix is not allowed, please use regex instead.\n\n Examples:\n\n * *abc* matches the value *xyz.abc*"
                    },
                    "regex": {
                        "type": "string",
                        "description": "The input string must match the regular expression specified here.\n The regex grammar is defined `here\n \u003chttps://en.cppreference.com/w/cpp/regex/ecmascript\u003e`_.\n\n Examples:\n\n * The regex ``\\d{3}`` matches the value *123*\n * The regex ``\\d{3}`` does not match the value *1234*\n * The regex ``\\d{3}`` does not match the value *123.456*\n\n .. attention::\n   This field has been deprecated in favor of `safe_regex` as it is not safe for use with\n   untrusted input in all cases."
                    },
                    "safe_regex": {
                        "properties": {
                            "google_re2": {
                                "properties": {
                                    "max_program_size": {
                                        "additionalProperties": true,
                                        "type": "integer",
                                        "description": "This field controls the RE2 \"program size\" which is a rough estimate of how complex a\n compiled regex is to evaluate. A regex that has a program size greater than the configured\n value will fail to compile. In this case, the configured max program size can be increased\n or the regex can be simplified. If not specified, the default is 100.\n\n This field is deprecated; regexp validation should be performed on the management server\n instead of being done by each individual client."
                                    }
                                },
                                "additionalProperties": true,
                                "type": "object",
                                "description": "Google's RE2 regex engine."
                            },
                            "regex": {
                                "type": "string",
                                "description": "The regex match string. The string must be supported by the configured engine."
                            }
                        },
                        "additionalProperties": true,
                        "type": "object",
                        "description": "The input string must match the regular expression specified here."
                    },
                    "ignore_case": {
                        "type": "boolean",
                        "description": "If true, indicates the exact/prefix/suffix matching should be case insensitive. This has no\n effect for the safe_regex match.\n For example, the matcher *data* will match both input string *Data* and *data* if set to true."
                    }
                },
                "additionalProperties": true,
                "type": "object",
                "description": "[#protodoc-title: String matcher]\n\nSpecifies the way to match a string.\n [#next-free-field: 7]"
            },
            "type": "array",
            "description": "This field serves to help Envoy determine whether it can authoritatively\n answer a query for a name matching a suffix in this list. If the query\n name does not match a suffix in this list, Envoy will forward\n the query to an upstream DNS server"
        }
    },
    "additionalProperties": true,
    "type": "object",
    "description": "[#protodoc-title: DNS Filter Table Data]\n :ref:`DNS Filter config overview \u003cconfig_udp_listener_filters_dns_filter\u003e`.\n\nThis message contains the configuration for the DNS Filter if populated\n from the control plane"
}