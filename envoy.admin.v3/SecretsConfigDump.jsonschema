{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "properties": {
        "static_secrets": {
            "items": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name assigned to the secret."
                    },
                    "last_updated": {
                        "type": "string",
                        "description": "The timestamp when the secret was last updated.",
                        "format": "date-time"
                    },
                    "secret": {
                        "properties": {
                            "type_url": {
                                "type": "string",
                                "description": "A URL/resource name that uniquely identifies the type of the serialized\n protocol buffer message. This string must contain at least\n one \"/\" character. The last segment of the URL's path must represent\n the fully qualified name of the type (as in\n `path/google.protobuf.Duration`). The name should be in a canonical form\n (e.g., leading \".\" is not accepted).\n\n In practice, teams usually precompile into the binary all types that they\n expect it to use in the context of Any. However, for URLs which use the\n scheme `http`, `https`, or no scheme, one can optionally set up a type\n server that maps type URLs to message definitions as follows:\n\n * If no scheme is provided, `https` is assumed.\n * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n   value in binary format, or produce an error.\n * Applications are allowed to cache lookup results based on the\n   URL, or have them precompiled into a binary to avoid any\n   lookup. Therefore, binary compatibility needs to be preserved\n   on changes to types. (Use versioned type names to manage\n   breaking changes.)\n\n Note: this functionality is not currently available in the official\n protobuf release, and it is not used for type URLs beginning with\n type.googleapis.com.\n\n Schemes other than `http`, `https` (or the empty scheme) might be\n used with implementation specific semantics."
                            },
                            "value": {
                                "type": "string",
                                "description": "Must be a valid serialized protocol buffer of the above specified type."
                            }
                        },
                        "additionalProperties": true,
                        "type": "object",
                        "description": "The actual secret information.\n Security sensitive information is redacted (replaced with \"[redacted]\") for\n private keys and passwords in TLS certificates."
                    }
                },
                "additionalProperties": true,
                "type": "object",
                "description": "StaticSecret specifies statically loaded secret in bootstrap."
            },
            "type": "array",
            "description": "The statically loaded secrets."
        },
        "dynamic_active_secrets": {
            "items": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "$ref": "envoy.admin.v3.SecretsConfigDump.DynamicSecret"
            },
            "type": "array",
            "description": "The dynamically loaded active secrets. These are secrets that are available to service\n clusters or listeners."
        },
        "dynamic_warming_secrets": {
            "items": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "$ref": "envoy.admin.v3.SecretsConfigDump.DynamicSecret"
            },
            "type": "array",
            "description": "The dynamically loaded warming secrets. These are secrets that are currently undergoing\n warming in preparation to service clusters or listeners."
        }
    },
    "additionalProperties": true,
    "type": "object",
    "description": "Envoys SDS implementation fills this message with all secrets fetched dynamically via SDS.",
    "definitions": {
        "envoy.admin.v3.SecretsConfigDump.DynamicSecret": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name assigned to the secret."
                },
                "version_info": {
                    "type": "string",
                    "description": "This is the per-resource version information."
                },
                "last_updated": {
                    "type": "string",
                    "description": "The timestamp when the secret was last updated.",
                    "format": "date-time"
                },
                "secret": {
                    "properties": {
                        "type_url": {
                            "type": "string",
                            "description": "A URL/resource name that uniquely identifies the type of the serialized\n protocol buffer message. This string must contain at least\n one \"/\" character. The last segment of the URL's path must represent\n the fully qualified name of the type (as in\n `path/google.protobuf.Duration`). The name should be in a canonical form\n (e.g., leading \".\" is not accepted).\n\n In practice, teams usually precompile into the binary all types that they\n expect it to use in the context of Any. However, for URLs which use the\n scheme `http`, `https`, or no scheme, one can optionally set up a type\n server that maps type URLs to message definitions as follows:\n\n * If no scheme is provided, `https` is assumed.\n * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n   value in binary format, or produce an error.\n * Applications are allowed to cache lookup results based on the\n   URL, or have them precompiled into a binary to avoid any\n   lookup. Therefore, binary compatibility needs to be preserved\n   on changes to types. (Use versioned type names to manage\n   breaking changes.)\n\n Note: this functionality is not currently available in the official\n protobuf release, and it is not used for type URLs beginning with\n type.googleapis.com.\n\n Schemes other than `http`, `https` (or the empty scheme) might be\n used with implementation specific semantics."
                        },
                        "value": {
                            "type": "string",
                            "description": "Must be a valid serialized protocol buffer of the above specified type."
                        }
                    },
                    "additionalProperties": true,
                    "type": "object",
                    "description": "The actual secret information.\n Security sensitive information is redacted (replaced with \"[redacted]\") for\n private keys and passwords in TLS certificates."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "DynamicSecret contains secret information fetched via SDS.",
            "id": "envoy.admin.v3.SecretsConfigDump.DynamicSecret"
        }
    }
}