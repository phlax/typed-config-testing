{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "properties": {
        "name": {
            "type": "string",
            "description": "The name assigned to the scoped routing configuration."
        },
        "scope_key_builder": {
            "properties": {
                "fragments": {
                    "items": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "properties": {
                            "header_value_extractor": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "The name of the header field to extract the value from.\n\n .. note::\n\n   If the header appears multiple times only the first value is used."
                                    },
                                    "element_separator": {
                                        "type": "string",
                                        "description": "The element separator (e.g., ';' separates 'a;b;c;d').\n Default: empty string. This causes the entirety of the header field to be extracted.\n If this field is set to an empty string and 'index' is used in the oneof below, 'index'\n must be set to 0."
                                    },
                                    "index": {
                                        "type": "integer",
                                        "description": "Specifies the zero based index of the element to extract.\n Note Envoy concatenates multiple values of the same header key into a comma separated\n string, the splitting always happens after the concatenation."
                                    },
                                    "element": {
                                        "properties": {
                                            "separator": {
                                                "type": "string",
                                                "description": "The separator between key and value (e.g., '=' separates 'k=v;...').\n If an element is an empty string, the element is ignored.\n If an element contains no separator, the whole element is parsed as key and the\n fragment value is an empty string.\n If there are multiple values for a matched key, the first value is returned."
                                            },
                                            "key": {
                                                "type": "string",
                                                "description": "The key to match on."
                                            }
                                        },
                                        "additionalProperties": true,
                                        "type": "object",
                                        "description": "Specifies the key value pair to extract the value from."
                                    }
                                },
                                "additionalProperties": true,
                                "type": "object",
                                "description": "Specifies how a header field's value should be extracted."
                            }
                        },
                        "additionalProperties": true,
                        "type": "object",
                        "description": "Specifies the mechanism for constructing key fragments which are composed into scope keys."
                    },
                    "type": "array",
                    "description": "The final(built) scope key consists of the ordered union of these fragments, which are compared in order with the\n fragments of a :ref:`ScopedRouteConfiguration\u003cenvoy_api_msg_config.route.v3.ScopedRouteConfiguration\u003e`.\n A missing fragment during comparison will make the key invalid, i.e., the computed key doesn't match any key."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "The algorithm to use for constructing a scope key for each request."
        },
        "rds_config_source": {
            "$ref": "envoy.config.core.v3.ConfigSource",
            "additionalProperties": true,
            "description": "Configuration source specifier for RDS.\n This config source is used to subscribe to RouteConfiguration resources specified in\n ScopedRouteConfiguration messages."
        },
        "scoped_route_configurations_list": {
            "properties": {
                "scoped_route_configurations": {
                    "items": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "properties": {
                            "on_demand": {
                                "type": "boolean",
                                "description": "Whether the RouteConfiguration should be loaded on demand."
                            },
                            "name": {
                                "type": "string",
                                "description": "The name assigned to the routing scope."
                            },
                            "route_configuration_name": {
                                "type": "string",
                                "description": "The resource name to use for a :ref:`envoy_api_msg_service.discovery.v3.DiscoveryRequest` to an\n RDS server to fetch the :ref:`envoy_api_msg_config.route.v3.RouteConfiguration` associated\n with this scope."
                            },
                            "key": {
                                "properties": {
                                    "fragments": {
                                        "items": {
                                            "$schema": "http://json-schema.org/draft-04/schema#",
                                            "properties": {
                                                "string_key": {
                                                    "type": "string",
                                                    "description": "A string to match against."
                                                }
                                            },
                                            "additionalProperties": true,
                                            "type": "object"
                                        },
                                        "type": "array",
                                        "description": "The ordered set of fragments to match against. The order must match the\n fragments in the corresponding\n :ref:`scope_key_builder\u003cenvoy_api_field_extensions.filters.network.http_connection_manager.v3.ScopedRoutes.scope_key_builder\u003e`."
                                    }
                                },
                                "additionalProperties": true,
                                "type": "object",
                                "description": "The key to match against."
                            }
                        },
                        "additionalProperties": true,
                        "type": "object",
                        "description": "[#protodoc-title: HTTP scoped routing configuration]\n * Routing :ref:`architecture overview \u003carch_overview_http_routing\u003e`\n\nSpecifies a routing scope, which associates a\n :ref:`Key\u003cenvoy_api_msg_config.route.v3.ScopedRouteConfiguration.Key\u003e` to a\n :ref:`envoy_api_msg_config.route.v3.RouteConfiguration` (identified by its resource name).\n\n The HTTP connection manager builds up a table consisting of these Key to\n RouteConfiguration mappings, and looks up the RouteConfiguration to use per\n request according to the algorithm specified in the\n :ref:`scope_key_builder\u003cenvoy_api_field_extensions.filters.network.http_connection_manager.v3.ScopedRoutes.scope_key_builder\u003e`\n assigned to the HttpConnectionManager.\n\n For example, with the following configurations (in YAML):\n\n HttpConnectionManager config:\n\n .. code::\n\n   ...\n   scoped_routes:\n     name: foo-scoped-routes\n     scope_key_builder:\n       fragments:\n         - header_value_extractor:\n             name: X-Route-Selector\n             element_separator: ,\n             element:\n               separator: =\n               key: vip\n\n ScopedRouteConfiguration resources (specified statically via\n :ref:`scoped_route_configurations_list\u003cenvoy_api_field_extensions.filters.network.http_connection_manager.v3.ScopedRoutes.scoped_route_configurations_list\u003e`\n or obtained dynamically via SRDS):\n\n .. code::\n\n  (1)\n   name: route-scope1\n   route_configuration_name: route-config1\n   key:\n      fragments:\n        - string_key: 172.10.10.20\n\n  (2)\n   name: route-scope2\n   route_configuration_name: route-config2\n   key:\n     fragments:\n       - string_key: 172.20.20.30\n\n A request from a client such as:\n\n .. code::\n\n     GET / HTTP/1.1\n     Host: foo.com\n     X-Route-Selector: vip=172.10.10.20\n\n would result in the routing table defined by the `route-config1`\n RouteConfiguration being assigned to the HTTP request/stream."
                    },
                    "type": "array"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "The set of routing scopes corresponding to the HCM. A scope is assigned to a request by\n matching a key constructed from the request's attributes according to the algorithm specified\n by the\n :ref:`ScopeKeyBuilder\u003cenvoy_api_msg_extensions.filters.network.http_connection_manager.v3.ScopedRoutes.ScopeKeyBuilder\u003e`\n in this message."
        },
        "scoped_rds": {
            "properties": {
                "scoped_rds_config_source": {
                    "$ref": "envoy.config.core.v3.ConfigSource",
                    "additionalProperties": true,
                    "description": "Configuration source specifier for scoped RDS."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "The set of routing scopes associated with the HCM will be dynamically loaded via the SRDS\n API. A scope is assigned to a request by matching a key constructed from the request's\n attributes according to the algorithm specified by the\n :ref:`ScopeKeyBuilder\u003cenvoy_api_msg_extensions.filters.network.http_connection_manager.v3.ScopedRoutes.ScopeKeyBuilder\u003e`\n in this message."
        }
    },
    "additionalProperties": true,
    "type": "object",
    "description": "[#next-free-field: 6]",
    "definitions": {
        "envoy.config.core.v3.ConfigSource": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": {
                "authorities": {
                    "items": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "properties": {
                            "name": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": true,
                        "type": "object",
                        "description": "xDS authority information."
                    },
                    "type": "array",
                    "description": "Authorities that this config source may be used for. An authority specified in a xdstp:// URL\n is resolved to a *ConfigSource* prior to configuration fetch. This field provides the\n association between authority name and configuration source.\n [#not-implemented-hide:]"
                },
                "path": {
                    "type": "string",
                    "description": "Path on the filesystem to source and watch for configuration updates.\n When sourcing configuration for :ref:`secret \u003cenvoy_api_msg_extensions.transport_sockets.tls.v3.Secret\u003e`,\n the certificate and key files are also watched for updates.\n\n .. note::\n\n  The path to the source must exist at config load time.\n\n .. note::\n\n   Envoy will only watch the file path for *moves.* This is because in general only moves\n   are atomic. The same method of swapping files as is demonstrated in the\n   :ref:`runtime documentation \u003cconfig_runtime_symbolic_link_swap\u003e` can be used here also."
                },
                "api_config_source": {
                    "properties": {
                        "api_type": {
                            "enum": [
                                "DEPRECATED_AND_UNAVAILABLE_DO_NOT_USE",
                                0,
                                "REST",
                                1,
                                "GRPC",
                                2,
                                "DELTA_GRPC",
                                3,
                                "AGGREGATED_GRPC",
                                5,
                                "AGGREGATED_DELTA_GRPC",
                                6
                            ],
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ],
                            "description": "API type (gRPC, REST, delta gRPC)"
                        },
                        "transport_api_version": {
                            "enum": [
                                "AUTO",
                                0,
                                "V2",
                                1,
                                "V3",
                                2
                            ],
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ],
                            "description": "API version for xDS transport protocol. This describes the xDS gRPC/REST\n endpoint and version of [Delta]DiscoveryRequest/Response used on the wire."
                        },
                        "cluster_names": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "description": "Cluster names should be used only with REST. If \u003e 1\n cluster is defined, clusters will be cycled through if any kind of failure\n occurs.\n\n .. note::\n\n  The cluster with name ``cluster_name`` must be statically defined and its\n  type must not be ``EDS``."
                        },
                        "grpc_services": {
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "properties": {
                                    "envoy_grpc": {
                                        "properties": {
                                            "cluster_name": {
                                                "type": "string",
                                                "description": "The name of the upstream gRPC cluster. SSL credentials will be supplied\n in the :ref:`Cluster \u003cenvoy_api_msg_config.cluster.v3.Cluster\u003e` :ref:`transport_socket\n \u003cenvoy_api_field_config.cluster.v3.Cluster.transport_socket\u003e`."
                                            },
                                            "authority": {
                                                "type": "string",
                                                "description": "The `:authority` header in the grpc request. If this field is not set, the authority header value will be `cluster_name`.\n Note that this authority does not override the SNI. The SNI is provided by the transport socket of the cluster."
                                            }
                                        },
                                        "additionalProperties": true,
                                        "type": "object",
                                        "description": "Envoy's in-built gRPC client.\n See the :ref:`gRPC services overview \u003carch_overview_grpc_services\u003e`\n documentation for discussion on gRPC client selection."
                                    },
                                    "google_grpc": {
                                        "properties": {
                                            "target_uri": {
                                                "type": "string",
                                                "description": "The target URI when using the `Google C++ gRPC client\n \u003chttps://github.com/grpc/grpc\u003e`_. SSL credentials will be supplied in\n :ref:`channel_credentials \u003cenvoy_api_field_config.core.v3.GrpcService.GoogleGrpc.channel_credentials\u003e`."
                                            },
                                            "channel_credentials": {
                                                "properties": {
                                                    "ssl_credentials": {
                                                        "properties": {
                                                            "root_certs": {
                                                                "$ref": "envoy.config.core.v3.DataSource",
                                                                "additionalProperties": true,
                                                                "description": "PEM encoded server root certificates."
                                                            },
                                                            "private_key": {
                                                                "$ref": "envoy.config.core.v3.DataSource",
                                                                "additionalProperties": true,
                                                                "description": "PEM encoded client private key."
                                                            },
                                                            "cert_chain": {
                                                                "$ref": "envoy.config.core.v3.DataSource",
                                                                "additionalProperties": true,
                                                                "description": "PEM encoded client certificate chain."
                                                            }
                                                        },
                                                        "additionalProperties": true,
                                                        "type": "object"
                                                    },
                                                    "google_default": {
                                                        "additionalProperties": true,
                                                        "type": "object",
                                                        "description": "https://grpc.io/grpc/cpp/namespacegrpc.html#a6beb3ac70ff94bd2ebbd89b8f21d1f61"
                                                    },
                                                    "local_credentials": {
                                                        "additionalProperties": true,
                                                        "type": "object"
                                                    }
                                                },
                                                "additionalProperties": true,
                                                "type": "object"
                                            },
                                            "call_credentials": {
                                                "items": {
                                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                                    "properties": {
                                                        "access_token": {
                                                            "type": "string",
                                                            "description": "Access token credentials.\n https://grpc.io/grpc/cpp/namespacegrpc.html#ad3a80da696ffdaea943f0f858d7a360d."
                                                        },
                                                        "google_compute_engine": {
                                                            "additionalProperties": true,
                                                            "type": "object",
                                                            "description": "Google Compute Engine credentials.\n https://grpc.io/grpc/cpp/namespacegrpc.html#a6beb3ac70ff94bd2ebbd89b8f21d1f61"
                                                        },
                                                        "google_refresh_token": {
                                                            "type": "string",
                                                            "description": "Google refresh token credentials.\n https://grpc.io/grpc/cpp/namespacegrpc.html#a96901c997b91bc6513b08491e0dca37c."
                                                        },
                                                        "service_account_jwt_access": {
                                                            "properties": {
                                                                "json_key": {
                                                                    "type": "string"
                                                                },
                                                                "token_lifetime_seconds": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "additionalProperties": true,
                                                            "type": "object",
                                                            "description": "Service Account JWT Access credentials.\n https://grpc.io/grpc/cpp/namespacegrpc.html#a92a9f959d6102461f66ee973d8e9d3aa."
                                                        },
                                                        "google_iam": {
                                                            "properties": {
                                                                "authorization_token": {
                                                                    "type": "string"
                                                                },
                                                                "authority_selector": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "additionalProperties": true,
                                                            "type": "object",
                                                            "description": "Google IAM credentials.\n https://grpc.io/grpc/cpp/namespacegrpc.html#a9fc1fc101b41e680d47028166e76f9d0."
                                                        },
                                                        "from_plugin": {
                                                            "properties": {
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "typed_config": {
                                                                    "properties": {
                                                                        "type_url": {
                                                                            "type": "string",
                                                                            "description": "A URL/resource name that uniquely identifies the type of the serialized\n protocol buffer message. This string must contain at least\n one \"/\" character. The last segment of the URL's path must represent\n the fully qualified name of the type (as in\n `path/google.protobuf.Duration`). The name should be in a canonical form\n (e.g., leading \".\" is not accepted).\n\n In practice, teams usually precompile into the binary all types that they\n expect it to use in the context of Any. However, for URLs which use the\n scheme `http`, `https`, or no scheme, one can optionally set up a type\n server that maps type URLs to message definitions as follows:\n\n * If no scheme is provided, `https` is assumed.\n * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n   value in binary format, or produce an error.\n * Applications are allowed to cache lookup results based on the\n   URL, or have them precompiled into a binary to avoid any\n   lookup. Therefore, binary compatibility needs to be preserved\n   on changes to types. (Use versioned type names to manage\n   breaking changes.)\n\n Note: this functionality is not currently available in the official\n protobuf release, and it is not used for type URLs beginning with\n type.googleapis.com.\n\n Schemes other than `http`, `https` (or the empty scheme) might be\n used with implementation specific semantics."
                                                                        },
                                                                        "value": {
                                                                            "type": "string",
                                                                            "description": "Must be a valid serialized protocol buffer of the above specified type."
                                                                        }
                                                                    },
                                                                    "additionalProperties": true,
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "additionalProperties": true,
                                                            "type": "object",
                                                            "description": "Custom authenticator credentials.\n https://grpc.io/grpc/cpp/namespacegrpc.html#a823c6a4b19ffc71fb33e90154ee2ad07.\n https://grpc.io/docs/guides/auth.html#extending-grpc-to-support-other-authentication-mechanisms."
                                                        },
                                                        "sts_service": {
                                                            "properties": {
                                                                "token_exchange_service_uri": {
                                                                    "type": "string",
                                                                    "description": "URI of the token exchange service that handles token exchange requests.\n [#comment:TODO(asraa): Add URI validation when implemented. Tracked by\n https://github.com/envoyproxy/protoc-gen-validate/issues/303]"
                                                                },
                                                                "resource": {
                                                                    "type": "string",
                                                                    "description": "Location of the target service or resource where the client\n intends to use the requested security token."
                                                                },
                                                                "audience": {
                                                                    "type": "string",
                                                                    "description": "Logical name of the target service where the client intends to\n use the requested security token."
                                                                },
                                                                "scope": {
                                                                    "type": "string",
                                                                    "description": "The desired scope of the requested security token in the\n context of the service or resource where the token will be used."
                                                                },
                                                                "requested_token_type": {
                                                                    "type": "string",
                                                                    "description": "Type of the requested security token."
                                                                },
                                                                "subject_token_path": {
                                                                    "type": "string",
                                                                    "description": "The path of subject token, a security token that represents the\n identity of the party on behalf of whom the request is being made."
                                                                },
                                                                "subject_token_type": {
                                                                    "type": "string",
                                                                    "description": "Type of the subject token."
                                                                },
                                                                "actor_token_path": {
                                                                    "type": "string",
                                                                    "description": "The path of actor token, a security token that represents the identity\n of the acting party. The acting party is authorized to use the\n requested security token and act on behalf of the subject."
                                                                },
                                                                "actor_token_type": {
                                                                    "type": "string",
                                                                    "description": "Type of the actor token."
                                                                }
                                                            },
                                                            "additionalProperties": true,
                                                            "type": "object",
                                                            "description": "Custom security token service which implements OAuth 2.0 token exchange.\n https://tools.ietf.org/html/draft-ietf-oauth-token-exchange-16\n See https://github.com/grpc/grpc/pull/19587."
                                                        }
                                                    },
                                                    "additionalProperties": true,
                                                    "type": "object",
                                                    "description": "[#next-free-field: 8]"
                                                },
                                                "type": "array",
                                                "description": "A set of call credentials that can be composed with `channel credentials\n \u003chttps://grpc.io/docs/guides/auth.html#credential-types\u003e`_."
                                            },
                                            "stat_prefix": {
                                                "type": "string",
                                                "description": "The human readable prefix to use when emitting statistics for the gRPC\n service.\n\n .. csv-table::\n    :header: Name, Type, Description\n    :widths: 1, 1, 2\n\n    streams_total, Counter, Total number of streams opened\n    streams_closed_\u003cgRPC status code\u003e, Counter, Total streams closed with \u003cgRPC status code\u003e"
                                            },
                                            "credentials_factory_name": {
                                                "type": "string",
                                                "description": "The name of the Google gRPC credentials factory to use. This must have been registered with\n Envoy. If this is empty, a default credentials factory will be used that sets up channel\n credentials based on other configuration parameters."
                                            },
                                            "config": {
                                                "properties": {
                                                    "fields": {
                                                        "additionalProperties": {
                                                            "additionalProperties": true,
                                                            "type": "object"
                                                        },
                                                        "type": "object",
                                                        "description": "Unordered map of dynamically typed values."
                                                    }
                                                },
                                                "additionalProperties": true,
                                                "type": "object",
                                                "description": "Additional configuration for site-specific customizations of the Google\n gRPC library."
                                            },
                                            "per_stream_buffer_limit_bytes": {
                                                "additionalProperties": true,
                                                "type": "integer",
                                                "description": "How many bytes each stream can buffer internally.\n If not set an implementation defined default is applied (1MiB)."
                                            },
                                            "channel_args": {
                                                "properties": {
                                                    "args": {
                                                        "additionalProperties": {
                                                            "properties": {
                                                                "string_value": {
                                                                    "type": "string"
                                                                },
                                                                "int_value": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "additionalProperties": true,
                                                            "type": "object"
                                                        },
                                                        "type": "object",
                                                        "description": "See grpc_types.h GRPC_ARG #defines for keys that work here."
                                                    }
                                                },
                                                "additionalProperties": true,
                                                "type": "object",
                                                "description": "Custom channels args."
                                            }
                                        },
                                        "additionalProperties": true,
                                        "type": "object",
                                        "description": "`Google C++ gRPC client \u003chttps://github.com/grpc/grpc\u003e`_\n See the :ref:`gRPC services overview \u003carch_overview_grpc_services\u003e`\n documentation for discussion on gRPC client selection."
                                    },
                                    "timeout": {
                                        "properties": {
                                            "seconds": {
                                                "type": "string",
                                                "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                                            },
                                            "nanos": {
                                                "type": "integer",
                                                "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."
                                            }
                                        },
                                        "additionalProperties": true,
                                        "type": "object",
                                        "description": "The timeout for the gRPC request. This is the timeout for a specific\n request."
                                    },
                                    "initial_metadata": {
                                        "items": {
                                            "$schema": "http://json-schema.org/draft-04/schema#",
                                            "properties": {
                                                "key": {
                                                    "type": "string",
                                                    "description": "Header name."
                                                },
                                                "value": {
                                                    "type": "string",
                                                    "description": "Header value.\n\n The same :ref:`format specifier \u003cconfig_access_log_format\u003e` as used for\n :ref:`HTTP access logging \u003cconfig_access_log\u003e` applies here, however\n unknown header values are replaced with the empty string instead of `-`."
                                                }
                                            },
                                            "additionalProperties": true,
                                            "type": "object",
                                            "description": "Header name/value pair."
                                        },
                                        "type": "array",
                                        "description": "Additional metadata to include in streams initiated to the GrpcService. This can be used for\n scenarios in which additional ad hoc authorization headers (e.g. ``x-foo-bar: baz-key``) are to\n be injected. For more information, including details on header value syntax, see the\n documentation on :ref:`custom request headers\n \u003cconfig_http_conn_man_headers_custom_request_headers\u003e`."
                                    }
                                },
                                "additionalProperties": true,
                                "type": "object",
                                "description": "[#protodoc-title: gRPC services]\n\ngRPC service configuration. This is used by :ref:`ApiConfigSource\n \u003cenvoy_api_msg_config.core.v3.ApiConfigSource\u003e` and filter configurations.\n [#next-free-field: 6]"
                            },
                            "type": "array",
                            "description": "Multiple gRPC services be provided for GRPC. If \u003e 1 cluster is defined,\n services will be cycled through if any kind of failure occurs."
                        },
                        "refresh_delay": {
                            "properties": {
                                "seconds": {
                                    "type": "string",
                                    "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                                },
                                "nanos": {
                                    "type": "integer",
                                    "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."
                                }
                            },
                            "additionalProperties": true,
                            "type": "object",
                            "description": "For REST APIs, the delay between successive polls."
                        },
                        "request_timeout": {
                            "properties": {
                                "seconds": {
                                    "type": "string",
                                    "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                                },
                                "nanos": {
                                    "type": "integer",
                                    "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."
                                }
                            },
                            "additionalProperties": true,
                            "type": "object",
                            "description": "For REST APIs, the request timeout. If not set, a default value of 1s will be used."
                        },
                        "rate_limit_settings": {
                            "properties": {
                                "max_tokens": {
                                    "additionalProperties": true,
                                    "type": "integer",
                                    "description": "Maximum number of tokens to be used for rate limiting discovery request calls. If not set, a\n default value of 100 will be used."
                                },
                                "fill_rate": {
                                    "additionalProperties": true,
                                    "type": "number",
                                    "description": "Rate at which tokens will be filled per second. If not set, a default fill rate of 10 tokens\n per second will be used."
                                }
                            },
                            "additionalProperties": true,
                            "type": "object",
                            "description": "For GRPC APIs, the rate limit settings. If present, discovery requests made by Envoy will be\n rate limited."
                        },
                        "set_node_on_first_message_only": {
                            "type": "boolean",
                            "description": "Skip the node identifier in subsequent discovery requests for streaming gRPC config types."
                        }
                    },
                    "additionalProperties": true,
                    "type": "object",
                    "description": "API configuration source."
                },
                "ads": {
                    "additionalProperties": true,
                    "type": "object",
                    "description": "When set, ADS will be used to fetch resources. The ADS API configuration\n source in the bootstrap configuration is used."
                },
                "self": {
                    "properties": {
                        "transport_api_version": {
                            "enum": [
                                "AUTO",
                                0,
                                "V2",
                                1,
                                "V3",
                                2
                            ],
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ],
                            "description": "API version for xDS transport protocol. This describes the xDS gRPC/REST\n endpoint and version of [Delta]DiscoveryRequest/Response used on the wire."
                        }
                    },
                    "additionalProperties": true,
                    "type": "object",
                    "description": "[#not-implemented-hide:]\n When set, the client will access the resources from the same server it got the\n ConfigSource from, although not necessarily from the same stream. This is similar to the\n :ref:`ads\u003cenvoy_api_field.ConfigSource.ads\u003e` field, except that the client may use a\n different stream to the same server. As a result, this field can be used for things\n like LRS that cannot be sent on an ADS stream. It can also be used to link from (e.g.)\n LDS to RDS on the same server without requiring the management server to know its name\n or required credentials.\n [#next-major-version: In xDS v3, consider replacing the ads field with this one, since\n this field can implicitly mean to use the same stream in the case where the ConfigSource\n is provided via ADS and the specified data can also be obtained via ADS.]"
                },
                "initial_fetch_timeout": {
                    "properties": {
                        "seconds": {
                            "type": "string",
                            "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                        },
                        "nanos": {
                            "type": "integer",
                            "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."
                        }
                    },
                    "additionalProperties": true,
                    "type": "object",
                    "description": "When this timeout is specified, Envoy will wait no longer than the specified time for first\n config response on this xDS subscription during the :ref:`initialization process\n \u003carch_overview_initialization\u003e`. After reaching the timeout, Envoy will move to the next\n initialization phase, even if the first config is not delivered yet. The timer is activated\n when the xDS API subscription starts, and is disarmed on first config update or on error. 0\n means no timeout - Envoy will wait indefinitely for the first xDS config (unless another\n timeout applies). The default is 15s."
                },
                "resource_api_version": {
                    "enum": [
                        "AUTO",
                        0,
                        "V2",
                        1,
                        "V3",
                        2
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "description": "API version for xDS resources. This implies the type URLs that the client\n will request for resources and the resource type that the client will in\n turn expect to be delivered."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "Configuration for :ref:`listeners \u003cconfig_listeners\u003e`, :ref:`clusters\n \u003cconfig_cluster_manager\u003e`, :ref:`routes\n \u003cenvoy_api_msg_config.route.v3.RouteConfiguration\u003e`, :ref:`endpoints\n \u003carch_overview_service_discovery\u003e` etc. may either be sourced from the\n filesystem or from an xDS API source. Filesystem configs are watched with\n inotify for updates.\n [#next-free-field: 8]",
            "id": "envoy.config.core.v3.ConfigSource"
        },
        "envoy.config.core.v3.DataSource": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": {
                "filename": {
                    "type": "string",
                    "description": "Local filesystem data source."
                },
                "inline_bytes": {
                    "type": "string",
                    "description": "Bytes inlined in the configuration."
                },
                "inline_string": {
                    "type": "string",
                    "description": "String inlined in the configuration."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "Data source consisting of either a file or an inline value.",
            "id": "envoy.config.core.v3.DataSource"
        }
    }
}