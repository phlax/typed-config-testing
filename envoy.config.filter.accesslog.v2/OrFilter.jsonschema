{"$schema": "http://json-schema.org/draft-04/schema#", "$ref": "#/definitions/OrFilter", "definitions": {"OrFilter": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"filters": {"items": {"$schema": "http://json-schema.org/draft-04/schema#", "$ref": "#/definitions/envoy.config.filter.accesslog.v2.AccessLogFilter"}, "type": "array"}}, "additionalProperties": true, "type": "object", "description": "Performs a logical \u201cor\u201d operation on the result of each individual filter.\n Filters are evaluated sequentially and if one of them returns true, the\n filter returns true immediately.", "id": "OrFilter"}, "envoy.config.filter.accesslog.v2.AccessLogFilter": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"status_code_filter": {"properties": {"comparison": {"$ref": "#/definitions/envoy.config.filter.accesslog.v2.ComparisonFilter", "additionalProperties": true, "description": "Comparison."}}, "additionalProperties": true, "type": "object", "description": "Status code filter."}, "duration_filter": {"properties": {"comparison": {"$ref": "#/definitions/envoy.config.filter.accesslog.v2.ComparisonFilter", "additionalProperties": true, "description": "Comparison."}}, "additionalProperties": true, "type": "object", "description": "Duration filter."}, "not_health_check_filter": {"additionalProperties": true, "type": "object", "description": "Not health check filter."}, "traceable_filter": {"additionalProperties": true, "type": "object", "description": "Traceable filter."}, "runtime_filter": {"properties": {"runtime_key": {"type": "string", "description": "Runtime key to get an optional overridden numerator for use in the *percent_sampled* field.\n If found in runtime, this value will replace the default numerator."}, "percent_sampled": {"properties": {"numerator": {"type": "integer", "description": "Specifies the numerator. Defaults to 0."}, "denominator": {"enum": ["HUNDRED", 0, "TEN_THOUSAND", 1, "MILLION", 2], "oneOf": [{"type": "string"}, {"type": "integer"}], "description": "Specifies the denominator. If the denominator specified is less than the numerator, the final\n fractional percentage is capped at 1 (100%)."}}, "additionalProperties": true, "type": "object", "description": "The default sampling percentage. If not specified, defaults to 0% with denominator of 100."}, "use_independent_randomness": {"type": "boolean", "description": "By default, sampling pivots on the header\n :ref:`x-request-id<config_http_conn_man_headers_x-request-id>` being present. If\n :ref:`x-request-id<config_http_conn_man_headers_x-request-id>` is present, the filter will\n consistently sample across multiple hosts based on the runtime key value and the value\n extracted from :ref:`x-request-id<config_http_conn_man_headers_x-request-id>`. If it is\n missing, or *use_independent_randomness* is set to true, the filter will randomly sample based\n on the runtime key value alone. *use_independent_randomness* can be used for logging kill\n switches within complex nested :ref:`AndFilter\n <envoy_api_msg_config.filter.accesslog.v2.AndFilter>` and :ref:`OrFilter\n <envoy_api_msg_config.filter.accesslog.v2.OrFilter>` blocks that are easier to reason about\n from a probability perspective (i.e., setting to true will cause the filter to behave like\n an independent random variable when composed within logical operator filters)."}}, "additionalProperties": true, "type": "object", "description": "Runtime filter."}, "and_filter": {"properties": {"filters": {"items": {"$schema": "http://json-schema.org/draft-04/schema#", "$ref": "#/definitions/envoy.config.filter.accesslog.v2.AccessLogFilter"}, "type": "array"}}, "additionalProperties": true, "type": "object", "description": "And filter."}, "or_filter": {"$ref": "#/definitions/OrFilter", "additionalProperties": true, "description": "Or filter."}, "header_filter": {"properties": {"header": {"properties": {"name": {"type": "string", "description": "Specifies the name of the header in the request."}, "exact_match": {"type": "string", "description": "If specified, header match will be performed based on the value of the header."}, "regex_match": {"type": "string", "description": "If specified, this regex string is a regular expression rule which implies the entire request\n header value must match the regex. The rule will not match if only a subsequence of the\n request header value matches the regex. The regex grammar used in the value field is defined\n `here <https://en.cppreference.com/w/cpp/regex/ecmascript>`_.\n\n Examples:\n\n * The regex ``\\d{3}`` matches the value *123*\n * The regex ``\\d{3}`` does not match the value *1234*\n * The regex ``\\d{3}`` does not match the value *123.456*\n\n .. attention::\n   This field has been deprecated in favor of `safe_regex_match` as it is not safe for use\n   with untrusted input in all cases."}, "safe_regex_match": {"properties": {"google_re2": {"properties": {"max_program_size": {"additionalProperties": true, "type": "integer", "description": "This field controls the RE2 \"program size\" which is a rough estimate of how complex a\n compiled regex is to evaluate. A regex that has a program size greater than the configured\n value will fail to compile. In this case, the configured max program size can be increased\n or the regex can be simplified. If not specified, the default is 100.\n\n This field is deprecated; regexp validation should be performed on the management server\n instead of being done by each individual client."}}, "additionalProperties": true, "type": "object", "description": "Google's RE2 regex engine."}, "regex": {"type": "string", "description": "The regex match string. The string must be supported by the configured engine."}}, "additionalProperties": true, "type": "object", "description": "If specified, this regex string is a regular expression rule which implies the entire request\n header value must match the regex. The rule will not match if only a subsequence of the\n request header value matches the regex."}, "range_match": {"properties": {"start": {"type": "string", "description": "start of the range (inclusive)"}, "end": {"type": "string", "description": "end of the range (exclusive)"}}, "additionalProperties": true, "type": "object", "description": "If specified, header match will be performed based on range.\n The rule will match if the request header value is within this range.\n The entire request header value must represent an integer in base 10 notation: consisting of\n an optional plus or minus sign followed by a sequence of digits. The rule will not match if\n the header value does not represent an integer. Match will fail for empty values, floating\n point numbers or if only a subsequence of the header value is an integer.\n\n Examples:\n\n * For range [-10,0), route will match for header value -1, but not for 0, \"somestring\", 10.9,\n   \"-1somestring\""}, "present_match": {"type": "boolean", "description": "If specified, header match will be performed based on whether the header is in the\n request."}, "prefix_match": {"type": "string", "description": "If specified, header match will be performed based on the prefix of the header value.\n Note: empty prefix is not allowed, please use present_match instead.\n\n Examples:\n\n * The prefix *abcd* matches the value *abcdxyz*, but not for *abcxyz*."}, "suffix_match": {"type": "string", "description": "If specified, header match will be performed based on the suffix of the header value.\n Note: empty suffix is not allowed, please use present_match instead.\n\n Examples:\n\n * The suffix *abcd* matches the value *xyzabcd*, but not for *xyzbcd*."}, "invert_match": {"type": "boolean", "description": "If specified, the match result will be inverted before checking. Defaults to false.\n\n Examples:\n\n * The regex ``\\d{3}`` does not match the value *1234*, so it will match when inverted.\n * The range [-10,0) will match the value -1, so it will not match when inverted."}}, "additionalProperties": true, "type": "object", "description": "Only requests with a header which matches the specified HeaderMatcher will pass the filter\n check."}}, "additionalProperties": true, "type": "object", "description": "Header filter."}, "response_flag_filter": {"properties": {"flags": {"items": {"type": "string"}, "type": "array", "description": "Only responses with the any of the flags listed in this field will be logged.\n This field is optional. If it is not specified, then any response flag will pass\n the filter check."}}, "additionalProperties": true, "type": "object", "description": "Response flag filter."}, "grpc_status_filter": {"properties": {"statuses": {"items": {"enum": ["OK", 0, "CANCELED", 1, "UNKNOWN", 2, "INVALID_ARGUMENT", 3, "DEADLINE_EXCEEDED", 4, "NOT_FOUND", 5, "ALREADY_EXISTS", 6, "PERMISSION_DENIED", 7, "RESOURCE_EXHAUSTED", 8, "FAILED_PRECONDITION", 9, "ABORTED", 10, "OUT_OF_RANGE", 11, "UNIMPLEMENTED", 12, "INTERNAL", 13, "UNAVAILABLE", 14, "DATA_LOSS", 15, "UNAUTHENTICATED", 16]}, "type": "array", "description": "Logs only responses that have any one of the gRPC statuses in this field."}, "exclude": {"type": "boolean", "description": "If included and set to true, the filter will instead block all responses with a gRPC status or\n inferred gRPC status enumerated in statuses, and allow all other responses."}}, "additionalProperties": true, "type": "object", "description": "gRPC status filter."}, "extension_filter": {"properties": {"name": {"type": "string", "description": "The name of the filter implementation to instantiate. The name must\n match a statically registered filter."}, "config": {"properties": {"fields": {"additionalProperties": {"additionalProperties": true, "type": "object"}, "type": "object", "description": "Unordered map of dynamically typed values."}}, "additionalProperties": true, "type": "object"}, "typed_config": {"properties": {"type_url": {"type": "string", "description": "A URL/resource name that uniquely identifies the type of the serialized\n protocol buffer message. This string must contain at least\n one \"/\" character. The last segment of the URL's path must represent\n the fully qualified name of the type (as in\n `path/google.protobuf.Duration`). The name should be in a canonical form\n (e.g., leading \".\" is not accepted).\n\n In practice, teams usually precompile into the binary all types that they\n expect it to use in the context of Any. However, for URLs which use the\n scheme `http`, `https`, or no scheme, one can optionally set up a type\n server that maps type URLs to message definitions as follows:\n\n * If no scheme is provided, `https` is assumed.\n * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n   value in binary format, or produce an error.\n * Applications are allowed to cache lookup results based on the\n   URL, or have them precompiled into a binary to avoid any\n   lookup. Therefore, binary compatibility needs to be preserved\n   on changes to types. (Use versioned type names to manage\n   breaking changes.)\n\n Note: this functionality is not currently available in the official\n protobuf release, and it is not used for type URLs beginning with\n type.googleapis.com.\n\n Schemes other than `http`, `https` (or the empty scheme) might be\n used with implementation specific semantics."}, "value": {"type": "string", "description": "Must be a valid serialized protocol buffer of the above specified type."}}, "additionalProperties": true, "type": "object"}}, "additionalProperties": true, "type": "object", "description": "Extension filter."}}, "additionalProperties": true, "type": "object", "description": "[#next-free-field: 12]", "id": "envoy.config.filter.accesslog.v2.AccessLogFilter"}, "envoy.config.filter.accesslog.v2.ComparisonFilter": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"op": {"enum": ["EQ", 0, "GE", 1, "LE", 2], "oneOf": [{"type": "string"}, {"type": "integer"}], "description": "Comparison operator."}, "value": {"properties": {"default_value": {"type": "integer", "description": "Default value if runtime value is not available."}, "runtime_key": {"type": "string", "description": "Runtime key to get value for comparison. This value is used if defined."}}, "additionalProperties": true, "type": "object", "description": "Value to compare against."}}, "additionalProperties": true, "type": "object", "description": "Filter on an integer comparison.", "id": "envoy.config.filter.accesslog.v2.ComparisonFilter"}}}