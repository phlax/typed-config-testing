{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "properties": {
        "runtime_key": {
            "type": "string",
            "description": "Runtime key to get an optional overridden numerator for use in the *percent_sampled* field.\n If found in runtime, this value will replace the default numerator."
        },
        "percent_sampled": {
            "properties": {
                "numerator": {
                    "type": "integer",
                    "description": "Specifies the numerator. Defaults to 0."
                },
                "denominator": {
                    "enum": [
                        "HUNDRED",
                        0,
                        "TEN_THOUSAND",
                        1,
                        "MILLION",
                        2
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "description": "Specifies the denominator. If the denominator specified is less than the numerator, the final\n fractional percentage is capped at 1 (100%)."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "The default sampling percentage. If not specified, defaults to 0% with denominator of 100."
        },
        "use_independent_randomness": {
            "type": "boolean",
            "description": "By default, sampling pivots on the header\n :ref:`x-request-id\u003cconfig_http_conn_man_headers_x-request-id\u003e` being present. If\n :ref:`x-request-id\u003cconfig_http_conn_man_headers_x-request-id\u003e` is present, the filter will\n consistently sample across multiple hosts based on the runtime key value and the value\n extracted from :ref:`x-request-id\u003cconfig_http_conn_man_headers_x-request-id\u003e`. If it is\n missing, or *use_independent_randomness* is set to true, the filter will randomly sample based\n on the runtime key value alone. *use_independent_randomness* can be used for logging kill\n switches within complex nested :ref:`AndFilter\n \u003cenvoy_api_msg_config.filter.accesslog.v2.AndFilter\u003e` and :ref:`OrFilter\n \u003cenvoy_api_msg_config.filter.accesslog.v2.OrFilter\u003e` blocks that are easier to reason about\n from a probability perspective (i.e., setting to true will cause the filter to behave like\n an independent random variable when composed within logical operator filters)."
        }
    },
    "additionalProperties": true,
    "type": "object",
    "description": "Filters for random sampling of requests."
}