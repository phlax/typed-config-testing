{"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"stat_prefix": {"type": "string", "description": "The prefix to use when emitting statistics."}, "grpc_service": {"properties": {"envoy_grpc": {"properties": {"cluster_name": {"type": "string", "description": "The name of the upstream gRPC cluster. SSL credentials will be supplied\n in the :ref:`Cluster <envoy_api_msg_config.cluster.v4alpha.Cluster>` :ref:`transport_socket\n <envoy_api_field_config.cluster.v4alpha.Cluster.transport_socket>`."}, "authority": {"type": "string", "description": "The `:authority` header in the grpc request. If this field is not set, the authority header value will be `cluster_name`.\n Note that this authority does not override the SNI. The SNI is provided by the transport socket of the cluster."}}, "additionalProperties": true, "type": "object", "description": "Envoy's in-built gRPC client.\n See the :ref:`gRPC services overview <arch_overview_grpc_services>`\n documentation for discussion on gRPC client selection."}, "google_grpc": {"properties": {"target_uri": {"type": "string", "description": "The target URI when using the `Google C++ gRPC client\n <https://github.com/grpc/grpc>`_. SSL credentials will be supplied in\n :ref:`channel_credentials <envoy_api_field_config.core.v4alpha.GrpcService.GoogleGrpc.channel_credentials>`."}, "channel_credentials": {"properties": {"ssl_credentials": {"properties": {"root_certs": {"$ref": "#/definitions/envoy.config.core.v4alpha.DataSource", "additionalProperties": true, "description": "PEM encoded server root certificates."}, "private_key": {"$ref": "#/definitions/envoy.config.core.v4alpha.DataSource", "additionalProperties": true, "description": "PEM encoded client private key."}, "cert_chain": {"$ref": "#/definitions/envoy.config.core.v4alpha.DataSource", "additionalProperties": true, "description": "PEM encoded client certificate chain."}}, "additionalProperties": true, "type": "object"}, "google_default": {"additionalProperties": true, "type": "object", "description": "https://grpc.io/grpc/cpp/namespacegrpc.html#a6beb3ac70ff94bd2ebbd89b8f21d1f61"}, "local_credentials": {"additionalProperties": true, "type": "object"}}, "additionalProperties": true, "type": "object"}, "call_credentials": {"items": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"access_token": {"type": "string", "description": "Access token credentials.\n https://grpc.io/grpc/cpp/namespacegrpc.html#ad3a80da696ffdaea943f0f858d7a360d."}, "google_compute_engine": {"additionalProperties": true, "type": "object", "description": "Google Compute Engine credentials.\n https://grpc.io/grpc/cpp/namespacegrpc.html#a6beb3ac70ff94bd2ebbd89b8f21d1f61"}, "google_refresh_token": {"type": "string", "description": "Google refresh token credentials.\n https://grpc.io/grpc/cpp/namespacegrpc.html#a96901c997b91bc6513b08491e0dca37c."}, "service_account_jwt_access": {"properties": {"json_key": {"type": "string"}, "token_lifetime_seconds": {"type": "string"}}, "additionalProperties": true, "type": "object", "description": "Service Account JWT Access credentials.\n https://grpc.io/grpc/cpp/namespacegrpc.html#a92a9f959d6102461f66ee973d8e9d3aa."}, "google_iam": {"properties": {"authorization_token": {"type": "string"}, "authority_selector": {"type": "string"}}, "additionalProperties": true, "type": "object", "description": "Google IAM credentials.\n https://grpc.io/grpc/cpp/namespacegrpc.html#a9fc1fc101b41e680d47028166e76f9d0."}, "from_plugin": {"properties": {"name": {"type": "string"}, "typed_config": {"properties": {"type_url": {"type": "string", "description": "A URL/resource name that uniquely identifies the type of the serialized\n protocol buffer message. This string must contain at least\n one \"/\" character. The last segment of the URL's path must represent\n the fully qualified name of the type (as in\n `path/google.protobuf.Duration`). The name should be in a canonical form\n (e.g., leading \".\" is not accepted).\n\n In practice, teams usually precompile into the binary all types that they\n expect it to use in the context of Any. However, for URLs which use the\n scheme `http`, `https`, or no scheme, one can optionally set up a type\n server that maps type URLs to message definitions as follows:\n\n * If no scheme is provided, `https` is assumed.\n * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n   value in binary format, or produce an error.\n * Applications are allowed to cache lookup results based on the\n   URL, or have them precompiled into a binary to avoid any\n   lookup. Therefore, binary compatibility needs to be preserved\n   on changes to types. (Use versioned type names to manage\n   breaking changes.)\n\n Note: this functionality is not currently available in the official\n protobuf release, and it is not used for type URLs beginning with\n type.googleapis.com.\n\n Schemes other than `http`, `https` (or the empty scheme) might be\n used with implementation specific semantics."}, "value": {"type": "string", "description": "Must be a valid serialized protocol buffer of the above specified type."}}, "additionalProperties": true, "type": "object"}}, "additionalProperties": true, "type": "object", "description": "Custom authenticator credentials.\n https://grpc.io/grpc/cpp/namespacegrpc.html#a823c6a4b19ffc71fb33e90154ee2ad07.\n https://grpc.io/docs/guides/auth.html#extending-grpc-to-support-other-authentication-mechanisms."}, "sts_service": {"properties": {"token_exchange_service_uri": {"type": "string", "description": "URI of the token exchange service that handles token exchange requests.\n [#comment:TODO(asraa): Add URI validation when implemented. Tracked by\n https://github.com/envoyproxy/protoc-gen-validate/issues/303]"}, "resource": {"type": "string", "description": "Location of the target service or resource where the client\n intends to use the requested security token."}, "audience": {"type": "string", "description": "Logical name of the target service where the client intends to\n use the requested security token."}, "scope": {"type": "string", "description": "The desired scope of the requested security token in the\n context of the service or resource where the token will be used."}, "requested_token_type": {"type": "string", "description": "Type of the requested security token."}, "subject_token_path": {"type": "string", "description": "The path of subject token, a security token that represents the\n identity of the party on behalf of whom the request is being made."}, "subject_token_type": {"type": "string", "description": "Type of the subject token."}, "actor_token_path": {"type": "string", "description": "The path of actor token, a security token that represents the identity\n of the acting party. The acting party is authorized to use the\n requested security token and act on behalf of the subject."}, "actor_token_type": {"type": "string", "description": "Type of the actor token."}}, "additionalProperties": true, "type": "object", "description": "Custom security token service which implements OAuth 2.0 token exchange.\n https://tools.ietf.org/html/draft-ietf-oauth-token-exchange-16\n See https://github.com/grpc/grpc/pull/19587."}}, "additionalProperties": true, "type": "object", "description": "[#next-free-field: 8]"}, "type": "array", "description": "A set of call credentials that can be composed with `channel credentials\n <https://grpc.io/docs/guides/auth.html#credential-types>`_."}, "stat_prefix": {"type": "string", "description": "The human readable prefix to use when emitting statistics for the gRPC\n service.\n\n .. csv-table::\n    :header: Name, Type, Description\n    :widths: 1, 1, 2\n\n    streams_total, Counter, Total number of streams opened\n    streams_closed_<gRPC status code>, Counter, Total streams closed with <gRPC status code>"}, "credentials_factory_name": {"type": "string", "description": "The name of the Google gRPC credentials factory to use. This must have been registered with\n Envoy. If this is empty, a default credentials factory will be used that sets up channel\n credentials based on other configuration parameters."}, "config": {"properties": {"fields": {"additionalProperties": {"additionalProperties": true, "type": "object"}, "type": "object", "description": "Unordered map of dynamically typed values."}}, "additionalProperties": true, "type": "object", "description": "Additional configuration for site-specific customizations of the Google\n gRPC library."}, "per_stream_buffer_limit_bytes": {"additionalProperties": true, "type": "integer", "description": "How many bytes each stream can buffer internally.\n If not set an implementation defined default is applied (1MiB)."}, "channel_args": {"properties": {"args": {"additionalProperties": {"properties": {"string_value": {"type": "string"}, "int_value": {"type": "string"}}, "additionalProperties": true, "type": "object"}, "type": "object", "description": "See grpc_types.h GRPC_ARG #defines for keys that work here."}}, "additionalProperties": true, "type": "object", "description": "Custom channels args."}}, "additionalProperties": true, "type": "object", "description": "`Google C++ gRPC client <https://github.com/grpc/grpc>`_\n See the :ref:`gRPC services overview <arch_overview_grpc_services>`\n documentation for discussion on gRPC client selection."}, "timeout": {"properties": {"seconds": {"type": "string", "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"}, "nanos": {"type": "integer", "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."}}, "additionalProperties": true, "type": "object", "description": "The timeout for the gRPC request. This is the timeout for a specific\n request."}, "initial_metadata": {"items": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"key": {"type": "string", "description": "Header name."}, "value": {"type": "string", "description": "Header value.\n\n The same :ref:`format specifier <config_access_log_format>` as used for\n :ref:`HTTP access logging <config_access_log>` applies here, however\n unknown header values are replaced with the empty string instead of `-`."}}, "additionalProperties": true, "type": "object", "description": "Header name/value pair."}, "type": "array", "description": "Additional metadata to include in streams initiated to the GrpcService. This can be used for\n scenarios in which additional ad hoc authorization headers (e.g. ``x-foo-bar: baz-key``) are to\n be injected. For more information, including details on header value syntax, see the\n documentation on :ref:`custom request headers\n <config_http_conn_man_headers_custom_request_headers>`."}}, "additionalProperties": true, "type": "object", "description": "The external authorization gRPC service configuration.\n The default timeout is set to 200ms by this filter."}, "failure_mode_allow": {"type": "boolean", "description": "The filter's behaviour in case the external authorization service does\n not respond back. When it is set to true, Envoy will also allow traffic in case of\n communication failure between authorization service and the proxy.\n Defaults to false."}, "include_peer_certificate": {"type": "boolean", "description": "Specifies if the peer certificate is sent to the external service.\n\n When this field is true, Envoy will include the peer X.509 certificate, if available, in the\n :ref:`certificate<envoy_api_field_service.auth.v4alpha.AttributeContext.Peer.certificate>`."}, "transport_api_version": {"enum": ["DEPRECATED_AND_UNAVAILABLE_DO_NOT_USE", 0, "V3", 2], "oneOf": [{"type": "string"}, {"type": "integer"}], "description": "API version for ext_authz transport protocol. This describes the ext_authz gRPC endpoint and\n version of Check{Request,Response} used on the wire."}, "filter_enabled_metadata": {"properties": {"filter": {"type": "string", "description": "The filter name to retrieve the Struct from the Metadata."}, "path": {"items": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"key": {"type": "string", "description": "If specified, use the key to retrieve the value in a Struct."}}, "additionalProperties": true, "type": "object", "description": "Specifies the segment in a path to retrieve value from Metadata.\n Note: Currently it's not supported to retrieve a value from a list in Metadata. This means that\n if the segment key refers to a list, it has to be the last segment in a path."}, "type": "array", "description": "The path to retrieve the Value from the Struct."}, "value": {"$ref": "#/definitions/envoy.type.matcher.v4alpha.ValueMatcher", "additionalProperties": true, "description": "The MetadataMatcher is matched if the value retrieved by path is matched to this value."}}, "additionalProperties": true, "type": "object", "description": "Specifies if the filter is enabled with metadata matcher.\n If this field is not specified, the filter will be enabled for all requests."}}, "additionalProperties": true, "type": "object", "description": "[#protodoc-title: Network External Authorization ]\n The network layer external authorization service configuration\n :ref:`configuration overview <config_network_filters_ext_authz>`.\n [#extension: envoy.filters.network.ext_authz]\n\nExternal Authorization filter calls out to an external service over the\n gRPC Authorization API defined by\n :ref:`CheckRequest <envoy_api_msg_service.auth.v4alpha.CheckRequest>`.\n A failed check will cause this filter to close the TCP connection.\n [#next-free-field: 7]", "definitions": {"envoy.config.core.v4alpha.DataSource": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"filename": {"type": "string", "description": "Local filesystem data source."}, "inline_bytes": {"type": "string", "description": "Bytes inlined in the configuration."}, "inline_string": {"type": "string", "description": "String inlined in the configuration."}}, "additionalProperties": true, "type": "object", "description": "Data source consisting of either a file or an inline value.", "id": "envoy.config.core.v4alpha.DataSource"}, "envoy.type.matcher.v4alpha.ValueMatcher": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"null_match": {"additionalProperties": true, "type": "object", "description": "If specified, a match occurs if and only if the target value is a NullValue."}, "double_match": {"properties": {"range": {"properties": {"start": {"type": "number", "description": "start of the range (inclusive)"}, "end": {"type": "number", "description": "end of the range (exclusive)"}}, "additionalProperties": true, "type": "object", "description": "If specified, the input double value must be in the range specified here.\n Note: The range is using half-open interval semantics [start, end)."}, "exact": {"type": "number", "description": "If specified, the input double value must be equal to the value specified here."}}, "additionalProperties": true, "type": "object", "description": "If specified, a match occurs if and only if the target value is a double value and is\n matched to this field."}, "string_match": {"properties": {"exact": {"type": "string", "description": "The input string must match exactly the string specified here.\n\n Examples:\n\n * *abc* only matches the value *abc*."}, "prefix": {"type": "string", "description": "The input string must have the prefix specified here.\n Note: empty prefix is not allowed, please use regex instead.\n\n Examples:\n\n * *abc* matches the value *abc.xyz*"}, "suffix": {"type": "string", "description": "The input string must have the suffix specified here.\n Note: empty prefix is not allowed, please use regex instead.\n\n Examples:\n\n * *abc* matches the value *xyz.abc*"}, "safe_regex": {"properties": {"google_re2": {"additionalProperties": true, "type": "object", "description": "Google's RE2 regex engine."}, "regex": {"type": "string", "description": "The regex match string. The string must be supported by the configured engine."}}, "additionalProperties": true, "type": "object", "description": "The input string must match the regular expression specified here."}, "contains": {"type": "string", "description": "The input string must have the substring specified here.\n Note: empty contains match is not allowed, please use regex instead.\n\n Examples:\n\n * *abc* matches the value *xyz.abc.def*"}, "ignore_case": {"type": "boolean", "description": "If true, indicates the exact/prefix/suffix matching should be case insensitive. This has no\n effect for the safe_regex match.\n For example, the matcher *data* will match both input string *Data* and *data* if set to true."}}, "additionalProperties": true, "type": "object", "description": "If specified, a match occurs if and only if the target value is a string value and is\n matched to this field."}, "bool_match": {"type": "boolean", "description": "If specified, a match occurs if and only if the target value is a bool value and is equal\n to this field."}, "present_match": {"type": "boolean", "description": "If specified, value match will be performed based on whether the path is referring to a\n valid primitive value in the metadata. If the path is referring to a non-primitive value,\n the result is always not matched."}, "list_match": {"properties": {"one_of": {"$ref": "#/definitions/envoy.type.matcher.v4alpha.ValueMatcher", "additionalProperties": true, "description": "If specified, at least one of the values in the list must match the value specified."}}, "additionalProperties": true, "type": "object", "description": "If specified, a match occurs if and only if the target value is a list value and\n is matched to this field."}}, "additionalProperties": true, "type": "object", "description": "[#protodoc-title: Value matcher]\n\nSpecifies the way to match a ProtobufWkt::Value. Primitive values and ListValue are supported.\n StructValue is not supported and is always not matched.\n [#next-free-field: 7]", "id": "envoy.type.matcher.v4alpha.ValueMatcher"}}}