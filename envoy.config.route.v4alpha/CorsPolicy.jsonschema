{"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"allow_origin_string_match": {"items": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"exact": {"type": "string", "description": "The input string must match exactly the string specified here.\n\n Examples:\n\n * *abc* only matches the value *abc*."}, "prefix": {"type": "string", "description": "The input string must have the prefix specified here.\n Note: empty prefix is not allowed, please use regex instead.\n\n Examples:\n\n * *abc* matches the value *abc.xyz*"}, "suffix": {"type": "string", "description": "The input string must have the suffix specified here.\n Note: empty prefix is not allowed, please use regex instead.\n\n Examples:\n\n * *abc* matches the value *xyz.abc*"}, "safe_regex": {"properties": {"google_re2": {"additionalProperties": true, "type": "object", "description": "Google's RE2 regex engine."}, "regex": {"type": "string", "description": "The regex match string. The string must be supported by the configured engine."}}, "additionalProperties": true, "type": "object", "description": "The input string must match the regular expression specified here."}, "contains": {"type": "string", "description": "The input string must have the substring specified here.\n Note: empty contains match is not allowed, please use regex instead.\n\n Examples:\n\n * *abc* matches the value *xyz.abc.def*"}, "ignore_case": {"type": "boolean", "description": "If true, indicates the exact/prefix/suffix matching should be case insensitive. This has no\n effect for the safe_regex match.\n For example, the matcher *data* will match both input string *Data* and *data* if set to true."}}, "additionalProperties": true, "type": "object", "description": "[#protodoc-title: String matcher]\n\nSpecifies the way to match a string.\n [#next-free-field: 8]"}, "type": "array", "description": "Specifies string patterns that match allowed origins. An origin is allowed if any of the\n string matchers match."}, "allow_methods": {"type": "string", "description": "Specifies the content for the *access-control-allow-methods* header."}, "allow_headers": {"type": "string", "description": "Specifies the content for the *access-control-allow-headers* header."}, "expose_headers": {"type": "string", "description": "Specifies the content for the *access-control-expose-headers* header."}, "max_age": {"type": "string", "description": "Specifies the content for the *access-control-max-age* header."}, "allow_credentials": {"additionalProperties": true, "type": "boolean", "description": "Specifies whether the resource allows credentials."}, "filter_enabled": {"$ref": "#/definitions/envoy.config.core.v4alpha.RuntimeFractionalPercent", "additionalProperties": true, "description": "Specifies the % of requests for which the CORS filter is enabled.\n\n If neither ``enabled``, ``filter_enabled``, nor ``shadow_enabled`` are specified, the CORS\n filter will be enabled for 100% of the requests.\n\n If :ref:`runtime_key <envoy_api_field_config.core.v4alpha.RuntimeFractionalPercent.runtime_key>` is\n specified, Envoy will lookup the runtime key to get the percentage of requests to filter."}, "shadow_enabled": {"$ref": "#/definitions/envoy.config.core.v4alpha.RuntimeFractionalPercent", "additionalProperties": true, "description": "Specifies the % of requests for which the CORS policies will be evaluated and tracked, but not\n enforced.\n\n This field is intended to be used when ``filter_enabled`` and ``enabled`` are off. One of those\n fields have to explicitly disable the filter in order for this setting to take effect.\n\n If :ref:`runtime_key <envoy_api_field_config.core.v4alpha.RuntimeFractionalPercent.runtime_key>` is specified,\n Envoy will lookup the runtime key to get the percentage of requests for which it will evaluate\n and track the request's *Origin* to determine if it's valid but will not enforce any policies."}}, "additionalProperties": true, "type": "object", "description": "[#next-free-field: 12]", "definitions": {"envoy.config.core.v4alpha.RuntimeFractionalPercent": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"default_value": {"properties": {"numerator": {"type": "integer", "description": "Specifies the numerator. Defaults to 0."}, "denominator": {"enum": ["HUNDRED", 0, "TEN_THOUSAND", 1, "MILLION", 2], "oneOf": [{"type": "string"}, {"type": "integer"}], "description": "Specifies the denominator. If the denominator specified is less than the numerator, the final\n fractional percentage is capped at 1 (100%)."}}, "additionalProperties": true, "type": "object", "description": "Default value if the runtime value's for the numerator/denominator keys are not available."}, "runtime_key": {"type": "string", "description": "Runtime key for a YAML representation of a FractionalPercent."}}, "additionalProperties": true, "type": "object", "description": "Runtime derived FractionalPercent with defaults for when the numerator or denominator is not\n specified via a runtime key.\n\n .. note::\n\n   Parsing of the runtime key's data is implemented such that it may be represented as a\n   :ref:`FractionalPercent <envoy_api_msg_type.v3.FractionalPercent>` proto represented as JSON/YAML\n   and may also be represented as an integer with the assumption that the value is an integral\n   percentage out of 100. For instance, a runtime key lookup returning the value \"42\" would parse\n   as a `FractionalPercent` whose numerator is 42 and denominator is HUNDRED.", "id": "envoy.config.core.v4alpha.RuntimeFractionalPercent"}}}