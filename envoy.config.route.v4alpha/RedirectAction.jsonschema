{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "properties": {
        "https_redirect": {
            "type": "boolean",
            "description": "The scheme portion of the URL will be swapped with \"https\"."
        },
        "scheme_redirect": {
            "type": "string",
            "description": "The scheme portion of the URL will be swapped with this value."
        },
        "host_redirect": {
            "type": "string",
            "description": "The host portion of the URL will be swapped with this value."
        },
        "port_redirect": {
            "type": "integer",
            "description": "The port value of the URL will be swapped with this value."
        },
        "path_redirect": {
            "type": "string",
            "description": "The path portion of the URL will be swapped with this value.\n Please note that query string in path_redirect will override the\n request's query string and will not be stripped.\n\n For example, let's say we have the following routes:\n\n - match: { path: \"/old-path-1\" }\n   redirect: { path_redirect: \"/new-path-1\" }\n - match: { path: \"/old-path-2\" }\n   redirect: { path_redirect: \"/new-path-2\", strip-query: \"true\" }\n - match: { path: \"/old-path-3\" }\n   redirect: { path_redirect: \"/new-path-3?foo=1\", strip_query: \"true\" }\n\n 1. if request uri is \"/old-path-1?bar=1\", users will be redirected to \"/new-path-1?bar=1\"\n 2. if request uri is \"/old-path-2?bar=1\", users will be redirected to \"/new-path-2\"\n 3. if request uri is \"/old-path-3?bar=1\", users will be redirected to \"/new-path-3?foo=1\""
        },
        "prefix_rewrite": {
            "type": "string",
            "description": "Indicates that during redirection, the matched prefix (or path)\n should be swapped with this value. This option allows redirect URLs be dynamically created\n based on the request.\n\n .. attention::\n\n   Pay attention to the use of trailing slashes as mentioned in\n   :ref:`RouteAction's prefix_rewrite \u003cenvoy_api_field_config.route.v4alpha.RouteAction.prefix_rewrite\u003e`."
        },
        "regex_rewrite": {
            "properties": {
                "pattern": {
                    "properties": {
                        "google_re2": {
                            "additionalProperties": true,
                            "type": "object",
                            "description": "Google's RE2 regex engine."
                        },
                        "regex": {
                            "type": "string",
                            "description": "The regex match string. The string must be supported by the configured engine."
                        }
                    },
                    "additionalProperties": true,
                    "type": "object",
                    "description": "The regular expression used to find portions of a string (hereafter called\n the \"subject string\") that should be replaced. When a new string is\n produced during the substitution operation, the new string is initially\n the same as the subject string, but then all matches in the subject string\n are replaced by the substitution string. If replacing all matches isn't\n desired, regular expression anchors can be used to ensure a single match,\n so as to replace just one occurrence of a pattern. Capture groups can be\n used in the pattern to extract portions of the subject string, and then\n referenced in the substitution string."
                },
                "substitution": {
                    "type": "string",
                    "description": "The string that should be substituted into matching portions of the\n subject string during a substitution operation to produce a new string.\n Capture groups in the pattern can be referenced in the substitution\n string. Note, however, that the syntax for referring to capture groups is\n defined by the chosen regular expression engine. Google's `RE2\n \u003chttps://github.com/google/re2\u003e`_ regular expression engine uses a\n backslash followed by the capture group number to denote a numbered\n capture group. E.g., ``\\1`` refers to capture group 1, and ``\\2`` refers\n to capture group 2."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "Indicates that during redirect, portions of the path that match the\n pattern should be rewritten, even allowing the substitution of capture\n groups from the pattern into the new path as specified by the rewrite\n substitution string. This is useful to allow application paths to be\n rewritten in a way that is aware of segments with variable content like\n identifiers.\n\n Examples using Google's `RE2 \u003chttps://github.com/google/re2\u003e`_ engine:\n\n * The path pattern ``^/service/([^/]+)(/.*)$`` paired with a substitution\n   string of ``\\2/instance/\\1`` would transform ``/service/foo/v1/api``\n   into ``/v1/api/instance/foo``.\n\n * The pattern ``one`` paired with a substitution string of ``two`` would\n   transform ``/xxx/one/yyy/one/zzz`` into ``/xxx/two/yyy/two/zzz``.\n\n * The pattern ``^(.*?)one(.*)$`` paired with a substitution string of\n   ``\\1two\\2`` would replace only the first occurrence of ``one``,\n   transforming path ``/xxx/one/yyy/one/zzz`` into ``/xxx/two/yyy/one/zzz``.\n\n * The pattern ``(?i)/xxx/`` paired with a substitution string of ``/yyy/``\n   would do a case-insensitive match and transform path ``/aaa/XxX/bbb`` to\n   ``/aaa/yyy/bbb``."
        },
        "response_code": {
            "enum": [
                "MOVED_PERMANENTLY",
                0,
                "FOUND",
                1,
                "SEE_OTHER",
                2,
                "TEMPORARY_REDIRECT",
                3,
                "PERMANENT_REDIRECT",
                4
            ],
            "oneOf": [
                {
                    "type": "string"
                },
                {
                    "type": "integer"
                }
            ],
            "description": "The HTTP status code to use in the redirect response. The default response\n code is MOVED_PERMANENTLY (301)."
        },
        "strip_query": {
            "type": "boolean",
            "description": "Indicates that during redirection, the query portion of the URL will\n be removed. Default value is false."
        }
    },
    "additionalProperties": true,
    "type": "object",
    "description": "[#next-free-field: 10]"
}