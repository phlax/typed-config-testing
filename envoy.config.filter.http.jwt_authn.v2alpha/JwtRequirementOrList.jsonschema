{"$schema": "http://json-schema.org/draft-04/schema#", "$ref": "#/definitions/JwtRequirementOrList", "definitions": {"JwtRequirementOrList": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"requirements": {"items": {"$schema": "http://json-schema.org/draft-04/schema#", "$ref": "#/definitions/envoy.config.filter.http.jwt_authn.v2alpha.JwtRequirement"}, "type": "array", "description": "Specify a list of JwtRequirement."}}, "additionalProperties": true, "type": "object", "description": "This message specifies a list of RequiredProvider.\n Their results are OR-ed; if any one of them passes, the result is passed", "id": "JwtRequirementOrList"}, "envoy.config.filter.http.jwt_authn.v2alpha.JwtRequirement": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"provider_name": {"type": "string", "description": "Specify a required provider name."}, "provider_and_audiences": {"properties": {"provider_name": {"type": "string", "description": "Specify a required provider name."}, "audiences": {"items": {"type": "string"}, "type": "array", "description": "This field overrides the one specified in the JwtProvider."}}, "additionalProperties": true, "type": "object", "description": "Specify a required provider with audiences."}, "requires_any": {"$ref": "#/definitions/JwtRequirementOrList", "additionalProperties": true, "description": "Specify list of JwtRequirement. Their results are OR-ed.\n If any one of them passes, the result is passed."}, "requires_all": {"properties": {"requirements": {"items": {"$schema": "http://json-schema.org/draft-04/schema#", "$ref": "#/definitions/envoy.config.filter.http.jwt_authn.v2alpha.JwtRequirement"}, "type": "array", "description": "Specify a list of JwtRequirement."}}, "additionalProperties": true, "type": "object", "description": "Specify list of JwtRequirement. Their results are AND-ed.\n All of them must pass, if one of them fails or missing, it fails."}, "allow_missing_or_failed": {"additionalProperties": true, "type": "object", "description": "The requirement is always satisfied even if JWT is missing or the JWT\n verification fails. A typical usage is: this filter is used to only verify\n JWTs and pass the verified JWT payloads to another filter, the other filter\n will make decision. In this mode, all JWT tokens will be verified."}, "allow_missing": {"additionalProperties": true, "type": "object", "description": "The requirement is satisfied if JWT is missing, but failed if JWT is\n presented but invalid. Similar to allow_missing_or_failed, this is used\n to only verify JWTs and pass the verified payload to another filter. The\n different is this mode will reject requests with invalid tokens."}}, "additionalProperties": true, "type": "object", "description": "This message specifies a Jwt requirement. An empty message means JWT verification is not\n required. Here are some config examples:\n\n .. code-block:: yaml\n\n  # Example 1: not required with an empty message\n\n  # Example 2: require A\n  provider_name: provider-A\n\n  # Example 3: require A or B\n  requires_any:\n    requirements:\n      - provider_name: provider-A\n      - provider_name: provider-B\n\n  # Example 4: require A and B\n  requires_all:\n    requirements:\n      - provider_name: provider-A\n      - provider_name: provider-B\n\n  # Example 5: require A and (B or C)\n  requires_all:\n    requirements:\n      - provider_name: provider-A\n      - requires_any:\n        requirements:\n          - provider_name: provider-B\n          - provider_name: provider-C\n\n  # Example 6: require A or (B and C)\n  requires_any:\n    requirements:\n      - provider_name: provider-A\n      - requires_all:\n        requirements:\n          - provider_name: provider-B\n          - provider_name: provider-C\n\n  # Example 7: A is optional (if token from A is provided, it must be valid, but also allows\n  missing token.)\n  requires_any:\n    requirements:\n    - provider_name: provider-A\n    - allow_missing: {}\n\n  # Example 8: A is optional and B is required.\n  requires_all:\n    requirements:\n    - requires_any:\n        requirements:\n        - provider_name: provider-A\n        - allow_missing: {}\n    - provider_name: provider-B\n\n [#next-free-field: 7]", "id": "envoy.config.filter.http.jwt_authn.v2alpha.JwtRequirement"}}}