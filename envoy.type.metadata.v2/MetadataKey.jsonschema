{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "properties": {
        "key": {
            "type": "string",
            "description": "The key name of Metadata to retrieve the Struct from the metadata.\n Typically, it represents a builtin subsystem or custom extension."
        },
        "path": {
            "items": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "If specified, use the key to retrieve the value in a Struct."
                    }
                },
                "additionalProperties": true,
                "type": "object",
                "description": "Specifies the segment in a path to retrieve value from Metadata.\n Currently it is only supported to specify the key, i.e. field name, as one segment of a path."
            },
            "type": "array",
            "description": "The path to retrieve the Value from the Struct. It can be a prefix or a full path,\n e.g. ``[prop, xyz]`` for a struct or ``[prop, foo]`` for a string in the example,\n which depends on the particular scenario.\n\n Note: Due to that only the key type segment is supported, the path can not specify a list\n unless the list is the last segment."
        }
    },
    "additionalProperties": true,
    "type": "object",
    "description": "[#protodoc-title: Metadata]\n\nMetadataKey provides a general interface using `key` and `path` to retrieve value from\n :ref:`Metadata \u003cenvoy_api_msg_core.Metadata\u003e`.\n\n For example, for the following Metadata:\n\n .. code-block:: yaml\n\n    filter_metadata:\n      envoy.xxx:\n        prop:\n          foo: bar\n          xyz:\n            hello: envoy\n\n The following MetadataKey will retrieve a string value \"bar\" from the Metadata.\n\n .. code-block:: yaml\n\n    key: envoy.xxx\n    path:\n    - key: prop\n    - key: foo"
}