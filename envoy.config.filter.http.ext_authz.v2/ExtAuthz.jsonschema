{"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"grpc_service": {"properties": {"envoy_grpc": {"properties": {"cluster_name": {"type": "string", "description": "The name of the upstream gRPC cluster. SSL credentials will be supplied\n in the :ref:`Cluster <envoy_api_msg_Cluster>` :ref:`transport_socket\n <envoy_api_field_Cluster.transport_socket>`."}}, "additionalProperties": true, "type": "object", "description": "Envoy's in-built gRPC client.\n See the :ref:`gRPC services overview <arch_overview_grpc_services>`\n documentation for discussion on gRPC client selection."}, "google_grpc": {"properties": {"target_uri": {"type": "string", "description": "The target URI when using the `Google C++ gRPC client\n <https://github.com/grpc/grpc>`_. SSL credentials will be supplied in\n :ref:`channel_credentials <envoy_api_field_core.GrpcService.GoogleGrpc.channel_credentials>`."}, "channel_credentials": {"properties": {"ssl_credentials": {"properties": {"root_certs": {"$ref": "https://phlax.github.io/typed-config-testing/envoy.api.v2.core/DataSource.jsonschema", "additionalProperties": true, "description": "PEM encoded server root certificates."}, "private_key": {"$ref": "https://phlax.github.io/typed-config-testing/envoy.api.v2.core/DataSource.jsonschema", "additionalProperties": true, "description": "PEM encoded client private key."}, "cert_chain": {"$ref": "https://phlax.github.io/typed-config-testing/envoy.api.v2.core/DataSource.jsonschema", "additionalProperties": true, "description": "PEM encoded client certificate chain."}}, "additionalProperties": true, "type": "object"}, "google_default": {"additionalProperties": true, "type": "object", "description": "https://grpc.io/grpc/cpp/namespacegrpc.html#a6beb3ac70ff94bd2ebbd89b8f21d1f61"}, "local_credentials": {"additionalProperties": true, "type": "object"}}, "additionalProperties": true, "type": "object"}, "call_credentials": {"items": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"access_token": {"type": "string", "description": "Access token credentials.\n https://grpc.io/grpc/cpp/namespacegrpc.html#ad3a80da696ffdaea943f0f858d7a360d."}, "google_compute_engine": {"additionalProperties": true, "type": "object", "description": "Google Compute Engine credentials.\n https://grpc.io/grpc/cpp/namespacegrpc.html#a6beb3ac70ff94bd2ebbd89b8f21d1f61"}, "google_refresh_token": {"type": "string", "description": "Google refresh token credentials.\n https://grpc.io/grpc/cpp/namespacegrpc.html#a96901c997b91bc6513b08491e0dca37c."}, "service_account_jwt_access": {"properties": {"json_key": {"type": "string"}, "token_lifetime_seconds": {"type": "string"}}, "additionalProperties": true, "type": "object", "description": "Service Account JWT Access credentials.\n https://grpc.io/grpc/cpp/namespacegrpc.html#a92a9f959d6102461f66ee973d8e9d3aa."}, "google_iam": {"properties": {"authorization_token": {"type": "string"}, "authority_selector": {"type": "string"}}, "additionalProperties": true, "type": "object", "description": "Google IAM credentials.\n https://grpc.io/grpc/cpp/namespacegrpc.html#a9fc1fc101b41e680d47028166e76f9d0."}, "from_plugin": {"properties": {"name": {"type": "string"}, "config": {"properties": {"fields": {"additionalProperties": {"additionalProperties": true, "type": "object"}, "type": "object", "description": "Unordered map of dynamically typed values."}}, "additionalProperties": true, "type": "object"}, "typed_config": {"properties": {"type_url": {"type": "string", "description": "A URL/resource name that uniquely identifies the type of the serialized\n protocol buffer message. This string must contain at least\n one \"/\" character. The last segment of the URL's path must represent\n the fully qualified name of the type (as in\n `path/google.protobuf.Duration`). The name should be in a canonical form\n (e.g., leading \".\" is not accepted).\n\n In practice, teams usually precompile into the binary all types that they\n expect it to use in the context of Any. However, for URLs which use the\n scheme `http`, `https`, or no scheme, one can optionally set up a type\n server that maps type URLs to message definitions as follows:\n\n * If no scheme is provided, `https` is assumed.\n * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n   value in binary format, or produce an error.\n * Applications are allowed to cache lookup results based on the\n   URL, or have them precompiled into a binary to avoid any\n   lookup. Therefore, binary compatibility needs to be preserved\n   on changes to types. (Use versioned type names to manage\n   breaking changes.)\n\n Note: this functionality is not currently available in the official\n protobuf release, and it is not used for type URLs beginning with\n type.googleapis.com.\n\n Schemes other than `http`, `https` (or the empty scheme) might be\n used with implementation specific semantics."}, "value": {"type": "string", "description": "Must be a valid serialized protocol buffer of the above specified type."}}, "additionalProperties": true, "type": "object"}}, "additionalProperties": true, "type": "object", "description": "Custom authenticator credentials.\n https://grpc.io/grpc/cpp/namespacegrpc.html#a823c6a4b19ffc71fb33e90154ee2ad07.\n https://grpc.io/docs/guides/auth.html#extending-grpc-to-support-other-authentication-mechanisms."}, "sts_service": {"properties": {"token_exchange_service_uri": {"type": "string", "description": "URI of the token exchange service that handles token exchange requests.\n [#comment:TODO(asraa): Add URI validation when implemented. Tracked by\n https://github.com/envoyproxy/protoc-gen-validate/issues/303]"}, "resource": {"type": "string", "description": "Location of the target service or resource where the client\n intends to use the requested security token."}, "audience": {"type": "string", "description": "Logical name of the target service where the client intends to\n use the requested security token."}, "scope": {"type": "string", "description": "The desired scope of the requested security token in the\n context of the service or resource where the token will be used."}, "requested_token_type": {"type": "string", "description": "Type of the requested security token."}, "subject_token_path": {"type": "string", "description": "The path of subject token, a security token that represents the\n identity of the party on behalf of whom the request is being made."}, "subject_token_type": {"type": "string", "description": "Type of the subject token."}, "actor_token_path": {"type": "string", "description": "The path of actor token, a security token that represents the identity\n of the acting party. The acting party is authorized to use the\n requested security token and act on behalf of the subject."}, "actor_token_type": {"type": "string", "description": "Type of the actor token."}}, "additionalProperties": true, "type": "object", "description": "Custom security token service which implements OAuth 2.0 token exchange.\n https://tools.ietf.org/html/draft-ietf-oauth-token-exchange-16\n See https://github.com/grpc/grpc/pull/19587."}}, "additionalProperties": true, "type": "object", "description": "[#next-free-field: 8]"}, "type": "array", "description": "A set of call credentials that can be composed with `channel credentials\n <https://grpc.io/docs/guides/auth.html#credential-types>`_."}, "stat_prefix": {"type": "string", "description": "The human readable prefix to use when emitting statistics for the gRPC\n service.\n\n .. csv-table::\n    :header: Name, Type, Description\n    :widths: 1, 1, 2\n\n    streams_total, Counter, Total number of streams opened\n    streams_closed_<gRPC status code>, Counter, Total streams closed with <gRPC status code>"}, "credentials_factory_name": {"type": "string", "description": "The name of the Google gRPC credentials factory to use. This must have been registered with\n Envoy. If this is empty, a default credentials factory will be used that sets up channel\n credentials based on other configuration parameters."}, "config": {"properties": {"fields": {"additionalProperties": {"additionalProperties": true, "type": "object"}, "type": "object", "description": "Unordered map of dynamically typed values."}}, "additionalProperties": true, "type": "object", "description": "Additional configuration for site-specific customizations of the Google\n gRPC library."}}, "additionalProperties": true, "type": "object", "description": "`Google C++ gRPC client <https://github.com/grpc/grpc>`_\n See the :ref:`gRPC services overview <arch_overview_grpc_services>`\n documentation for discussion on gRPC client selection."}, "timeout": {"properties": {"seconds": {"type": "string", "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"}, "nanos": {"type": "integer", "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."}}, "additionalProperties": true, "type": "object", "description": "The timeout for the gRPC request. This is the timeout for a specific\n request."}, "initial_metadata": {"items": {"$schema": "http://json-schema.org/draft-04/schema#", "$ref": "https://phlax.github.io/typed-config-testing/envoy.api.v2.core/HeaderValue.jsonschema"}, "type": "array", "description": "Additional metadata to include in streams initiated to the GrpcService.\n This can be used for scenarios in which additional ad hoc authorization\n headers (e.g. ``x-foo-bar: baz-key``) are to be injected."}}, "additionalProperties": true, "type": "object", "description": "gRPC service configuration (default timeout: 200ms)."}, "http_service": {"properties": {"server_uri": {"properties": {"uri": {"type": "string", "description": "The HTTP server URI. It should be a full FQDN with protocol, host and path.\n\n Example:\n\n .. code-block:: yaml\n\n    uri: https://www.googleapis.com/oauth2/v1/certs"}, "cluster": {"type": "string", "description": "A cluster is created in the Envoy \"cluster_manager\" config\n section. This field specifies the cluster name.\n\n Example:\n\n .. code-block:: yaml\n\n    cluster: jwks_cluster"}, "timeout": {"properties": {"seconds": {"type": "string", "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"}, "nanos": {"type": "integer", "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."}}, "additionalProperties": true, "type": "object", "description": "Sets the maximum duration in milliseconds that a response can take to arrive upon request."}}, "additionalProperties": true, "type": "object", "description": "Sets the HTTP server URI which the authorization requests must be sent to."}, "path_prefix": {"type": "string", "description": "Sets a prefix to the value of authorization request header *Path*."}, "authorization_request": {"properties": {"allowed_headers": {"$ref": "https://phlax.github.io/typed-config-testing/envoy.type.matcher/ListStringMatcher.jsonschema", "additionalProperties": true, "description": "Authorization request will include the client request headers that have a correspondent match\n in the :ref:`list <envoy_api_msg_type.matcher.ListStringMatcher>`. Note that in addition to the\n user's supplied matchers:\n\n 1. *Host*, *Method*, *Path* and *Content-Length* are automatically included to the list.\n\n 2. *Content-Length* will be set to 0 and the request to the authorization service will not have\n a message body. However, the authorization request can include the buffered client request body\n (controlled by :ref:`with_request_body\n <envoy_api_field_config.filter.http.ext_authz.v2.ExtAuthz.with_request_body>` setting),\n consequently the value of *Content-Length* of the authorization request reflects the size of\n its payload size."}, "headers_to_add": {"items": {"$schema": "http://json-schema.org/draft-04/schema#", "$ref": "https://phlax.github.io/typed-config-testing/envoy.api.v2.core/HeaderValue.jsonschema"}, "type": "array", "description": "Sets a list of headers that will be included to the request to authorization service. Note that\n client request of the same key will be overridden."}}, "additionalProperties": true, "type": "object", "description": "Settings used for controlling authorization request metadata."}, "authorization_response": {"properties": {"allowed_upstream_headers": {"$ref": "https://phlax.github.io/typed-config-testing/envoy.type.matcher/ListStringMatcher.jsonschema", "additionalProperties": true, "description": "When this :ref:`list <envoy_api_msg_type.matcher.ListStringMatcher>` is set, authorization\n response headers that have a correspondent match will be added to the original client request.\n Note that coexistent headers will be overridden."}, "allowed_client_headers": {"$ref": "https://phlax.github.io/typed-config-testing/envoy.type.matcher/ListStringMatcher.jsonschema", "additionalProperties": true, "description": "When this :ref:`list <envoy_api_msg_type.matcher.ListStringMatcher>`. is set, authorization\n response headers that have a correspondent match will be added to the client's response. Note\n that when this list is *not* set, all the authorization response headers, except *Authority\n (Host)* will be in the response to the client. When a header is included in this list, *Path*,\n *Status*, *Content-Length*, *WWWAuthenticate* and *Location* are automatically added."}}, "additionalProperties": true, "type": "object", "description": "Settings used for controlling authorization response metadata."}}, "additionalProperties": true, "type": "object", "description": "HTTP service configuration (default timeout: 200ms)."}, "failure_mode_allow": {"type": "boolean", "description": "Changes filter's behaviour on errors:\n\n  1. When set to true, the filter will *accept* client request even if the communication with\n  the authorization service has failed, or if the authorization service has returned a HTTP 5xx\n  error.\n\n  2. When set to false, ext-authz will *reject* client requests and return a *Forbidden*\n  response if the communication with the authorization service has failed, or if the\n  authorization service has returned a HTTP 5xx error.\n\n Note that errors can be *always* tracked in the :ref:`stats\n <config_http_filters_ext_authz_stats>`."}, "use_alpha": {"type": "boolean", "description": "[#not-implemented-hide: Support for this field has been removed.]"}, "with_request_body": {"properties": {"max_request_bytes": {"type": "integer", "description": "Sets the maximum size of a message body that the filter will hold in memory. Envoy will return\n *HTTP 413* and will *not* initiate the authorization process when buffer reaches the number\n set in this field. Note that this setting will have precedence over :ref:`failure_mode_allow\n <envoy_api_field_config.filter.http.ext_authz.v2.ExtAuthz.failure_mode_allow>`."}, "allow_partial_message": {"type": "boolean", "description": "When this field is true, Envoy will buffer the message until *max_request_bytes* is reached.\n The authorization request will be dispatched and no 413 HTTP error will be returned by the\n filter."}}, "additionalProperties": true, "type": "object", "description": "Enables filter to buffer the client request body and send it within the authorization request.\n A ``x-envoy-auth-partial-body: false|true`` metadata header will be added to the authorization\n request message indicating if the body data is partial."}, "clear_route_cache": {"type": "boolean", "description": "Clears route cache in order to allow the external authorization service to correctly affect\n routing decisions. Filter clears all cached routes when:\n\n 1. The field is set to *true*.\n\n 2. The status returned from the authorization service is a HTTP 200 or gRPC 0.\n\n 3. At least one *authorization response header* is added to the client request, or is used for\n altering another client request header."}, "status_on_error": {"properties": {"code": {"enum": ["Empty", 0, "Continue", 100, "OK", 200, "Created", 201, "Accepted", 202, "NonAuthoritativeInformation", 203, "NoContent", 204, "ResetContent", 205, "PartialContent", 206, "MultiStatus", 207, "AlreadyReported", 208, "IMUsed", 226, "MultipleChoices", 300, "MovedPermanently", 301, "Found", 302, "SeeOther", 303, "NotModified", 304, "UseProxy", 305, "TemporaryRedirect", 307, "PermanentRedirect", 308, "BadRequest", 400, "Unauthorized", 401, "PaymentRequired", 402, "Forbidden", 403, "NotFound", 404, "MethodNotAllowed", 405, "NotAcceptable", 406, "ProxyAuthenticationRequired", 407, "RequestTimeout", 408, "Conflict", 409, "Gone", 410, "LengthRequired", 411, "PreconditionFailed", 412, "PayloadTooLarge", 413, "URITooLong", 414, "UnsupportedMediaType", 415, "RangeNotSatisfiable", 416, "ExpectationFailed", 417, "MisdirectedRequest", 421, "UnprocessableEntity", 422, "Locked", 423, "FailedDependency", 424, "UpgradeRequired", 426, "PreconditionRequired", 428, "TooManyRequests", 429, "RequestHeaderFieldsTooLarge", 431, "InternalServerError", 500, "NotImplemented", 501, "BadGateway", 502, "ServiceUnavailable", 503, "GatewayTimeout", 504, "HTTPVersionNotSupported", 505, "VariantAlsoNegotiates", 506, "InsufficientStorage", 507, "LoopDetected", 508, "NotExtended", 510, "NetworkAuthenticationRequired", 511], "oneOf": [{"type": "string"}, {"type": "integer"}], "description": "Supplies HTTP response code."}}, "additionalProperties": true, "type": "object", "description": "Sets the HTTP status that is returned to the client when there is a network error between the\n filter and the authorization server. The default status is HTTP 403 Forbidden."}, "metadata_context_namespaces": {"items": {"type": "string"}, "type": "array", "description": "Specifies a list of metadata namespaces whose values, if present, will be passed to the\n ext_authz service as an opaque *protobuf::Struct*.\n\n For example, if the *jwt_authn* filter is used and :ref:`payload_in_metadata\n <envoy_api_field_config.filter.http.jwt_authn.v2alpha.JwtProvider.payload_in_metadata>` is set,\n then the following will pass the jwt payload to the authorization server.\n\n .. code-block:: yaml\n\n    metadata_context_namespaces:\n    - envoy.filters.http.jwt_authn"}, "filter_enabled": {"properties": {"default_value": {"properties": {"numerator": {"type": "integer", "description": "Specifies the numerator. Defaults to 0."}, "denominator": {"enum": ["HUNDRED", 0, "TEN_THOUSAND", 1, "MILLION", 2], "oneOf": [{"type": "string"}, {"type": "integer"}], "description": "Specifies the denominator. If the denominator specified is less than the numerator, the final\n fractional percentage is capped at 1 (100%)."}}, "additionalProperties": true, "type": "object", "description": "Default value if the runtime value's for the numerator/denominator keys are not available."}, "runtime_key": {"type": "string", "description": "Runtime key for a YAML representation of a FractionalPercent."}}, "additionalProperties": true, "type": "object", "description": "Specifies if the filter is enabled.\n\n If :ref:`runtime_key <envoy_api_field_core.RuntimeFractionalPercent.runtime_key>` is specified,\n Envoy will lookup the runtime key to get the percentage of requests to filter.\n\n If this field is not specified, the filter will be enabled for all requests."}, "deny_at_disable": {"properties": {"default_value": {"additionalProperties": true, "type": "boolean", "description": "Default value if runtime value is not available."}, "runtime_key": {"type": "string", "description": "Runtime key to get value for comparison. This value is used if defined. The boolean value must\n be represented via its\n `canonical JSON encoding <https://developers.google.com/protocol-buffers/docs/proto3#json>`_."}}, "additionalProperties": true, "type": "object", "description": "Specifies whether to deny the requests, when the filter is disabled.\n If :ref:`runtime_key <envoy_api_field_core.RuntimeFeatureFlag.runtime_key>` is specified,\n Envoy will lookup the runtime key to determine whether to deny request for\n filter protected path at filter disabling. If filter is disabled in\n typed_per_filter_config for the path, requests will not be denied.\n\n If this field is not specified, all requests will be allowed when disabled."}, "include_peer_certificate": {"type": "boolean", "description": "Specifies if the peer certificate is sent to the external service.\n\n When this field is true, Envoy will include the peer X.509 certificate, if available, in the\n :ref:`certificate<envoy_api_field_service.auth.v2.AttributeContext.Peer.certificate>`."}}, "additionalProperties": true, "type": "object", "description": "[#protodoc-title: External Authorization]\n External Authorization :ref:`configuration overview <config_http_filters_ext_authz>`.\n [#extension: envoy.filters.http.ext_authz]\n\n[#next-free-field: 12]", "definitions": {"envoy.api.v2.core.DataSource": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"filename": {"type": "string", "description": "Local filesystem data source."}, "inline_bytes": {"type": "string", "description": "Bytes inlined in the configuration."}, "inline_string": {"type": "string", "description": "String inlined in the configuration."}}, "additionalProperties": true, "type": "object", "description": "Data source consisting of either a file or an inline value.", "id": "envoy.api.v2.core.DataSource"}, "envoy.api.v2.core.HeaderValue": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"key": {"type": "string", "description": "Header name."}, "value": {"type": "string", "description": "Header value.\n\n The same :ref:`format specifier <config_access_log_format>` as used for\n :ref:`HTTP access logging <config_access_log>` applies here, however\n unknown header values are replaced with the empty string instead of `-`."}}, "additionalProperties": true, "type": "object", "description": "Header name/value pair.", "id": "envoy.api.v2.core.HeaderValue"}, "envoy.type.matcher.ListStringMatcher": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"patterns": {"items": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"exact": {"type": "string", "description": "The input string must match exactly the string specified here.\n\n Examples:\n\n * *abc* only matches the value *abc*."}, "prefix": {"type": "string", "description": "The input string must have the prefix specified here.\n Note: empty prefix is not allowed, please use regex instead.\n\n Examples:\n\n * *abc* matches the value *abc.xyz*"}, "suffix": {"type": "string", "description": "The input string must have the suffix specified here.\n Note: empty prefix is not allowed, please use regex instead.\n\n Examples:\n\n * *abc* matches the value *xyz.abc*"}, "regex": {"type": "string", "description": "The input string must match the regular expression specified here.\n The regex grammar is defined `here\n <https://en.cppreference.com/w/cpp/regex/ecmascript>`_.\n\n Examples:\n\n * The regex ``\\d{3}`` matches the value *123*\n * The regex ``\\d{3}`` does not match the value *1234*\n * The regex ``\\d{3}`` does not match the value *123.456*\n\n .. attention::\n   This field has been deprecated in favor of `safe_regex` as it is not safe for use with\n   untrusted input in all cases."}, "safe_regex": {"properties": {"google_re2": {"properties": {"max_program_size": {"additionalProperties": true, "type": "integer", "description": "This field controls the RE2 \"program size\" which is a rough estimate of how complex a\n compiled regex is to evaluate. A regex that has a program size greater than the configured\n value will fail to compile. In this case, the configured max program size can be increased\n or the regex can be simplified. If not specified, the default is 100.\n\n This field is deprecated; regexp validation should be performed on the management server\n instead of being done by each individual client."}}, "additionalProperties": true, "type": "object", "description": "Google's RE2 regex engine."}, "regex": {"type": "string", "description": "The regex match string. The string must be supported by the configured engine."}}, "additionalProperties": true, "type": "object", "description": "The input string must match the regular expression specified here."}, "ignore_case": {"type": "boolean", "description": "If true, indicates the exact/prefix/suffix matching should be case insensitive. This has no\n effect for the safe_regex match.\n For example, the matcher *data* will match both input string *Data* and *data* if set to true."}}, "additionalProperties": true, "type": "object", "description": "[#protodoc-title: String matcher]\n\nSpecifies the way to match a string.\n [#next-free-field: 7]"}, "type": "array"}}, "additionalProperties": true, "type": "object", "description": "Specifies a list of ways to match a string.", "id": "envoy.type.matcher.ListStringMatcher"}}}