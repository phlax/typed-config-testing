{"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"stat_prefix": {"type": "string", "description": "The prefix to use when emitting :ref:`statistics\n <config_network_filters_local_rate_limit_stats>`."}, "token_bucket": {"properties": {"max_tokens": {"type": "integer", "description": "The maximum tokens that the bucket can hold. This is also the number of tokens that the bucket\n initially contains."}, "tokens_per_fill": {"additionalProperties": true, "type": "integer", "description": "The number of tokens added to the bucket during each fill interval. If not specified, defaults\n to a single token."}, "fill_interval": {"properties": {"seconds": {"type": "string", "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"}, "nanos": {"type": "integer", "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."}}, "additionalProperties": true, "type": "object", "description": "The fill interval that tokens are added to the bucket. During each fill interval\n `tokens_per_fill` are added to the bucket. The bucket will never contain more than\n `max_tokens` tokens."}}, "additionalProperties": true, "type": "object", "description": "The token bucket configuration to use for rate limiting connections that are processed by the\n filter's filter chain. Each incoming connection processed by the filter consumes a single\n token. If the token is available, the connection will be allowed. If no tokens are available,\n the connection will be immediately closed.\n\n .. note::\n   In the current implementation each filter and filter chain has an independent rate limit.\n\n .. note::\n   In the current implementation the token bucket's :ref:`fill_interval\n   <envoy_api_field_type.TokenBucket.fill_interval>` must be >= 50ms to avoid too aggressive\n   refills."}, "runtime_enabled": {"properties": {"default_value": {"additionalProperties": true, "type": "boolean", "description": "Default value if runtime value is not available."}, "runtime_key": {"type": "string", "description": "Runtime key to get value for comparison. This value is used if defined. The boolean value must\n be represented via its\n `canonical JSON encoding <https://developers.google.com/protocol-buffers/docs/proto3#json>`_."}}, "additionalProperties": true, "type": "object", "description": "Runtime flag that controls whether the filter is enabled or not. If not specified, defaults\n to enabled."}}, "additionalProperties": true, "type": "object", "description": "[#protodoc-title: Local rate limit]\n Local rate limit :ref:`configuration overview <config_network_filters_local_rate_limit>`.\n [#extension: envoy.filters.network.local_ratelimit]"}