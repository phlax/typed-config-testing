{"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"emit_filter_state": {"type": "boolean", "description": "If true, the filter maintains a filter state object with the request and response message\n counts."}, "individual_method_stats_allowlist": {"properties": {"services": {"items": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"name": {"type": "string", "description": "The name of the gRPC service."}, "method_names": {"items": {"type": "string"}, "type": "array", "description": "The names of the gRPC methods in this service."}}, "additionalProperties": true, "type": "object"}, "type": "array"}}, "additionalProperties": true, "type": "object", "description": "If set, specifies an allowlist of service/methods that will have individual stats\n emitted for them. Any call that does not match the allowlist will be counted\n in a stat with no method specifier: `cluster.<name>.grpc.*`."}, "stats_for_all_methods": {"additionalProperties": true, "type": "boolean", "description": "If set to true, emit stats for all service/method names.\n\n If set to false, emit stats for all service/message types to the same stats without including\n the service/method in the name, with prefix `cluster.<name>.grpc`. This can be useful if\n service/method granularity is not needed, or if each cluster only receives a single method.\n\n .. attention::\n   This option is only safe if all clients are trusted. If this option is enabled\n   with untrusted clients, the clients could cause unbounded growth in the number of stats in\n   Envoy, using unbounded memory and potentially slowing down stats pipelines.\n\n .. attention::\n   If neither `individual_method_stats_allowlist` nor `stats_for_all_methods` is set, the\n   behavior will default to `stats_for_all_methods=true`. This default value is deprecated,\n   and in a future release, if neither field is set, it will default to\n   `stats_for_all_methods=false` in order to be safe by default. This behavior can be\n   controlled with runtime override\n   `envoy.deprecated_features.grpc_stats_filter_enable_stats_for_all_methods_by_default`."}, "enable_upstream_stats": {"type": "boolean", "description": "If true, the filter will gather a histogram for the request time of the upstream.\n It works with :ref:`stats_for_all_methods\n <envoy_api_field_extensions.filters.http.grpc_stats.v3.FilterConfig.stats_for_all_methods>`\n and :ref:`individual_method_stats_allowlist\n <envoy_api_field_extensions.filters.http.grpc_stats.v3.FilterConfig.individual_method_stats_allowlist>` the same way\n request_message_count and response_message_count works."}}, "additionalProperties": true, "type": "object", "description": "[#protodoc-title: gRPC statistics] gRPC statistics filter\n :ref:`configuration overview <config_http_filters_grpc_stats>`.\n [#extension: envoy.filters.http.grpc_stats]\n\ngRPC statistics filter configuration"}