{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "properties": {
        "proto_descriptor": {
            "type": "string",
            "description": "Supplies the filename of\n :ref:`the proto descriptor set \u003cconfig_grpc_json_generate_proto_descriptor_set\u003e` for the gRPC\n services."
        },
        "proto_descriptor_bin": {
            "type": "string",
            "description": "Supplies the binary content of\n :ref:`the proto descriptor set \u003cconfig_grpc_json_generate_proto_descriptor_set\u003e` for the gRPC\n services."
        },
        "services": {
            "items": {
                "type": "string"
            },
            "type": "array",
            "description": "A list of strings that\n supplies the fully qualified service names (i.e. \"package_name.service_name\") that\n the transcoder will translate. If the service name doesn't exist in ``proto_descriptor``,\n Envoy will fail at startup. The ``proto_descriptor`` may contain more services than\n the service names specified here, but they won't be translated."
        },
        "print_options": {
            "properties": {
                "add_whitespace": {
                    "type": "boolean",
                    "description": "Whether to add spaces, line breaks and indentation to make the JSON\n output easy to read. Defaults to false."
                },
                "always_print_primitive_fields": {
                    "type": "boolean",
                    "description": "Whether to always print primitive fields. By default primitive\n fields with default values will be omitted in JSON output. For\n example, an int32 field set to 0 will be omitted. Setting this flag to\n true will override the default behavior and print primitive fields\n regardless of their values. Defaults to false."
                },
                "always_print_enums_as_ints": {
                    "type": "boolean",
                    "description": "Whether to always print enums as ints. By default they are rendered\n as strings. Defaults to false."
                },
                "preserve_proto_field_names": {
                    "type": "boolean",
                    "description": "Whether to preserve proto field names. By default protobuf will\n generate JSON field names using the ``json_name`` option, or lower camel case,\n in that order. Setting this flag will preserve the original field names. Defaults to false."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "Control options for response JSON. These options are passed directly to\n `JsonPrintOptions \u003chttps://developers.google.com/protocol-buffers/docs/reference/cpp/\n google.protobuf.util.json_util#JsonPrintOptions\u003e`_."
        },
        "match_incoming_request_route": {
            "type": "boolean",
            "description": "Whether to keep the incoming request route after the outgoing headers have been transformed to\n the match the upstream gRPC service. Note: This means that routes for gRPC services that are\n not transcoded cannot be used in combination with *match_incoming_request_route*."
        },
        "ignored_query_parameters": {
            "items": {
                "type": "string"
            },
            "type": "array",
            "description": "A list of query parameters to be ignored for transcoding method mapping.\n By default, the transcoder filter will not transcode a request if there are any\n unknown/invalid query parameters.\n\n Example :\n\n .. code-block:: proto\n\n     service Bookstore {\n       rpc GetShelf(GetShelfRequest) returns (Shelf) {\n         option (google.api.http) = {\n           get: \"/shelves/{shelf}\"\n         };\n       }\n     }\n\n     message GetShelfRequest {\n       int64 shelf = 1;\n     }\n\n     message Shelf {}\n\n The request ``/shelves/100?foo=bar`` will not be mapped to ``GetShelf``` because variable\n binding for ``foo`` is not defined. Adding ``foo`` to ``ignored_query_parameters`` will allow\n the same request to be mapped to ``GetShelf``."
        },
        "auto_mapping": {
            "type": "boolean",
            "description": "Whether to route methods without the ``google.api.http`` option.\n\n Example :\n\n .. code-block:: proto\n\n     package bookstore;\n\n     service Bookstore {\n       rpc GetShelf(GetShelfRequest) returns (Shelf) {}\n     }\n\n     message GetShelfRequest {\n       int64 shelf = 1;\n     }\n\n     message Shelf {}\n\n The client could ``post`` a json body ``{\"shelf\": 1234}`` with the path of\n ``/bookstore.Bookstore/GetShelfRequest`` to call ``GetShelfRequest``."
        },
        "ignore_unknown_query_parameters": {
            "type": "boolean",
            "description": "Whether to ignore query parameters that cannot be mapped to a corresponding\n protobuf field. Use this if you cannot control the query parameters and do\n not know them beforehand. Otherwise use ``ignored_query_parameters``.\n Defaults to false."
        },
        "convert_grpc_status": {
            "type": "boolean",
            "description": "Whether to convert gRPC status headers to JSON.\n When trailer indicates a gRPC error and there was no HTTP body, take ``google.rpc.Status``\n from the ``grpc-status-details-bin`` header and use it as JSON body.\n If there was no such header, make ``google.rpc.Status`` out of the ``grpc-status`` and\n ``grpc-message`` headers.\n The error details types must be present in the ``proto_descriptor``.\n\n For example, if an upstream server replies with headers:\n\n .. code-block:: none\n\n     grpc-status: 5\n     grpc-status-details-bin:\n         CAUaMwoqdHlwZS5nb29nbGVhcGlzLmNvbS9nb29nbGUucnBjLlJlcXVlc3RJbmZvEgUKA3ItMQ\n\n The ``grpc-status-details-bin`` header contains a base64-encoded protobuf message\n ``google.rpc.Status``. It will be transcoded into:\n\n .. code-block:: none\n\n     HTTP/1.1 404 Not Found\n     content-type: application/json\n\n     {\"code\":5,\"details\":[{\"@type\":\"type.googleapis.com/google.rpc.RequestInfo\",\"requestId\":\"r-1\"}]}\n\n  In order to transcode the message, the ``google.rpc.RequestInfo`` type from\n  the ``google/rpc/error_details.proto`` should be included in the configured\n  :ref:`proto descriptor set \u003cconfig_grpc_json_generate_proto_descriptor_set\u003e`."
        }
    },
    "additionalProperties": true,
    "type": "object",
    "description": "[#protodoc-title: gRPC-JSON transcoder]\n gRPC-JSON transcoder :ref:`configuration overview \u003cconfig_http_filters_grpc_json_transcoder\u003e`.\n [#extension: envoy.filters.http.grpc_json_transcoder]\n\n[#next-free-field: 10]"
}