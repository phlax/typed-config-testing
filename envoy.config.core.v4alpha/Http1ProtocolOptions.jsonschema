{"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"allow_absolute_url": {"additionalProperties": true, "type": "boolean", "description": "Handle HTTP requests with absolute URLs in the requests. These requests\n are generally sent by clients to forward/explicit proxies. This allows clients to configure\n envoy as their HTTP proxy. In Unix, for example, this is typically done by setting the\n *http_proxy* environment variable."}, "accept_http_10": {"type": "boolean", "description": "Handle incoming HTTP/1.0 and HTTP 0.9 requests.\n This is off by default, and not fully standards compliant. There is support for pre-HTTP/1.1\n style connect logic, dechunking, and handling lack of client host iff\n *default_host_for_http_10* is configured."}, "default_host_for_http_10": {"type": "string", "description": "A default host for HTTP/1.0 requests. This is highly suggested if *accept_http_10* is true as\n Envoy does not otherwise support HTTP/1.0 without a Host header.\n This is a no-op if *accept_http_10* is not true."}, "header_key_format": {"properties": {"proper_case_words": {"additionalProperties": true, "type": "object", "description": "Formats the header by proper casing words: the first character and any character following\n a special character will be capitalized if it's an alpha character. For example,\n \"content-type\" becomes \"Content-Type\", and \"foo$b#$are\" becomes \"Foo$B#$Are\".\n Note that while this results in most headers following conventional casing, certain headers\n are not covered. For example, the \"TE\" header will be formatted as \"Te\"."}}, "additionalProperties": true, "type": "object", "description": "Describes how the keys for response headers should be formatted. By default, all header keys\n are lower cased."}, "enable_trailers": {"type": "boolean", "description": "Enables trailers for HTTP/1. By default the HTTP/1 codec drops proxied trailers.\n\n .. attention::\n\n   Note that this only happens when Envoy is chunk encoding which occurs when:\n   - The request is HTTP/1.1.\n   - Is neither a HEAD only request nor a HTTP Upgrade.\n   - Not a response to a HEAD request.\n   - The content length header is not present."}, "allow_chunked_length": {"type": "boolean", "description": "Allows Envoy to process requests/responses with both `Content-Length` and `Transfer-Encoding`\n headers set. By default such messages are rejected, but if option is enabled - Envoy will\n remove Content-Length header and process message.\n See `RFC7230, sec. 3.3.3 <https://tools.ietf.org/html/rfc7230#section-3.3.3>` for details.\n\n .. attention::\n   Enabling this option might lead to request smuggling vulnerability, especially if traffic\n   is proxied via multiple layers of proxies."}, "override_stream_error_on_invalid_http_message": {"additionalProperties": true, "type": "boolean", "description": "Allows invalid HTTP messaging. When this option is false, then Envoy will terminate\n HTTP/1.1 connections upon receiving an invalid HTTP message. However,\n when this option is true, then Envoy will leave the HTTP/1.1 connection\n open where possible.\n If set, this overrides any HCM :ref:`stream_error_on_invalid_http_messaging\n <envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.stream_error_on_invalid_http_message>`."}}, "additionalProperties": true, "type": "object", "description": "[#next-free-field: 8]"}