{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "properties": {
        "tls_params": {
            "properties": {
                "tls_minimum_protocol_version": {
                    "enum": [
                        "TLS_AUTO",
                        0,
                        "TLSv1_0",
                        1,
                        "TLSv1_1",
                        2,
                        "TLSv1_2",
                        3,
                        "TLSv1_3",
                        4
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "description": "Minimum TLS protocol version. By default, it's ``TLSv1_2`` for clients and ``TLSv1_0`` for\n servers."
                },
                "tls_maximum_protocol_version": {
                    "enum": [
                        "TLS_AUTO",
                        0,
                        "TLSv1_0",
                        1,
                        "TLSv1_1",
                        2,
                        "TLSv1_2",
                        3,
                        "TLSv1_3",
                        4
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "description": "Maximum TLS protocol version. By default, it's ``TLSv1_2`` for clients and ``TLSv1_3`` for\n servers."
                },
                "cipher_suites": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "If specified, the TLS listener will only support the specified `cipher list\n \u003chttps://commondatastorage.googleapis.com/chromium-boringssl-docs/ssl.h.html#Cipher-suite-configuration\u003e`_\n when negotiating TLS 1.0-1.2 (this setting has no effect when negotiating TLS 1.3). If not\n specified, the default list will be used.\n\n In non-FIPS builds, the default cipher list is:\n\n .. code-block:: none\n\n   [ECDHE-ECDSA-AES128-GCM-SHA256|ECDHE-ECDSA-CHACHA20-POLY1305]\n   [ECDHE-RSA-AES128-GCM-SHA256|ECDHE-RSA-CHACHA20-POLY1305]\n   ECDHE-ECDSA-AES128-SHA\n   ECDHE-RSA-AES128-SHA\n   AES128-GCM-SHA256\n   AES128-SHA\n   ECDHE-ECDSA-AES256-GCM-SHA384\n   ECDHE-RSA-AES256-GCM-SHA384\n   ECDHE-ECDSA-AES256-SHA\n   ECDHE-RSA-AES256-SHA\n   AES256-GCM-SHA384\n   AES256-SHA\n\n In builds using :ref:`BoringSSL FIPS \u003carch_overview_ssl_fips\u003e`, the default cipher list is:\n\n .. code-block:: none\n\n   ECDHE-ECDSA-AES128-GCM-SHA256\n   ECDHE-RSA-AES128-GCM-SHA256\n   ECDHE-ECDSA-AES128-SHA\n   ECDHE-RSA-AES128-SHA\n   AES128-GCM-SHA256\n   AES128-SHA\n   ECDHE-ECDSA-AES256-GCM-SHA384\n   ECDHE-RSA-AES256-GCM-SHA384\n   ECDHE-ECDSA-AES256-SHA\n   ECDHE-RSA-AES256-SHA\n   AES256-GCM-SHA384\n   AES256-SHA"
                },
                "ecdh_curves": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "If specified, the TLS connection will only support the specified ECDH\n curves. If not specified, the default curves will be used.\n\n In non-FIPS builds, the default curves are:\n\n .. code-block:: none\n\n   X25519\n   P-256\n\n In builds using :ref:`BoringSSL FIPS \u003carch_overview_ssl_fips\u003e`, the default curve is:\n\n .. code-block:: none\n\n   P-256"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "TLS protocol versions, cipher suites etc."
        },
        "tls_certificates": {
            "items": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "properties": {
                    "certificate_chain": {
                        "$ref": "envoy.api.v2.core.DataSource",
                        "additionalProperties": true,
                        "description": "The TLS certificate chain."
                    },
                    "private_key": {
                        "$ref": "envoy.api.v2.core.DataSource",
                        "additionalProperties": true,
                        "description": "The TLS private key."
                    },
                    "private_key_provider": {
                        "properties": {
                            "provider_name": {
                                "type": "string",
                                "description": "Private key method provider name. The name must match a\n supported private key method provider type."
                            },
                            "config": {
                                "properties": {
                                    "fields": {
                                        "additionalProperties": {
                                            "additionalProperties": true,
                                            "type": "object"
                                        },
                                        "type": "object",
                                        "description": "Unordered map of dynamically typed values."
                                    }
                                },
                                "additionalProperties": true,
                                "type": "object"
                            },
                            "typed_config": {
                                "properties": {
                                    "type_url": {
                                        "type": "string",
                                        "description": "A URL/resource name that uniquely identifies the type of the serialized\n protocol buffer message. This string must contain at least\n one \"/\" character. The last segment of the URL's path must represent\n the fully qualified name of the type (as in\n `path/google.protobuf.Duration`). The name should be in a canonical form\n (e.g., leading \".\" is not accepted).\n\n In practice, teams usually precompile into the binary all types that they\n expect it to use in the context of Any. However, for URLs which use the\n scheme `http`, `https`, or no scheme, one can optionally set up a type\n server that maps type URLs to message definitions as follows:\n\n * If no scheme is provided, `https` is assumed.\n * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n   value in binary format, or produce an error.\n * Applications are allowed to cache lookup results based on the\n   URL, or have them precompiled into a binary to avoid any\n   lookup. Therefore, binary compatibility needs to be preserved\n   on changes to types. (Use versioned type names to manage\n   breaking changes.)\n\n Note: this functionality is not currently available in the official\n protobuf release, and it is not used for type URLs beginning with\n type.googleapis.com.\n\n Schemes other than `http`, `https` (or the empty scheme) might be\n used with implementation specific semantics."
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "Must be a valid serialized protocol buffer of the above specified type."
                                    }
                                },
                                "additionalProperties": true,
                                "type": "object"
                            }
                        },
                        "additionalProperties": true,
                        "type": "object",
                        "description": "BoringSSL private key method provider. This is an alternative to :ref:`private_key\n \u003cenvoy_api_field_auth.TlsCertificate.private_key\u003e` field. This can't be\n marked as ``oneof`` due to API compatibility reasons. Setting both :ref:`private_key\n \u003cenvoy_api_field_auth.TlsCertificate.private_key\u003e` and\n :ref:`private_key_provider\n \u003cenvoy_api_field_auth.TlsCertificate.private_key_provider\u003e` fields will result in an\n error."
                    },
                    "password": {
                        "$ref": "envoy.api.v2.core.DataSource",
                        "additionalProperties": true,
                        "description": "The password to decrypt the TLS private key. If this field is not set, it is assumed that the\n TLS private key is not password encrypted."
                    },
                    "ocsp_staple": {
                        "$ref": "envoy.api.v2.core.DataSource",
                        "additionalProperties": true,
                        "description": "[#not-implemented-hide:]"
                    },
                    "signed_certificate_timestamp": {
                        "items": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "$ref": "envoy.api.v2.core.DataSource"
                        },
                        "type": "array",
                        "description": "[#not-implemented-hide:]"
                    }
                },
                "additionalProperties": true,
                "type": "object",
                "description": "[#next-free-field: 7]"
            },
            "type": "array",
            "description": ":ref:`Multiple TLS certificates \u003carch_overview_ssl_cert_select\u003e` can be associated with the\n same context to allow both RSA and ECDSA certificates.\n\n Only a single TLS certificate is supported in client contexts. In server contexts, the first\n RSA certificate is used for clients that only support RSA and the first ECDSA certificate is\n used for clients that support ECDSA."
        },
        "tls_certificate_sds_secret_configs": {
            "items": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "$ref": "envoy.api.v2.auth.SdsSecretConfig"
            },
            "type": "array",
            "description": "Configs for fetching TLS certificates via SDS API."
        },
        "validation_context": {
            "$ref": "envoy.api.v2.auth.CertificateValidationContext",
            "additionalProperties": true,
            "description": "How to validate peer certificates."
        },
        "validation_context_sds_secret_config": {
            "$ref": "envoy.api.v2.auth.SdsSecretConfig",
            "additionalProperties": true,
            "description": "Config for fetching validation context via SDS API."
        },
        "combined_validation_context": {
            "properties": {
                "default_validation_context": {
                    "$ref": "envoy.api.v2.auth.CertificateValidationContext",
                    "additionalProperties": true,
                    "description": "How to validate peer certificates."
                },
                "validation_context_sds_secret_config": {
                    "$ref": "envoy.api.v2.auth.SdsSecretConfig",
                    "additionalProperties": true,
                    "description": "Config for fetching validation context via SDS API."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "Combined certificate validation context holds a default CertificateValidationContext\n and SDS config. When SDS server returns dynamic CertificateValidationContext, both dynamic\n and default CertificateValidationContext are merged into a new CertificateValidationContext\n for validation. This merge is done by Message::MergeFrom(), so dynamic\n CertificateValidationContext overwrites singular fields in default\n CertificateValidationContext, and concatenates repeated fields to default\n CertificateValidationContext, and logical OR is applied to boolean fields."
        },
        "alpn_protocols": {
            "items": {
                "type": "string"
            },
            "type": "array",
            "description": "Supplies the list of ALPN protocols that the listener should expose. In\n practice this is likely to be set to one of two values (see the\n :ref:`codec_type\n \u003cenvoy_api_field_config.filter.network.http_connection_manager.v2.HttpConnectionManager.codec_type\u003e`\n parameter in the HTTP connection manager for more information):\n\n * \"h2,http/1.1\" If the listener is going to support both HTTP/2 and HTTP/1.1.\n * \"http/1.1\" If the listener is only going to support HTTP/1.1.\n\n There is no default for this parameter. If empty, Envoy will not expose ALPN."
        }
    },
    "additionalProperties": true,
    "type": "object",
    "description": "TLS context shared by both client and server TLS contexts.\n [#next-free-field: 9]",
    "definitions": {
        "envoy.api.v2.auth.CertificateValidationContext": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": {
                "trusted_ca": {
                    "$ref": "envoy.api.v2.core.DataSource",
                    "additionalProperties": true,
                    "description": "TLS certificate data containing certificate authority certificates to use in verifying\n a presented peer certificate (e.g. server certificate for clusters or client certificate\n for listeners). If not specified and a peer certificate is presented it will not be\n verified. By default, a client certificate is optional, unless one of the additional\n options (:ref:`require_client_certificate\n \u003cenvoy_api_field_auth.DownstreamTlsContext.require_client_certificate\u003e`,\n :ref:`verify_certificate_spki\n \u003cenvoy_api_field_auth.CertificateValidationContext.verify_certificate_spki\u003e`,\n :ref:`verify_certificate_hash\n \u003cenvoy_api_field_auth.CertificateValidationContext.verify_certificate_hash\u003e`, or\n :ref:`match_subject_alt_names\n \u003cenvoy_api_field_auth.CertificateValidationContext.match_subject_alt_names\u003e`) is also\n specified.\n\n It can optionally contain certificate revocation lists, in which case Envoy will verify\n that the presented peer certificate has not been revoked by one of the included CRLs.\n\n See :ref:`the TLS overview \u003carch_overview_ssl_enabling_verification\u003e` for a list of common\n system CA locations."
                },
                "verify_certificate_spki": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "An optional list of base64-encoded SHA-256 hashes. If specified, Envoy will verify that the\n SHA-256 of the DER-encoded Subject Public Key Information (SPKI) of the presented certificate\n matches one of the specified values.\n\n A base64-encoded SHA-256 of the Subject Public Key Information (SPKI) of the certificate\n can be generated with the following command:\n\n .. code-block:: bash\n\n   $ openssl x509 -in path/to/client.crt -noout -pubkey\n     | openssl pkey -pubin -outform DER\n     | openssl dgst -sha256 -binary\n     | openssl enc -base64\n   NvqYIYSbgK2vCJpQhObf77vv+bQWtc5ek5RIOwPiC9A=\n\n This is the format used in HTTP Public Key Pinning.\n\n When both:\n :ref:`verify_certificate_hash\n \u003cenvoy_api_field_auth.CertificateValidationContext.verify_certificate_hash\u003e` and\n :ref:`verify_certificate_spki\n \u003cenvoy_api_field_auth.CertificateValidationContext.verify_certificate_spki\u003e` are specified,\n a hash matching value from either of the lists will result in the certificate being accepted.\n\n .. attention::\n\n   This option is preferred over :ref:`verify_certificate_hash\n   \u003cenvoy_api_field_auth.CertificateValidationContext.verify_certificate_hash\u003e`,\n   because SPKI is tied to a private key, so it doesn't change when the certificate\n   is renewed using the same private key."
                },
                "verify_certificate_hash": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "An optional list of hex-encoded SHA-256 hashes. If specified, Envoy will verify that\n the SHA-256 of the DER-encoded presented certificate matches one of the specified values.\n\n A hex-encoded SHA-256 of the certificate can be generated with the following command:\n\n .. code-block:: bash\n\n   $ openssl x509 -in path/to/client.crt -outform DER | openssl dgst -sha256 | cut -d\" \" -f2\n   df6ff72fe9116521268f6f2dd4966f51df479883fe7037b39f75916ac3049d1a\n\n A long hex-encoded and colon-separated SHA-256 (a.k.a. \"fingerprint\") of the certificate\n can be generated with the following command:\n\n .. code-block:: bash\n\n   $ openssl x509 -in path/to/client.crt -noout -fingerprint -sha256 | cut -d\"=\" -f2\n   DF:6F:F7:2F:E9:11:65:21:26:8F:6F:2D:D4:96:6F:51:DF:47:98:83:FE:70:37:B3:9F:75:91:6A:C3:04:9D:1A\n\n Both of those formats are acceptable.\n\n When both:\n :ref:`verify_certificate_hash\n \u003cenvoy_api_field_auth.CertificateValidationContext.verify_certificate_hash\u003e` and\n :ref:`verify_certificate_spki\n \u003cenvoy_api_field_auth.CertificateValidationContext.verify_certificate_spki\u003e` are specified,\n a hash matching value from either of the lists will result in the certificate being accepted."
                },
                "verify_subject_alt_name": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "An optional list of Subject Alternative Names. If specified, Envoy will verify that the\n Subject Alternative Name of the presented certificate matches one of the specified values.\n\n .. attention::\n\n   Subject Alternative Names are easily spoofable and verifying only them is insecure,\n   therefore this option must be used together with :ref:`trusted_ca\n   \u003cenvoy_api_field_auth.CertificateValidationContext.trusted_ca\u003e`."
                },
                "match_subject_alt_names": {
                    "items": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "properties": {
                            "exact": {
                                "type": "string",
                                "description": "The input string must match exactly the string specified here.\n\n Examples:\n\n * *abc* only matches the value *abc*."
                            },
                            "prefix": {
                                "type": "string",
                                "description": "The input string must have the prefix specified here.\n Note: empty prefix is not allowed, please use regex instead.\n\n Examples:\n\n * *abc* matches the value *abc.xyz*"
                            },
                            "suffix": {
                                "type": "string",
                                "description": "The input string must have the suffix specified here.\n Note: empty prefix is not allowed, please use regex instead.\n\n Examples:\n\n * *abc* matches the value *xyz.abc*"
                            },
                            "regex": {
                                "type": "string",
                                "description": "The input string must match the regular expression specified here.\n The regex grammar is defined `here\n \u003chttps://en.cppreference.com/w/cpp/regex/ecmascript\u003e`_.\n\n Examples:\n\n * The regex ``\\d{3}`` matches the value *123*\n * The regex ``\\d{3}`` does not match the value *1234*\n * The regex ``\\d{3}`` does not match the value *123.456*\n\n .. attention::\n   This field has been deprecated in favor of `safe_regex` as it is not safe for use with\n   untrusted input in all cases."
                            },
                            "safe_regex": {
                                "properties": {
                                    "google_re2": {
                                        "properties": {
                                            "max_program_size": {
                                                "additionalProperties": true,
                                                "type": "integer",
                                                "description": "This field controls the RE2 \"program size\" which is a rough estimate of how complex a\n compiled regex is to evaluate. A regex that has a program size greater than the configured\n value will fail to compile. In this case, the configured max program size can be increased\n or the regex can be simplified. If not specified, the default is 100.\n\n This field is deprecated; regexp validation should be performed on the management server\n instead of being done by each individual client."
                                            }
                                        },
                                        "additionalProperties": true,
                                        "type": "object",
                                        "description": "Google's RE2 regex engine."
                                    },
                                    "regex": {
                                        "type": "string",
                                        "description": "The regex match string. The string must be supported by the configured engine."
                                    }
                                },
                                "additionalProperties": true,
                                "type": "object",
                                "description": "The input string must match the regular expression specified here."
                            },
                            "ignore_case": {
                                "type": "boolean",
                                "description": "If true, indicates the exact/prefix/suffix matching should be case insensitive. This has no\n effect for the safe_regex match.\n For example, the matcher *data* will match both input string *Data* and *data* if set to true."
                            }
                        },
                        "additionalProperties": true,
                        "type": "object",
                        "description": "[#protodoc-title: String matcher]\n\nSpecifies the way to match a string.\n [#next-free-field: 7]"
                    },
                    "type": "array",
                    "description": "An optional list of Subject Alternative name matchers. Envoy will verify that the\n Subject Alternative Name of the presented certificate matches one of the specified matches.\n\n When a certificate has wildcard DNS SAN entries, to match a specific client, it should be\n configured with exact match type in the :ref:`string matcher \u003cenvoy_api_msg_type.matcher.StringMatcher\u003e`.\n For example if the certificate has \"\\*.example.com\" as DNS SAN entry, to allow only \"api.example.com\",\n it should be configured as shown below.\n\n .. code-block:: yaml\n\n  match_subject_alt_names:\n    exact: \"api.example.com\"\n\n .. attention::\n\n   Subject Alternative Names are easily spoofable and verifying only them is insecure,\n   therefore this option must be used together with :ref:`trusted_ca\n   \u003cenvoy_api_field_auth.CertificateValidationContext.trusted_ca\u003e`."
                },
                "require_ocsp_staple": {
                    "additionalProperties": true,
                    "type": "boolean",
                    "description": "[#not-implemented-hide:] Must present a signed time-stamped OCSP response."
                },
                "require_signed_certificate_timestamp": {
                    "additionalProperties": true,
                    "type": "boolean",
                    "description": "[#not-implemented-hide:] Must present signed certificate time-stamp."
                },
                "crl": {
                    "$ref": "envoy.api.v2.core.DataSource",
                    "additionalProperties": true,
                    "description": "An optional `certificate revocation list\n \u003chttps://en.wikipedia.org/wiki/Certificate_revocation_list\u003e`_\n (in PEM format). If specified, Envoy will verify that the presented peer\n certificate has not been revoked by this CRL. If this DataSource contains\n multiple CRLs, all of them will be used."
                },
                "allow_expired_certificate": {
                    "type": "boolean",
                    "description": "If specified, Envoy will not reject expired certificates."
                },
                "trust_chain_verification": {
                    "enum": [
                        "VERIFY_TRUST_CHAIN",
                        0,
                        "ACCEPT_UNTRUSTED",
                        1
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "description": "Certificate trust chain verification mode."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "[#next-free-field: 11]",
            "id": "envoy.api.v2.auth.CertificateValidationContext"
        },
        "envoy.api.v2.auth.SdsSecretConfig": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name (FQDN, UUID, SPKI, SHA256, etc.) by which the secret can be uniquely referred to.\n When both name and config are specified, then secret can be fetched and/or reloaded via\n SDS. When only name is specified, then secret will be loaded from static resources."
                },
                "sds_config": {
                    "properties": {
                        "path": {
                            "type": "string",
                            "description": "Path on the filesystem to source and watch for configuration updates.\n When sourcing configuration for :ref:`secret \u003cenvoy_api_msg_auth.Secret\u003e`,\n the certificate and key files are also watched for updates.\n\n .. note::\n\n  The path to the source must exist at config load time.\n\n .. note::\n\n   Envoy will only watch the file path for *moves.* This is because in general only moves\n   are atomic. The same method of swapping files as is demonstrated in the\n   :ref:`runtime documentation \u003cconfig_runtime_symbolic_link_swap\u003e` can be used here also."
                        },
                        "api_config_source": {
                            "properties": {
                                "api_type": {
                                    "enum": [
                                        "UNSUPPORTED_REST_LEGACY",
                                        0,
                                        "REST",
                                        1,
                                        "GRPC",
                                        2,
                                        "DELTA_GRPC",
                                        3
                                    ],
                                    "oneOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        }
                                    ],
                                    "description": "API type (gRPC, REST, delta gRPC)"
                                },
                                "transport_api_version": {
                                    "enum": [
                                        "AUTO",
                                        0,
                                        "V2",
                                        1,
                                        "V3",
                                        2
                                    ],
                                    "oneOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        }
                                    ],
                                    "description": "API version for xDS transport protocol. This describes the xDS gRPC/REST\n endpoint and version of [Delta]DiscoveryRequest/Response used on the wire."
                                },
                                "cluster_names": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "Cluster names should be used only with REST. If \u003e 1\n cluster is defined, clusters will be cycled through if any kind of failure\n occurs.\n\n .. note::\n\n  The cluster with name ``cluster_name`` must be statically defined and its\n  type must not be ``EDS``."
                                },
                                "grpc_services": {
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "properties": {
                                            "envoy_grpc": {
                                                "properties": {
                                                    "cluster_name": {
                                                        "type": "string",
                                                        "description": "The name of the upstream gRPC cluster. SSL credentials will be supplied\n in the :ref:`Cluster \u003cenvoy_api_msg_Cluster\u003e` :ref:`transport_socket\n \u003cenvoy_api_field_Cluster.transport_socket\u003e`."
                                                    }
                                                },
                                                "additionalProperties": true,
                                                "type": "object",
                                                "description": "Envoy's in-built gRPC client.\n See the :ref:`gRPC services overview \u003carch_overview_grpc_services\u003e`\n documentation for discussion on gRPC client selection."
                                            },
                                            "google_grpc": {
                                                "properties": {
                                                    "target_uri": {
                                                        "type": "string",
                                                        "description": "The target URI when using the `Google C++ gRPC client\n \u003chttps://github.com/grpc/grpc\u003e`_. SSL credentials will be supplied in\n :ref:`channel_credentials \u003cenvoy_api_field_core.GrpcService.GoogleGrpc.channel_credentials\u003e`."
                                                    },
                                                    "channel_credentials": {
                                                        "properties": {
                                                            "ssl_credentials": {
                                                                "properties": {
                                                                    "root_certs": {
                                                                        "$ref": "envoy.api.v2.core.DataSource",
                                                                        "additionalProperties": true,
                                                                        "description": "PEM encoded server root certificates."
                                                                    },
                                                                    "private_key": {
                                                                        "$ref": "envoy.api.v2.core.DataSource",
                                                                        "additionalProperties": true,
                                                                        "description": "PEM encoded client private key."
                                                                    },
                                                                    "cert_chain": {
                                                                        "$ref": "envoy.api.v2.core.DataSource",
                                                                        "additionalProperties": true,
                                                                        "description": "PEM encoded client certificate chain."
                                                                    }
                                                                },
                                                                "additionalProperties": true,
                                                                "type": "object"
                                                            },
                                                            "google_default": {
                                                                "additionalProperties": true,
                                                                "type": "object",
                                                                "description": "https://grpc.io/grpc/cpp/namespacegrpc.html#a6beb3ac70ff94bd2ebbd89b8f21d1f61"
                                                            },
                                                            "local_credentials": {
                                                                "additionalProperties": true,
                                                                "type": "object"
                                                            }
                                                        },
                                                        "additionalProperties": true,
                                                        "type": "object"
                                                    },
                                                    "call_credentials": {
                                                        "items": {
                                                            "$schema": "http://json-schema.org/draft-04/schema#",
                                                            "properties": {
                                                                "access_token": {
                                                                    "type": "string",
                                                                    "description": "Access token credentials.\n https://grpc.io/grpc/cpp/namespacegrpc.html#ad3a80da696ffdaea943f0f858d7a360d."
                                                                },
                                                                "google_compute_engine": {
                                                                    "additionalProperties": true,
                                                                    "type": "object",
                                                                    "description": "Google Compute Engine credentials.\n https://grpc.io/grpc/cpp/namespacegrpc.html#a6beb3ac70ff94bd2ebbd89b8f21d1f61"
                                                                },
                                                                "google_refresh_token": {
                                                                    "type": "string",
                                                                    "description": "Google refresh token credentials.\n https://grpc.io/grpc/cpp/namespacegrpc.html#a96901c997b91bc6513b08491e0dca37c."
                                                                },
                                                                "service_account_jwt_access": {
                                                                    "properties": {
                                                                        "json_key": {
                                                                            "type": "string"
                                                                        },
                                                                        "token_lifetime_seconds": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "additionalProperties": true,
                                                                    "type": "object",
                                                                    "description": "Service Account JWT Access credentials.\n https://grpc.io/grpc/cpp/namespacegrpc.html#a92a9f959d6102461f66ee973d8e9d3aa."
                                                                },
                                                                "google_iam": {
                                                                    "properties": {
                                                                        "authorization_token": {
                                                                            "type": "string"
                                                                        },
                                                                        "authority_selector": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "additionalProperties": true,
                                                                    "type": "object",
                                                                    "description": "Google IAM credentials.\n https://grpc.io/grpc/cpp/namespacegrpc.html#a9fc1fc101b41e680d47028166e76f9d0."
                                                                },
                                                                "from_plugin": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "config": {
                                                                            "properties": {
                                                                                "fields": {
                                                                                    "additionalProperties": {
                                                                                        "additionalProperties": true,
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "object",
                                                                                    "description": "Unordered map of dynamically typed values."
                                                                                }
                                                                            },
                                                                            "additionalProperties": true,
                                                                            "type": "object"
                                                                        },
                                                                        "typed_config": {
                                                                            "properties": {
                                                                                "type_url": {
                                                                                    "type": "string",
                                                                                    "description": "A URL/resource name that uniquely identifies the type of the serialized\n protocol buffer message. This string must contain at least\n one \"/\" character. The last segment of the URL's path must represent\n the fully qualified name of the type (as in\n `path/google.protobuf.Duration`). The name should be in a canonical form\n (e.g., leading \".\" is not accepted).\n\n In practice, teams usually precompile into the binary all types that they\n expect it to use in the context of Any. However, for URLs which use the\n scheme `http`, `https`, or no scheme, one can optionally set up a type\n server that maps type URLs to message definitions as follows:\n\n * If no scheme is provided, `https` is assumed.\n * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n   value in binary format, or produce an error.\n * Applications are allowed to cache lookup results based on the\n   URL, or have them precompiled into a binary to avoid any\n   lookup. Therefore, binary compatibility needs to be preserved\n   on changes to types. (Use versioned type names to manage\n   breaking changes.)\n\n Note: this functionality is not currently available in the official\n protobuf release, and it is not used for type URLs beginning with\n type.googleapis.com.\n\n Schemes other than `http`, `https` (or the empty scheme) might be\n used with implementation specific semantics."
                                                                                },
                                                                                "value": {
                                                                                    "type": "string",
                                                                                    "description": "Must be a valid serialized protocol buffer of the above specified type."
                                                                                }
                                                                            },
                                                                            "additionalProperties": true,
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "additionalProperties": true,
                                                                    "type": "object",
                                                                    "description": "Custom authenticator credentials.\n https://grpc.io/grpc/cpp/namespacegrpc.html#a823c6a4b19ffc71fb33e90154ee2ad07.\n https://grpc.io/docs/guides/auth.html#extending-grpc-to-support-other-authentication-mechanisms."
                                                                },
                                                                "sts_service": {
                                                                    "properties": {
                                                                        "token_exchange_service_uri": {
                                                                            "type": "string",
                                                                            "description": "URI of the token exchange service that handles token exchange requests.\n [#comment:TODO(asraa): Add URI validation when implemented. Tracked by\n https://github.com/envoyproxy/protoc-gen-validate/issues/303]"
                                                                        },
                                                                        "resource": {
                                                                            "type": "string",
                                                                            "description": "Location of the target service or resource where the client\n intends to use the requested security token."
                                                                        },
                                                                        "audience": {
                                                                            "type": "string",
                                                                            "description": "Logical name of the target service where the client intends to\n use the requested security token."
                                                                        },
                                                                        "scope": {
                                                                            "type": "string",
                                                                            "description": "The desired scope of the requested security token in the\n context of the service or resource where the token will be used."
                                                                        },
                                                                        "requested_token_type": {
                                                                            "type": "string",
                                                                            "description": "Type of the requested security token."
                                                                        },
                                                                        "subject_token_path": {
                                                                            "type": "string",
                                                                            "description": "The path of subject token, a security token that represents the\n identity of the party on behalf of whom the request is being made."
                                                                        },
                                                                        "subject_token_type": {
                                                                            "type": "string",
                                                                            "description": "Type of the subject token."
                                                                        },
                                                                        "actor_token_path": {
                                                                            "type": "string",
                                                                            "description": "The path of actor token, a security token that represents the identity\n of the acting party. The acting party is authorized to use the\n requested security token and act on behalf of the subject."
                                                                        },
                                                                        "actor_token_type": {
                                                                            "type": "string",
                                                                            "description": "Type of the actor token."
                                                                        }
                                                                    },
                                                                    "additionalProperties": true,
                                                                    "type": "object",
                                                                    "description": "Custom security token service which implements OAuth 2.0 token exchange.\n https://tools.ietf.org/html/draft-ietf-oauth-token-exchange-16\n See https://github.com/grpc/grpc/pull/19587."
                                                                }
                                                            },
                                                            "additionalProperties": true,
                                                            "type": "object",
                                                            "description": "[#next-free-field: 8]"
                                                        },
                                                        "type": "array",
                                                        "description": "A set of call credentials that can be composed with `channel credentials\n \u003chttps://grpc.io/docs/guides/auth.html#credential-types\u003e`_."
                                                    },
                                                    "stat_prefix": {
                                                        "type": "string",
                                                        "description": "The human readable prefix to use when emitting statistics for the gRPC\n service.\n\n .. csv-table::\n    :header: Name, Type, Description\n    :widths: 1, 1, 2\n\n    streams_total, Counter, Total number of streams opened\n    streams_closed_\u003cgRPC status code\u003e, Counter, Total streams closed with \u003cgRPC status code\u003e"
                                                    },
                                                    "credentials_factory_name": {
                                                        "type": "string",
                                                        "description": "The name of the Google gRPC credentials factory to use. This must have been registered with\n Envoy. If this is empty, a default credentials factory will be used that sets up channel\n credentials based on other configuration parameters."
                                                    },
                                                    "config": {
                                                        "properties": {
                                                            "fields": {
                                                                "additionalProperties": {
                                                                    "additionalProperties": true,
                                                                    "type": "object"
                                                                },
                                                                "type": "object",
                                                                "description": "Unordered map of dynamically typed values."
                                                            }
                                                        },
                                                        "additionalProperties": true,
                                                        "type": "object",
                                                        "description": "Additional configuration for site-specific customizations of the Google\n gRPC library."
                                                    }
                                                },
                                                "additionalProperties": true,
                                                "type": "object",
                                                "description": "`Google C++ gRPC client \u003chttps://github.com/grpc/grpc\u003e`_\n See the :ref:`gRPC services overview \u003carch_overview_grpc_services\u003e`\n documentation for discussion on gRPC client selection."
                                            },
                                            "timeout": {
                                                "properties": {
                                                    "seconds": {
                                                        "type": "string",
                                                        "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                                                    },
                                                    "nanos": {
                                                        "type": "integer",
                                                        "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."
                                                    }
                                                },
                                                "additionalProperties": true,
                                                "type": "object",
                                                "description": "The timeout for the gRPC request. This is the timeout for a specific\n request."
                                            },
                                            "initial_metadata": {
                                                "items": {
                                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                                    "properties": {
                                                        "key": {
                                                            "type": "string",
                                                            "description": "Header name."
                                                        },
                                                        "value": {
                                                            "type": "string",
                                                            "description": "Header value.\n\n The same :ref:`format specifier \u003cconfig_access_log_format\u003e` as used for\n :ref:`HTTP access logging \u003cconfig_access_log\u003e` applies here, however\n unknown header values are replaced with the empty string instead of `-`."
                                                        }
                                                    },
                                                    "additionalProperties": true,
                                                    "type": "object",
                                                    "description": "Header name/value pair."
                                                },
                                                "type": "array",
                                                "description": "Additional metadata to include in streams initiated to the GrpcService.\n This can be used for scenarios in which additional ad hoc authorization\n headers (e.g. ``x-foo-bar: baz-key``) are to be injected."
                                            }
                                        },
                                        "additionalProperties": true,
                                        "type": "object",
                                        "description": "[#protodoc-title: gRPC services]\n\ngRPC service configuration. This is used by :ref:`ApiConfigSource\n \u003cenvoy_api_msg_core.ApiConfigSource\u003e` and filter configurations.\n [#next-free-field: 6]"
                                    },
                                    "type": "array",
                                    "description": "Multiple gRPC services be provided for GRPC. If \u003e 1 cluster is defined,\n services will be cycled through if any kind of failure occurs."
                                },
                                "refresh_delay": {
                                    "properties": {
                                        "seconds": {
                                            "type": "string",
                                            "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                                        },
                                        "nanos": {
                                            "type": "integer",
                                            "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."
                                        }
                                    },
                                    "additionalProperties": true,
                                    "type": "object",
                                    "description": "For REST APIs, the delay between successive polls."
                                },
                                "request_timeout": {
                                    "properties": {
                                        "seconds": {
                                            "type": "string",
                                            "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                                        },
                                        "nanos": {
                                            "type": "integer",
                                            "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."
                                        }
                                    },
                                    "additionalProperties": true,
                                    "type": "object",
                                    "description": "For REST APIs, the request timeout. If not set, a default value of 1s will be used."
                                },
                                "rate_limit_settings": {
                                    "properties": {
                                        "max_tokens": {
                                            "additionalProperties": true,
                                            "type": "integer",
                                            "description": "Maximum number of tokens to be used for rate limiting discovery request calls. If not set, a\n default value of 100 will be used."
                                        },
                                        "fill_rate": {
                                            "additionalProperties": true,
                                            "type": "number",
                                            "description": "Rate at which tokens will be filled per second. If not set, a default fill rate of 10 tokens\n per second will be used."
                                        }
                                    },
                                    "additionalProperties": true,
                                    "type": "object",
                                    "description": "For GRPC APIs, the rate limit settings. If present, discovery requests made by Envoy will be\n rate limited."
                                },
                                "set_node_on_first_message_only": {
                                    "type": "boolean",
                                    "description": "Skip the node identifier in subsequent discovery requests for streaming gRPC config types."
                                }
                            },
                            "additionalProperties": true,
                            "type": "object",
                            "description": "API configuration source."
                        },
                        "ads": {
                            "additionalProperties": true,
                            "type": "object",
                            "description": "When set, ADS will be used to fetch resources. The ADS API configuration\n source in the bootstrap configuration is used."
                        },
                        "self": {
                            "properties": {
                                "transport_api_version": {
                                    "enum": [
                                        "AUTO",
                                        0,
                                        "V2",
                                        1,
                                        "V3",
                                        2
                                    ],
                                    "oneOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        }
                                    ],
                                    "description": "API version for xDS transport protocol. This describes the xDS gRPC/REST\n endpoint and version of [Delta]DiscoveryRequest/Response used on the wire."
                                }
                            },
                            "additionalProperties": true,
                            "type": "object",
                            "description": "[#not-implemented-hide:]\n When set, the client will access the resources from the same server it got the\n ConfigSource from, although not necessarily from the same stream. This is similar to the\n :ref:`ads\u003cenvoy_api_field.ConfigSource.ads\u003e` field, except that the client may use a\n different stream to the same server. As a result, this field can be used for things\n like LRS that cannot be sent on an ADS stream. It can also be used to link from (e.g.)\n LDS to RDS on the same server without requiring the management server to know its name\n or required credentials.\n [#next-major-version: In xDS v3, consider replacing the ads field with this one, since\n this field can implicitly mean to use the same stream in the case where the ConfigSource\n is provided via ADS and the specified data can also be obtained via ADS.]"
                        },
                        "initial_fetch_timeout": {
                            "properties": {
                                "seconds": {
                                    "type": "string",
                                    "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                                },
                                "nanos": {
                                    "type": "integer",
                                    "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."
                                }
                            },
                            "additionalProperties": true,
                            "type": "object",
                            "description": "When this timeout is specified, Envoy will wait no longer than the specified time for first\n config response on this xDS subscription during the :ref:`initialization process\n \u003carch_overview_initialization\u003e`. After reaching the timeout, Envoy will move to the next\n initialization phase, even if the first config is not delivered yet. The timer is activated\n when the xDS API subscription starts, and is disarmed on first config update or on error. 0\n means no timeout - Envoy will wait indefinitely for the first xDS config (unless another\n timeout applies). The default is 15s."
                        },
                        "resource_api_version": {
                            "enum": [
                                "AUTO",
                                0,
                                "V2",
                                1,
                                "V3",
                                2
                            ],
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ],
                            "description": "API version for xDS resources. This implies the type URLs that the client\n will request for resources and the resource type that the client will in\n turn expect to be delivered."
                        }
                    },
                    "additionalProperties": true,
                    "type": "object"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "id": "envoy.api.v2.auth.SdsSecretConfig"
        },
        "envoy.api.v2.core.DataSource": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": {
                "filename": {
                    "type": "string",
                    "description": "Local filesystem data source."
                },
                "inline_bytes": {
                    "type": "string",
                    "description": "Bytes inlined in the configuration."
                },
                "inline_string": {
                    "type": "string",
                    "description": "String inlined in the configuration."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "Data source consisting of either a file or an inline value.",
            "id": "envoy.api.v2.core.DataSource"
        }
    }
}