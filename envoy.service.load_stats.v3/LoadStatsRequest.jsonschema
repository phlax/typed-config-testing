{"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"node": {"properties": {"id": {"type": "string", "description": "An opaque node identifier for the Envoy node. This also provides the local\n service node name. It should be set if any of the following features are\n used: :ref:`statsd <arch_overview_statistics>`, :ref:`CDS\n <config_cluster_manager_cds>`, and :ref:`HTTP tracing\n <arch_overview_tracing>`, either in this message or via\n :option:`--service-node`."}, "cluster": {"type": "string", "description": "Defines the local service cluster name where Envoy is running. Though\n optional, it should be set if any of the following features are used:\n :ref:`statsd <arch_overview_statistics>`, :ref:`health check cluster\n verification\n <envoy_api_field_config.core.v3.HealthCheck.HttpHealthCheck.service_name_matcher>`,\n :ref:`runtime override directory <envoy_api_msg_config.bootstrap.v3.Runtime>`,\n :ref:`user agent addition\n <envoy_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.add_user_agent>`,\n :ref:`HTTP global rate limiting <config_http_filters_rate_limit>`,\n :ref:`CDS <config_cluster_manager_cds>`, and :ref:`HTTP tracing\n <arch_overview_tracing>`, either in this message or via\n :option:`--service-cluster`."}, "metadata": {"properties": {"fields": {"additionalProperties": {"additionalProperties": true, "type": "object"}, "type": "object", "description": "Unordered map of dynamically typed values."}}, "additionalProperties": true, "type": "object", "description": "Opaque metadata extending the node identifier. Envoy will pass this\n directly to the management server."}, "locality": {"$ref": "#/definitions/envoy.config.core.v3.Locality", "additionalProperties": true, "description": "Locality specifying where the Envoy instance is running."}, "user_agent_name": {"type": "string", "description": "Free-form string that identifies the entity requesting config.\n E.g. \"envoy\" or \"grpc\""}, "user_agent_version": {"type": "string", "description": "Free-form string that identifies the version of the entity requesting config.\n E.g. \"1.12.2\" or \"abcd1234\", or \"SpecialEnvoyBuild\""}, "user_agent_build_version": {"$ref": "#/definitions/envoy.config.core.v3.BuildVersion", "additionalProperties": true, "description": "Structured version of the entity requesting config."}, "extensions": {"items": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"name": {"type": "string", "description": "This is the name of the Envoy filter as specified in the Envoy\n configuration, e.g. envoy.filters.http.router, com.acme.widget."}, "category": {"type": "string", "description": "Category of the extension.\n Extension category names use reverse DNS notation. For instance \"envoy.filters.listener\"\n for Envoy's built-in listener filters or \"com.acme.filters.http\" for HTTP filters from\n acme.com vendor.\n [#comment:TODO(yanavlasov): Link to the doc with existing envoy category names.]"}, "type_descriptor": {"type": "string", "description": "[#not-implemented-hide:] Type descriptor of extension configuration proto.\n [#comment:TODO(yanavlasov): Link to the doc with existing configuration protos.]\n [#comment:TODO(yanavlasov): Add tests when PR #9391 lands.]"}, "version": {"$ref": "#/definitions/envoy.config.core.v3.BuildVersion", "additionalProperties": true, "description": "The version is a property of the extension and maintained independently\n of other extensions and the Envoy API.\n This field is not set when extension did not provide version information."}, "disabled": {"type": "boolean", "description": "Indicates that the extension is present but was disabled via dynamic configuration."}}, "additionalProperties": true, "type": "object", "description": "Version and identification for an Envoy extension.\n [#next-free-field: 6]"}, "type": "array", "description": "List of extensions and their versions supported by the node."}, "client_features": {"items": {"type": "string"}, "type": "array", "description": "Client feature support list. These are well known features described\n in the Envoy API repository for a given major version of an API. Client features\n use reverse DNS naming scheme, for example `com.acme.feature`.\n See :ref:`the list of features <client_features>` that xDS client may\n support."}, "listening_addresses": {"items": {"$schema": "http://json-schema.org/draft-04/schema#", "$ref": "#/definitions/envoy.config.core.v3.Address"}, "type": "array", "description": "Known listening ports on the node as a generic hint to the management server\n for filtering :ref:`listeners <config_listeners>` to be returned. For example,\n if there is a listener bound to port 80, the list can optionally contain the\n SocketAddress `(0.0.0.0,80)`. The field is optional and just a hint."}}, "additionalProperties": true, "type": "object", "description": "Node identifier for Envoy instance."}, "cluster_stats": {"items": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"cluster_name": {"type": "string", "description": "The name of the cluster."}, "cluster_service_name": {"type": "string", "description": "The eds_cluster_config service_name of the cluster.\n It's possible that two clusters send the same service_name to EDS,\n in that case, the management server is supposed to do aggregation on the load reports."}, "upstream_locality_stats": {"items": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"locality": {"$ref": "#/definitions/envoy.config.core.v3.Locality", "additionalProperties": true, "description": "Name of zone, region and optionally endpoint group these metrics were\n collected from. Zone and region names could be empty if unknown."}, "total_successful_requests": {"type": "string", "description": "The total number of requests successfully completed by the endpoints in the\n locality."}, "total_requests_in_progress": {"type": "string", "description": "The total number of unfinished requests"}, "total_error_requests": {"type": "string", "description": "The total number of requests that failed due to errors at the endpoint,\n aggregated over all endpoints in the locality."}, "total_issued_requests": {"type": "string", "description": "The total number of requests that were issued by this Envoy since\n the last report. This information is aggregated over all the\n upstream endpoints in the locality."}, "load_metric_stats": {"items": {"$schema": "http://json-schema.org/draft-04/schema#", "$ref": "#/definitions/envoy.config.endpoint.v3.EndpointLoadMetricStats"}, "type": "array", "description": "Stats for multi-dimensional load balancing."}, "upstream_endpoint_stats": {"items": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"address": {"$ref": "#/definitions/envoy.config.core.v3.Address", "additionalProperties": true, "description": "Upstream host address."}, "metadata": {"properties": {"fields": {"additionalProperties": {"additionalProperties": true, "type": "object"}, "type": "object", "description": "Unordered map of dynamically typed values."}}, "additionalProperties": true, "type": "object", "description": "Opaque and implementation dependent metadata of the\n endpoint. Envoy will pass this directly to the management server."}, "total_successful_requests": {"type": "string", "description": "The total number of requests successfully completed by the endpoints in the\n locality. These include non-5xx responses for HTTP, where errors\n originate at the client and the endpoint responded successfully. For gRPC,\n the grpc-status values are those not covered by total_error_requests below."}, "total_requests_in_progress": {"type": "string", "description": "The total number of unfinished requests for this endpoint."}, "total_error_requests": {"type": "string", "description": "The total number of requests that failed due to errors at the endpoint.\n For HTTP these are responses with 5xx status codes and for gRPC the\n grpc-status values:\n\n   - DeadlineExceeded\n   - Unimplemented\n   - Internal\n   - Unavailable\n   - Unknown\n   - DataLoss"}, "total_issued_requests": {"type": "string", "description": "The total number of requests that were issued to this endpoint\n since the last report. A single TCP connection, HTTP or gRPC\n request or stream is counted as one request."}, "load_metric_stats": {"items": {"$schema": "http://json-schema.org/draft-04/schema#", "$ref": "#/definitions/envoy.config.endpoint.v3.EndpointLoadMetricStats"}, "type": "array", "description": "Stats for multi-dimensional load balancing."}}, "additionalProperties": true, "type": "object", "description": "[#next-free-field: 8]"}, "type": "array", "description": "Endpoint granularity stats information for this locality. This information\n is populated if the Server requests it by setting\n :ref:`LoadStatsResponse.report_endpoint_granularity<envoy_api_field_service.load_stats.v3.LoadStatsResponse.report_endpoint_granularity>`."}, "priority": {"type": "integer", "description": "[#not-implemented-hide:] The priority of the endpoint group these metrics\n were collected from."}}, "additionalProperties": true, "type": "object", "description": "[#protodoc-title: Load Report]\n\nThese are stats Envoy reports to the management server at a frequency defined by\n :ref:`LoadStatsResponse.load_reporting_interval<envoy_api_field_service.load_stats.v3.LoadStatsResponse.load_reporting_interval>`.\n Stats per upstream region/zone and optionally per subzone.\n [#next-free-field: 9]"}, "type": "array", "description": "Need at least one."}, "total_dropped_requests": {"type": "string", "description": "Cluster-level stats such as total_successful_requests may be computed by\n summing upstream_locality_stats. In addition, below there are additional\n cluster-wide stats.\n\n The total number of dropped requests. This covers requests\n deliberately dropped by the drop_overload policy and circuit breaking."}, "dropped_requests": {"items": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"category": {"type": "string", "description": "Identifier for the policy specifying the drop."}, "dropped_count": {"type": "string", "description": "Total number of deliberately dropped requests for the category."}}, "additionalProperties": true, "type": "object"}, "type": "array", "description": "Information about deliberately dropped requests for each category specified\n in the DropOverload policy."}, "load_report_interval": {"properties": {"seconds": {"type": "string", "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"}, "nanos": {"type": "integer", "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."}}, "additionalProperties": true, "type": "object", "description": "Period over which the actual load report occurred. This will be guaranteed to include every\n request reported. Due to system load and delays between the *LoadStatsRequest* sent from Envoy\n and the *LoadStatsResponse* message sent from the management server, this may be longer than\n the requested load reporting interval in the *LoadStatsResponse*."}}, "additionalProperties": true, "type": "object", "description": "Per cluster load stats. Envoy reports these stats a management server in a\n :ref:`LoadStatsRequest<envoy_api_msg_service.load_stats.v3.LoadStatsRequest>`\n Next ID: 7\n [#next-free-field: 7]"}, "type": "array", "description": "A list of load stats to report."}}, "additionalProperties": true, "type": "object", "description": "A load report Envoy sends to the management server.", "definitions": {"envoy.config.core.v3.Address": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"socket_address": {"properties": {"protocol": {"enum": ["TCP", 0, "UDP", 1], "oneOf": [{"type": "string"}, {"type": "integer"}]}, "address": {"type": "string", "description": "The address for this socket. :ref:`Listeners <config_listeners>` will bind\n to the address. An empty address is not allowed. Specify ``0.0.0.0`` or ``::``\n to bind to any address. [#comment:TODO(zuercher) reinstate when implemented:\n It is possible to distinguish a Listener address via the prefix/suffix matching\n in :ref:`FilterChainMatch <envoy_api_msg_config.listener.v3.FilterChainMatch>`.] When used\n within an upstream :ref:`BindConfig <envoy_api_msg_config.core.v3.BindConfig>`, the address\n controls the source address of outbound connections. For :ref:`clusters\n <envoy_api_msg_config.cluster.v3.Cluster>`, the cluster type determines whether the\n address must be an IP (*STATIC* or *EDS* clusters) or a hostname resolved by DNS\n (*STRICT_DNS* or *LOGICAL_DNS* clusters). Address resolution can be customized\n via :ref:`resolver_name <envoy_api_field_config.core.v3.SocketAddress.resolver_name>`."}, "port_value": {"type": "integer"}, "named_port": {"type": "string", "description": "This is only valid if :ref:`resolver_name\n <envoy_api_field_config.core.v3.SocketAddress.resolver_name>` is specified below and the\n named resolver is capable of named port resolution."}, "resolver_name": {"type": "string", "description": "The name of the custom resolver. This must have been registered with Envoy. If\n this is empty, a context dependent default applies. If the address is a concrete\n IP address, no resolution will occur. If address is a hostname this\n should be set for resolution other than DNS. Specifying a custom resolver with\n *STRICT_DNS* or *LOGICAL_DNS* will generate an error at runtime."}, "ipv4_compat": {"type": "boolean", "description": "When binding to an IPv6 address above, this enables `IPv4 compatibility\n <https://tools.ietf.org/html/rfc3493#page-11>`_. Binding to ``::`` will\n allow both IPv4 and IPv6 connections, with peer IPv4 addresses mapped into\n IPv6 space as ``::FFFF:<IPv4-address>``."}}, "additionalProperties": true, "type": "object"}, "pipe": {"properties": {"path": {"type": "string", "description": "Unix Domain Socket path. On Linux, paths starting with '@' will use the\n abstract namespace. The starting '@' is replaced by a null byte by Envoy.\n Paths starting with '@' will result in an error in environments other than\n Linux."}, "mode": {"type": "integer", "description": "The mode for the Pipe. Not applicable for abstract sockets."}}, "additionalProperties": true, "type": "object"}, "envoy_internal_address": {"properties": {"server_listener_name": {"type": "string", "description": "[#not-implemented-hide:] The :ref:`listener name <envoy_api_field_config.listener.v3.Listener.name>` of the destination internal listener."}}, "additionalProperties": true, "type": "object", "description": "[#not-implemented-hide:]"}}, "additionalProperties": true, "type": "object", "description": "Addresses specify either a logical or physical address and port, which are\n used to tell Envoy where to bind/listen, connect to upstream and find\n management servers.", "id": "envoy.config.core.v3.Address"}, "envoy.config.core.v3.BuildVersion": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"version": {"properties": {"major_number": {"type": "integer"}, "minor_number": {"type": "integer"}, "patch": {"type": "integer"}}, "additionalProperties": true, "type": "object", "description": "SemVer version of extension."}, "metadata": {"properties": {"fields": {"additionalProperties": {"additionalProperties": true, "type": "object"}, "type": "object", "description": "Unordered map of dynamically typed values."}}, "additionalProperties": true, "type": "object", "description": "Free-form build information.\n Envoy defines several well known keys in the source/common/version/version.h file"}}, "additionalProperties": true, "type": "object", "description": "BuildVersion combines SemVer version of extension with free-form build information\n (i.e. 'alpha', 'private-build') as a set of strings.", "id": "envoy.config.core.v3.BuildVersion"}, "envoy.config.core.v3.Locality": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"region": {"type": "string", "description": "Region this :ref:`zone <envoy_api_field_config.core.v3.Locality.zone>` belongs to."}, "zone": {"type": "string", "description": "Defines the local service zone where Envoy is running. Though optional, it\n should be set if discovery service routing is used and the discovery\n service exposes :ref:`zone data <envoy_api_field_config.endpoint.v3.LocalityLbEndpoints.locality>`,\n either in this message or via :option:`--service-zone`. The meaning of zone\n is context dependent, e.g. `Availability Zone (AZ)\n <https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html>`_\n on AWS, `Zone <https://cloud.google.com/compute/docs/regions-zones/>`_ on\n GCP, etc."}, "sub_zone": {"type": "string", "description": "When used for locality of upstream hosts, this field further splits zone\n into smaller chunks of sub-zones so they can be load balanced\n independently."}}, "additionalProperties": true, "type": "object", "description": "Identifies location of where either Envoy runs or where upstream hosts run.", "id": "envoy.config.core.v3.Locality"}, "envoy.config.endpoint.v3.EndpointLoadMetricStats": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"metric_name": {"type": "string", "description": "Name of the metric; may be empty."}, "num_requests_finished_with_metric": {"type": "string", "description": "Number of calls that finished and included this metric."}, "total_metric_value": {"type": "number", "description": "Sum of metric values across all calls that finished with this metric for\n load_reporting_interval."}}, "additionalProperties": true, "type": "object", "id": "envoy.config.endpoint.v3.EndpointLoadMetricStats"}}}