{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "properties": {
        "enabled": {
            "properties": {
                "default_value": {
                    "additionalProperties": true,
                    "type": "boolean",
                    "description": "Default value if runtime value is not available."
                },
                "runtime_key": {
                    "type": "string",
                    "description": "Runtime key to get value for comparison. This value is used if defined. The boolean value must\n be represented via its\n `canonical JSON encoding \u003chttps://developers.google.com/protocol-buffers/docs/proto3#json\u003e`_."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "If set to false, the admission control filter will operate as a pass-through filter. If the\n message is unspecified, the filter will be enabled."
        },
        "success_criteria": {
            "properties": {
                "http_criteria": {
                    "properties": {
                        "http_success_status": {
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "properties": {
                                    "start": {
                                        "type": "integer",
                                        "description": "start of the range (inclusive)"
                                    },
                                    "end": {
                                        "type": "integer",
                                        "description": "end of the range (exclusive)"
                                    }
                                },
                                "additionalProperties": true,
                                "type": "object",
                                "description": "Specifies the int32 start and end of the range using half-open interval semantics [start,\n end)."
                            },
                            "type": "array",
                            "description": "Status code ranges that constitute a successful request. Configurable codes are in the\n range [100, 600)."
                        }
                    },
                    "additionalProperties": true,
                    "type": "object",
                    "description": "If HTTP criteria are unspecified, all HTTP status codes below 500 are treated as successful\n responses.\n\n .. note::\n\n    The default HTTP codes considered successful by the admission controller are done so due\n    to the unlikelihood that sending fewer requests would change their behavior (for example:\n    redirects, unauthorized access, or bad requests won't be alleviated by sending less\n    traffic)."
                },
                "grpc_criteria": {
                    "properties": {
                        "grpc_success_status": {
                            "items": {
                                "type": "integer"
                            },
                            "type": "array",
                            "description": "Status codes that constitute a successful request.\n Mappings can be found at: https://github.com/grpc/grpc/blob/master/doc/statuscodes.md."
                        }
                    },
                    "additionalProperties": true,
                    "type": "object",
                    "description": "GRPC status codes to consider as request successes. If unspecified, defaults to: Ok,\n Cancelled, Unknown, InvalidArgument, NotFound, AlreadyExists, Unauthenticated,\n FailedPrecondition, OutOfRange, PermissionDenied, and Unimplemented.\n\n .. note::\n\n    The default gRPC codes that are considered successful by the admission controller are\n    chosen because of the unlikelihood that sending fewer requests will change the behavior."
                }
            },
            "additionalProperties": true,
            "type": "object"
        },
        "sampling_window": {
            "properties": {
                "seconds": {
                    "type": "string",
                    "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                },
                "nanos": {
                    "type": "integer",
                    "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "The sliding time window over which the success rate is calculated. The window is rounded to the\n nearest second. Defaults to 30s."
        },
        "aggression": {
            "properties": {
                "default_value": {
                    "type": "number",
                    "description": "Default value if runtime value is not available."
                },
                "runtime_key": {
                    "type": "string",
                    "description": "Runtime key to get value for comparison. This value is used if defined."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "Rejection probability is defined by the formula::\n\n     max(0, (rq_count -  rq_success_count / sr_threshold) / (rq_count + 1)) ^ (1 / aggression)\n\n The aggression dictates how heavily the admission controller will throttle requests upon SR\n dropping at or below the threshold. A value of 1 will result in a linear increase in\n rejection probability as SR drops. Any values less than 1.0, will be set to 1.0. If the\n message is unspecified, the aggression is 1.0. See `the admission control documentation\n \u003chttps://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/admission_control_filter.html\u003e`_\n for a diagram illustrating this."
        },
        "sr_threshold": {
            "properties": {
                "default_value": {
                    "properties": {
                        "value": {
                            "type": "number"
                        }
                    },
                    "additionalProperties": true,
                    "type": "object",
                    "description": "Default value if runtime value is not available."
                },
                "runtime_key": {
                    "type": "string",
                    "description": "Runtime key to get value for comparison. This value is used if defined."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "Dictates the success rate at which the rejection probability is non-zero. As success rate drops\n below this threshold, rejection probability will increase. Any success rate above the threshold\n results in a rejection probability of 0. Defaults to 95%."
        }
    },
    "additionalProperties": true,
    "type": "object",
    "description": "[#protodoc-title: Admission Control]\n [#extension: envoy.filters.http.admission_control]\n\n[#next-free-field: 6]"
}