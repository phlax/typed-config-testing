{"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"delay": {"properties": {"type": {"enum": ["FIXED", 0], "oneOf": [{"type": "string"}, {"type": "integer"}], "description": "Unused and deprecated. Will be removed in the next release."}, "fixed_delay": {"properties": {"seconds": {"type": "string", "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"}, "nanos": {"type": "integer", "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."}}, "additionalProperties": true, "type": "object", "description": "Add a fixed delay before forwarding the operation upstream. See\n https://developers.google.com/protocol-buffers/docs/proto3#json for\n the JSON/YAML Duration mapping. For HTTP/Mongo/Redis, the specified\n delay will be injected before a new request/operation. For TCP\n connections, the proxying of the connection upstream will be delayed\n for the specified period. This is required if type is FIXED."}, "header_delay": {"additionalProperties": true, "type": "object", "description": "Fault delays are controlled via an HTTP header (if applicable)."}, "percentage": {"$ref": "https://phlax.github.io/typed-config-testing/envoy.type/FractionalPercent.jsonschema", "additionalProperties": true, "description": "The percentage of operations/connections/requests on which the delay will be injected."}}, "additionalProperties": true, "type": "object", "description": "If specified, the filter will inject delays based on the values in the\n object."}, "abort": {"properties": {"http_status": {"type": "integer", "description": "HTTP status code to use to abort the HTTP request."}, "header_abort": {"additionalProperties": true, "type": "object", "description": "Fault aborts are controlled via an HTTP header (if applicable)."}, "percentage": {"$ref": "https://phlax.github.io/typed-config-testing/envoy.type/FractionalPercent.jsonschema", "additionalProperties": true, "description": "The percentage of requests/operations/connections that will be aborted with the error code\n provided."}}, "additionalProperties": true, "type": "object", "description": "If specified, the filter will abort requests based on the values in\n the object. At least *abort* or *delay* must be specified."}, "upstream_cluster": {"type": "string", "description": "Specifies the name of the (destination) upstream cluster that the\n filter should match on. Fault injection will be restricted to requests\n bound to the specific upstream cluster."}, "headers": {"items": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"name": {"type": "string", "description": "Specifies the name of the header in the request."}, "exact_match": {"type": "string", "description": "If specified, header match will be performed based on the value of the header."}, "regex_match": {"type": "string", "description": "If specified, this regex string is a regular expression rule which implies the entire request\n header value must match the regex. The rule will not match if only a subsequence of the\n request header value matches the regex. The regex grammar used in the value field is defined\n `here <https://en.cppreference.com/w/cpp/regex/ecmascript>`_.\n\n Examples:\n\n * The regex ``\\d{3}`` matches the value *123*\n * The regex ``\\d{3}`` does not match the value *1234*\n * The regex ``\\d{3}`` does not match the value *123.456*\n\n .. attention::\n   This field has been deprecated in favor of `safe_regex_match` as it is not safe for use\n   with untrusted input in all cases."}, "safe_regex_match": {"properties": {"google_re2": {"properties": {"max_program_size": {"additionalProperties": true, "type": "integer", "description": "This field controls the RE2 \"program size\" which is a rough estimate of how complex a\n compiled regex is to evaluate. A regex that has a program size greater than the configured\n value will fail to compile. In this case, the configured max program size can be increased\n or the regex can be simplified. If not specified, the default is 100.\n\n This field is deprecated; regexp validation should be performed on the management server\n instead of being done by each individual client."}}, "additionalProperties": true, "type": "object", "description": "Google's RE2 regex engine."}, "regex": {"type": "string", "description": "The regex match string. The string must be supported by the configured engine."}}, "additionalProperties": true, "type": "object", "description": "If specified, this regex string is a regular expression rule which implies the entire request\n header value must match the regex. The rule will not match if only a subsequence of the\n request header value matches the regex."}, "range_match": {"properties": {"start": {"type": "string", "description": "start of the range (inclusive)"}, "end": {"type": "string", "description": "end of the range (exclusive)"}}, "additionalProperties": true, "type": "object", "description": "If specified, header match will be performed based on range.\n The rule will match if the request header value is within this range.\n The entire request header value must represent an integer in base 10 notation: consisting of\n an optional plus or minus sign followed by a sequence of digits. The rule will not match if\n the header value does not represent an integer. Match will fail for empty values, floating\n point numbers or if only a subsequence of the header value is an integer.\n\n Examples:\n\n * For range [-10,0), route will match for header value -1, but not for 0, \"somestring\", 10.9,\n   \"-1somestring\""}, "present_match": {"type": "boolean", "description": "If specified, header match will be performed based on whether the header is in the\n request."}, "prefix_match": {"type": "string", "description": "If specified, header match will be performed based on the prefix of the header value.\n Note: empty prefix is not allowed, please use present_match instead.\n\n Examples:\n\n * The prefix *abcd* matches the value *abcdxyz*, but not for *abcxyz*."}, "suffix_match": {"type": "string", "description": "If specified, header match will be performed based on the suffix of the header value.\n Note: empty suffix is not allowed, please use present_match instead.\n\n Examples:\n\n * The suffix *abcd* matches the value *xyzabcd*, but not for *xyzbcd*."}, "invert_match": {"type": "boolean", "description": "If specified, the match result will be inverted before checking. Defaults to false.\n\n Examples:\n\n * The regex ``\\d{3}`` does not match the value *1234*, so it will match when inverted.\n * The range [-10,0) will match the value -1, so it will not match when inverted."}}, "additionalProperties": true, "type": "object", "description": ".. attention::\n\n   Internally, Envoy always uses the HTTP/2 *:authority* header to represent the HTTP/1 *Host*\n   header. Thus, if attempting to match on *Host*, match on *:authority* instead.\n\n .. attention::\n\n   To route on HTTP method, use the special HTTP/2 *:method* header. This works for both\n   HTTP/1 and HTTP/2 as Envoy normalizes headers. E.g.,\n\n   .. code-block:: json\n\n     {\n       \"name\": \":method\",\n       \"exact_match\": \"POST\"\n     }\n\n .. attention::\n   In the absence of any header match specifier, match will default to :ref:`present_match\n   <envoy_api_field_route.HeaderMatcher.present_match>`. i.e, a request that has the :ref:`name\n   <envoy_api_field_route.HeaderMatcher.name>` header will match, regardless of the header's\n   value.\n\n  [#next-major-version: HeaderMatcher should be refactored to use StringMatcher.]\n [#next-free-field: 12]"}, "type": "array", "description": "Specifies a set of headers that the filter should match on. The fault\n injection filter can be applied selectively to requests that match a set of\n headers specified in the fault filter config. The chances of actual fault\n injection further depend on the value of the :ref:`percentage\n <envoy_api_field_config.filter.http.fault.v2.FaultAbort.percentage>` field.\n The filter will check the request's headers against all the specified\n headers in the filter config. A match will happen if all the headers in the\n config are present in the request with the same values (or based on\n presence if the *value* field is not in the config)."}, "downstream_nodes": {"items": {"type": "string"}, "type": "array", "description": "Faults are injected for the specified list of downstream hosts. If this\n setting is not set, faults are injected for all downstream nodes.\n Downstream node name is taken from :ref:`the HTTP\n x-envoy-downstream-service-node\n <config_http_conn_man_headers_downstream-service-node>` header and compared\n against downstream_nodes list."}, "max_active_faults": {"additionalProperties": true, "type": "integer", "description": "The maximum number of faults that can be active at a single time via the configured fault\n filter. Note that because this setting can be overridden at the route level, it's possible\n for the number of active faults to be greater than this value (if injected via a different\n route). If not specified, defaults to unlimited. This setting can be overridden via\n `runtime <config_http_filters_fault_injection_runtime>` and any faults that are not injected\n due to overflow will be indicated via the `faults_overflow\n <config_http_filters_fault_injection_stats>` stat.\n\n .. attention::\n   Like other :ref:`circuit breakers <arch_overview_circuit_break>` in Envoy, this is a fuzzy\n   limit. It's possible for the number of active faults to rise slightly above the configured\n   amount due to the implementation details."}, "response_rate_limit": {"properties": {"fixed_limit": {"properties": {"limit_kbps": {"type": "string", "description": "The limit supplied in KiB/s."}}, "additionalProperties": true, "type": "object", "description": "A fixed rate limit."}, "header_limit": {"additionalProperties": true, "type": "object", "description": "Rate limits are controlled via an HTTP header (if applicable)."}, "percentage": {"$ref": "https://phlax.github.io/typed-config-testing/envoy.type/FractionalPercent.jsonschema", "additionalProperties": true, "description": "The percentage of operations/connections/requests on which the rate limit will be injected."}}, "additionalProperties": true, "type": "object", "description": "The response rate limit to be applied to the response body of the stream. When configured,\n the percentage can be overridden by the :ref:`fault.http.rate_limit.response_percent\n <config_http_filters_fault_injection_runtime>` runtime key.\n\n .. attention::\n  This is a per-stream limit versus a connection level limit. This means that concurrent streams\n  will each get an independent limit."}, "delay_percent_runtime": {"type": "string", "description": "The runtime key to override the :ref:`default <config_http_filters_fault_injection_runtime>`\n runtime. The default is: fault.http.delay.fixed_delay_percent"}, "abort_percent_runtime": {"type": "string", "description": "The runtime key to override the :ref:`default <config_http_filters_fault_injection_runtime>`\n runtime. The default is: fault.http.abort.abort_percent"}, "delay_duration_runtime": {"type": "string", "description": "The runtime key to override the :ref:`default <config_http_filters_fault_injection_runtime>`\n runtime. The default is: fault.http.delay.fixed_duration_ms"}, "abort_http_status_runtime": {"type": "string", "description": "The runtime key to override the :ref:`default <config_http_filters_fault_injection_runtime>`\n runtime. The default is: fault.http.abort.http_status"}, "max_active_faults_runtime": {"type": "string", "description": "The runtime key to override the :ref:`default <config_http_filters_fault_injection_runtime>`\n runtime. The default is: fault.http.max_active_faults"}, "response_rate_limit_percent_runtime": {"type": "string", "description": "The runtime key to override the :ref:`default <config_http_filters_fault_injection_runtime>`\n runtime. The default is: fault.http.rate_limit.response_percent"}}, "additionalProperties": true, "type": "object", "description": "[#next-free-field: 14]", "definitions": {"envoy.type.FractionalPercent": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"numerator": {"type": "integer", "description": "Specifies the numerator. Defaults to 0."}, "denominator": {"enum": ["HUNDRED", 0, "TEN_THOUSAND", 1, "MILLION", 2], "oneOf": [{"type": "string"}, {"type": "integer"}], "description": "Specifies the denominator. If the denominator specified is less than the numerator, the final\n fractional percentage is capped at 1 (100%)."}}, "additionalProperties": true, "type": "object", "description": "A fractional percentage is used in cases in which for performance reasons performing floating\n point to integer conversions during randomness calculations is undesirable. The message includes\n both a numerator and denominator that together determine the final fractional value.\n\n * **Example**: 1/100 = 1%.\n * **Example**: 3/10000 = 0.03%.", "id": "envoy.type.FractionalPercent"}}}