{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "properties": {
        "headers": {
            "items": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Specifies the name of the header in the request."
                    },
                    "exact_match": {
                        "type": "string",
                        "description": "If specified, header match will be performed based on the value of the header."
                    },
                    "safe_regex_match": {
                        "properties": {
                            "google_re2": {
                                "properties": {
                                    "max_program_size": {
                                        "additionalProperties": true,
                                        "type": "integer",
                                        "description": "This field controls the RE2 \"program size\" which is a rough estimate of how complex a\n compiled regex is to evaluate. A regex that has a program size greater than the configured\n value will fail to compile. In this case, the configured max program size can be increased\n or the regex can be simplified. If not specified, the default is 100.\n\n This field is deprecated; regexp validation should be performed on the management server\n instead of being done by each individual client."
                                    }
                                },
                                "additionalProperties": true,
                                "type": "object",
                                "description": "Google's RE2 regex engine."
                            },
                            "regex": {
                                "type": "string",
                                "description": "The regex match string. The string must be supported by the configured engine."
                            }
                        },
                        "additionalProperties": true,
                        "type": "object",
                        "description": "If specified, this regex string is a regular expression rule which implies the entire request\n header value must match the regex. The rule will not match if only a subsequence of the\n request header value matches the regex."
                    },
                    "range_match": {
                        "properties": {
                            "start": {
                                "type": "string",
                                "description": "start of the range (inclusive)"
                            },
                            "end": {
                                "type": "string",
                                "description": "end of the range (exclusive)"
                            }
                        },
                        "additionalProperties": true,
                        "type": "object",
                        "description": "If specified, header match will be performed based on range.\n The rule will match if the request header value is within this range.\n The entire request header value must represent an integer in base 10 notation: consisting of\n an optional plus or minus sign followed by a sequence of digits. The rule will not match if\n the header value does not represent an integer. Match will fail for empty values, floating\n point numbers or if only a subsequence of the header value is an integer.\n\n Examples:\n\n * For range [-10,0), route will match for header value -1, but not for 0, \"somestring\", 10.9,\n   \"-1somestring\""
                    },
                    "present_match": {
                        "type": "boolean",
                        "description": "If specified, header match will be performed based on whether the header is in the\n request."
                    },
                    "prefix_match": {
                        "type": "string",
                        "description": "If specified, header match will be performed based on the prefix of the header value.\n Note: empty prefix is not allowed, please use present_match instead.\n\n Examples:\n\n * The prefix *abcd* matches the value *abcdxyz*, but not for *abcxyz*."
                    },
                    "suffix_match": {
                        "type": "string",
                        "description": "If specified, header match will be performed based on the suffix of the header value.\n Note: empty suffix is not allowed, please use present_match instead.\n\n Examples:\n\n * The suffix *abcd* matches the value *xyzabcd*, but not for *xyzbcd*."
                    },
                    "contains_match": {
                        "type": "string",
                        "description": "If specified, header match will be performed based on whether the header value contains\n the given value or not.\n Note: empty contains match is not allowed, please use present_match instead.\n\n Examples:\n\n * The value *abcd* matches the value *xyzabcdpqr*, but not for *xyzbcdpqr*."
                    },
                    "invert_match": {
                        "type": "boolean",
                        "description": "If specified, the match result will be inverted before checking. Defaults to false.\n\n Examples:\n\n * The regex ``\\d{3}`` does not match the value *1234*, so it will match when inverted.\n * The range [-10,0) will match the value -1, so it will not match when inverted."
                    }
                },
                "additionalProperties": true,
                "type": "object",
                "description": ".. attention::\n\n   Internally, Envoy always uses the HTTP/2 *:authority* header to represent the HTTP/1 *Host*\n   header. Thus, if attempting to match on *Host*, match on *:authority* instead.\n\n .. attention::\n\n   To route on HTTP method, use the special HTTP/2 *:method* header. This works for both\n   HTTP/1 and HTTP/2 as Envoy normalizes headers. E.g.,\n\n   .. code-block:: json\n\n     {\n       \"name\": \":method\",\n       \"exact_match\": \"POST\"\n     }\n\n .. attention::\n   In the absence of any header match specifier, match will default to :ref:`present_match\n   \u003cenvoy_api_field_config.route.v3.HeaderMatcher.present_match\u003e`. i.e, a request that has the :ref:`name\n   \u003cenvoy_api_field_config.route.v3.HeaderMatcher.name\u003e` header will match, regardless of the header's\n   value.\n\n  [#next-major-version: HeaderMatcher should be refactored to use StringMatcher.]\n [#next-free-field: 13]"
            },
            "type": "array",
            "description": "Specifies a list of header matchers to use for matching requests. Each specified header must\n match. The pseudo-headers `:path` and `:method` can be used to match the request path and\n method, respectively."
        },
        "name": {
            "type": "string",
            "description": "Specifies the name of the virtual cluster. The virtual cluster name as well\n as the virtual host name are used when emitting statistics. The statistics are emitted by the\n router filter and are documented :ref:`here \u003cconfig_http_filters_router_stats\u003e`."
        }
    },
    "additionalProperties": true,
    "type": "object",
    "description": "A virtual cluster is a way of specifying a regex matching rule against\n certain important endpoints such that statistics are generated explicitly for\n the matched requests. The reason this is useful is that when doing\n prefix/path matching Envoy does not always know what the application\n considers to be an endpoint. Thus, it’s impossible for Envoy to generically\n emit per endpoint statistics. However, often systems have highly critical\n endpoints that they wish to get “perfect” statistics on. Virtual cluster\n statistics are perfect in the sense that they are emitted on the downstream\n side such that they include network level failures.\n\n Documentation for :ref:`virtual cluster statistics \u003cconfig_http_filters_router_vcluster_stats\u003e`.\n\n .. note::\n\n    Virtual clusters are a useful tool, but we do not recommend setting up a virtual cluster for\n    every application endpoint. This is both not easily maintainable and as well the matching and\n    statistics output are not free."
}