{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "properties": {
        "max_internal_redirects": {
            "additionalProperties": true,
            "type": "integer",
            "description": "An internal redirect is not handled, unless the number of previous internal redirects that a\n downstream request has encountered is lower than this value.\n In the case where a downstream request is bounced among multiple routes by internal redirect,\n the first route that hits this threshold, or does not set :ref:`internal_redirect_policy\n \u003cenvoy_api_field_config.route.v3.RouteAction.internal_redirect_policy\u003e`\n will pass the redirect back to downstream.\n\n If not specified, at most one redirect will be followed."
        },
        "redirect_response_codes": {
            "items": {
                "type": "integer"
            },
            "type": "array",
            "description": "Defines what upstream response codes are allowed to trigger internal redirect. If unspecified,\n only 302 will be treated as internal redirect.\n Only 301, 302, 303, 307 and 308 are valid values. Any other codes will be ignored."
        },
        "predicates": {
            "items": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of an extension. This is not used to select the extension, instead\n it serves the role of an opaque identifier."
                    },
                    "typed_config": {
                        "properties": {
                            "type_url": {
                                "type": "string",
                                "description": "A URL/resource name that uniquely identifies the type of the serialized\n protocol buffer message. This string must contain at least\n one \"/\" character. The last segment of the URL's path must represent\n the fully qualified name of the type (as in\n `path/google.protobuf.Duration`). The name should be in a canonical form\n (e.g., leading \".\" is not accepted).\n\n In practice, teams usually precompile into the binary all types that they\n expect it to use in the context of Any. However, for URLs which use the\n scheme `http`, `https`, or no scheme, one can optionally set up a type\n server that maps type URLs to message definitions as follows:\n\n * If no scheme is provided, `https` is assumed.\n * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n   value in binary format, or produce an error.\n * Applications are allowed to cache lookup results based on the\n   URL, or have them precompiled into a binary to avoid any\n   lookup. Therefore, binary compatibility needs to be preserved\n   on changes to types. (Use versioned type names to manage\n   breaking changes.)\n\n Note: this functionality is not currently available in the official\n protobuf release, and it is not used for type URLs beginning with\n type.googleapis.com.\n\n Schemes other than `http`, `https` (or the empty scheme) might be\n used with implementation specific semantics."
                            },
                            "value": {
                                "type": "string",
                                "description": "Must be a valid serialized protocol buffer of the above specified type."
                            }
                        },
                        "additionalProperties": true,
                        "type": "object",
                        "description": "The typed config for the extension. The type URL will be used to identify\n the extension. In the case that the type URL is *udpa.type.v1.TypedStruct*,\n the inner type URL of *TypedStruct* will be utilized. See the\n :ref:`extension configuration overview\n \u003cconfig_overview_extension_configuration\u003e` for further details."
                    }
                },
                "additionalProperties": true,
                "type": "object",
                "description": "[#protodoc-title: Extension configuration]\n\nMessage type for extension configuration.\n [#next-major-version: revisit all existing typed_config that doesn't use this wrapper.]."
            },
            "type": "array",
            "description": "Specifies a list of predicates that are queried when an upstream response is deemed\n to trigger an internal redirect by all other criteria. Any predicate in the list can reject\n the redirect, causing the response to be proxied to downstream."
        },
        "allow_cross_scheme_redirect": {
            "type": "boolean",
            "description": "Allow internal redirect to follow a target URI with a different scheme than the value of\n x-forwarded-proto. The default is false."
        }
    },
    "additionalProperties": true,
    "type": "object",
    "description": "HTTP Internal Redirect :ref:`architecture overview \u003carch_overview_internal_redirects\u003e`."
}