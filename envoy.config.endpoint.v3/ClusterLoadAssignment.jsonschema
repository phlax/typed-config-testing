{"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"cluster_name": {"type": "string", "description": "Name of the cluster. This will be the :ref:`service_name\n <envoy_api_field_config.cluster.v3.Cluster.EdsClusterConfig.service_name>` value if specified\n in the cluster :ref:`EdsClusterConfig\n <envoy_api_msg_config.cluster.v3.Cluster.EdsClusterConfig>`."}, "endpoints": {"items": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"locality": {"properties": {"region": {"type": "string", "description": "Region this :ref:`zone <envoy_api_field_config.core.v3.Locality.zone>` belongs to."}, "zone": {"type": "string", "description": "Defines the local service zone where Envoy is running. Though optional, it\n should be set if discovery service routing is used and the discovery\n service exposes :ref:`zone data <envoy_api_field_config.endpoint.v3.LocalityLbEndpoints.locality>`,\n either in this message or via :option:`--service-zone`. The meaning of zone\n is context dependent, e.g. `Availability Zone (AZ)\n <https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html>`_\n on AWS, `Zone <https://cloud.google.com/compute/docs/regions-zones/>`_ on\n GCP, etc."}, "sub_zone": {"type": "string", "description": "When used for locality of upstream hosts, this field further splits zone\n into smaller chunks of sub-zones so they can be load balanced\n independently."}}, "additionalProperties": true, "type": "object", "description": "Identifies location of where the upstream hosts run."}, "lb_endpoints": {"items": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"endpoint": {"$ref": "https://phlax.github.io/typed-config-testing/envoy.config.endpoint.v3/Endpoint.jsonschema", "additionalProperties": true}, "endpoint_name": {"type": "string", "description": "[#not-implemented-hide:]"}, "health_status": {"enum": ["UNKNOWN", 0, "HEALTHY", 1, "UNHEALTHY", 2, "DRAINING", 3, "TIMEOUT", 4, "DEGRADED", 5], "oneOf": [{"type": "string"}, {"type": "integer"}], "description": "Optional health status when known and supplied by EDS server."}, "metadata": {"properties": {"filter_metadata": {"additionalProperties": {"properties": {"fields": {"additionalProperties": {"additionalProperties": true, "type": "object"}, "type": "object", "description": "Unordered map of dynamically typed values."}}, "additionalProperties": true, "type": "object"}, "type": "object", "description": "Key is the reverse DNS filter name, e.g. com.acme.widget. The envoy.*\n namespace is reserved for Envoy's built-in filters."}}, "additionalProperties": true, "type": "object", "description": "The endpoint metadata specifies values that may be used by the load\n balancer to select endpoints in a cluster for a given request. The filter\n name should be specified as *envoy.lb*. An example boolean key-value pair\n is *canary*, providing the optional canary status of the upstream host.\n This may be matched against in a route's\n :ref:`RouteAction <envoy_api_msg_config.route.v3.RouteAction>` metadata_match field\n to subset the endpoints considered in cluster load balancing."}, "load_balancing_weight": {"additionalProperties": true, "type": "integer", "description": "The optional load balancing weight of the upstream host; at least 1.\n Envoy uses the load balancing weight in some of the built in load\n balancers. The load balancing weight for an endpoint is divided by the sum\n of the weights of all endpoints in the endpoint's locality to produce a\n percentage of traffic for the endpoint. This percentage is then further\n weighted by the endpoint's locality's load balancing weight from\n LocalityLbEndpoints. If unspecified, each host is presumed to have equal\n weight in a locality. The sum of the weights of all endpoints in the\n endpoint's locality must not exceed uint32_t maximal value (4294967295)."}}, "additionalProperties": true, "type": "object", "description": "An Endpoint that Envoy can route traffic to.\n [#next-free-field: 6]"}, "type": "array", "description": "The group of endpoints belonging to the locality specified."}, "load_balancing_weight": {"additionalProperties": true, "type": "integer", "description": "Optional: Per priority/region/zone/sub_zone weight; at least 1. The load\n balancing weight for a locality is divided by the sum of the weights of all\n localities  at the same priority level to produce the effective percentage\n of traffic for the locality. The sum of the weights of all localities at\n the same priority level must not exceed uint32_t maximal value (4294967295).\n\n Locality weights are only considered when :ref:`locality weighted load\n balancing <arch_overview_load_balancing_locality_weighted_lb>` is\n configured. These weights are ignored otherwise. If no weights are\n specified when locality weighted load balancing is enabled, the locality is\n assigned no load."}, "priority": {"type": "integer", "description": "Optional: the priority for this LocalityLbEndpoints. If unspecified this will\n default to the highest priority (0).\n\n Under usual circumstances, Envoy will only select endpoints for the highest\n priority (0). In the event all endpoints for a particular priority are\n unavailable/unhealthy, Envoy will fail over to selecting endpoints for the\n next highest priority group.\n\n Priorities should range from 0 (highest) to N (lowest) without skipping."}, "proximity": {"additionalProperties": true, "type": "integer", "description": "Optional: Per locality proximity value which indicates how close this\n locality is from the source locality. This value only provides ordering\n information (lower the value, closer it is to the source locality).\n This will be consumed by load balancing schemes that need proximity order\n to determine where to route the requests.\n [#not-implemented-hide:]"}}, "additionalProperties": true, "type": "object", "description": "A group of endpoints belonging to a Locality.\n One can have multiple LocalityLbEndpoints for a locality, but this is\n generally only done if the different groups need to have different load\n balancing weights or different priorities.\n [#next-free-field: 7]"}, "type": "array", "description": "List of endpoints to load balance to."}, "named_endpoints": {"additionalProperties": {"$ref": "https://phlax.github.io/typed-config-testing/envoy.config.endpoint.v3/Endpoint.jsonschema", "additionalProperties": true}, "type": "object", "description": "Map of named endpoints that can be referenced in LocalityLbEndpoints.\n [#not-implemented-hide:]"}, "policy": {"properties": {"drop_overloads": {"items": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"category": {"type": "string", "description": "Identifier for the policy specifying the drop."}, "drop_percentage": {"properties": {"numerator": {"type": "integer", "description": "Specifies the numerator. Defaults to 0."}, "denominator": {"enum": ["HUNDRED", 0, "TEN_THOUSAND", 1, "MILLION", 2], "oneOf": [{"type": "string"}, {"type": "integer"}], "description": "Specifies the denominator. If the denominator specified is less than the numerator, the final\n fractional percentage is capped at 1 (100%)."}}, "additionalProperties": true, "type": "object", "description": "Percentage of traffic that should be dropped for the category."}}, "additionalProperties": true, "type": "object", "description": "[#not-implemented-hide:]"}, "type": "array", "description": "Action to trim the overall incoming traffic to protect the upstream\n hosts. This action allows protection in case the hosts are unable to\n recover from an outage, or unable to autoscale or unable to handle\n incoming traffic volume for any reason.\n\n At the client each category is applied one after the other to generate\n the 'actual' drop percentage on all outgoing traffic. For example:\n\n .. code-block:: json\n\n  { \"drop_overloads\": [\n      { \"category\": \"throttle\", \"drop_percentage\": 60 }\n      { \"category\": \"lb\", \"drop_percentage\": 50 }\n  ]}\n\n The actual drop percentages applied to the traffic at the clients will be\n    \"throttle\"_drop = 60%\n    \"lb\"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.\n    actual_outgoing_load = 20% // remaining after applying all categories.\n [#not-implemented-hide:]"}, "overprovisioning_factor": {"additionalProperties": true, "type": "integer", "description": "Priority levels and localities are considered overprovisioned with this\n factor (in percentage). This means that we don't consider a priority\n level or locality unhealthy until the fraction of healthy hosts\n multiplied by the overprovisioning factor drops below 100.\n With the default value 140(1.4), Envoy doesn't consider a priority level\n or a locality unhealthy until their percentage of healthy hosts drops\n below 72%. For example:\n\n .. code-block:: json\n\n  { \"overprovisioning_factor\": 100 }\n\n Read more at :ref:`priority levels <arch_overview_load_balancing_priority_levels>` and\n :ref:`localities <arch_overview_load_balancing_locality_weighted_lb>`."}, "endpoint_stale_after": {"properties": {"seconds": {"type": "string", "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"}, "nanos": {"type": "integer", "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."}}, "additionalProperties": true, "type": "object", "description": "The max time until which the endpoints from this assignment can be used.\n If no new assignments are received before this time expires the endpoints\n are considered stale and should be marked unhealthy.\n Defaults to 0 which means endpoints never go stale."}}, "additionalProperties": true, "type": "object", "description": "Load balancing policy settings."}}, "additionalProperties": true, "type": "object", "description": "[#protodoc-title: Endpoint configuration]\n Endpoint discovery :ref:`architecture overview <arch_overview_service_discovery_types_eds>`\n\nEach route from RDS will map to a single cluster or traffic split across\n clusters using weights expressed in the RDS WeightedCluster.\n\n With EDS, each cluster is treated independently from a LB perspective, with\n LB taking place between the Localities within a cluster and at a finer\n granularity between the hosts within a locality. The percentage of traffic\n for each endpoint is determined by both its load_balancing_weight, and the\n load_balancing_weight of its locality. First, a locality will be selected,\n then an endpoint within that locality will be chose based on its weight.\n [#next-free-field: 6]", "definitions": {"envoy.config.endpoint.v3.Endpoint": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"address": {"properties": {"socket_address": {"properties": {"protocol": {"enum": ["TCP", 0, "UDP", 1], "oneOf": [{"type": "string"}, {"type": "integer"}]}, "address": {"type": "string", "description": "The address for this socket. :ref:`Listeners <config_listeners>` will bind\n to the address. An empty address is not allowed. Specify ``0.0.0.0`` or ``::``\n to bind to any address. [#comment:TODO(zuercher) reinstate when implemented:\n It is possible to distinguish a Listener address via the prefix/suffix matching\n in :ref:`FilterChainMatch <envoy_api_msg_config.listener.v3.FilterChainMatch>`.] When used\n within an upstream :ref:`BindConfig <envoy_api_msg_config.core.v3.BindConfig>`, the address\n controls the source address of outbound connections. For :ref:`clusters\n <envoy_api_msg_config.cluster.v3.Cluster>`, the cluster type determines whether the\n address must be an IP (*STATIC* or *EDS* clusters) or a hostname resolved by DNS\n (*STRICT_DNS* or *LOGICAL_DNS* clusters). Address resolution can be customized\n via :ref:`resolver_name <envoy_api_field_config.core.v3.SocketAddress.resolver_name>`."}, "port_value": {"type": "integer"}, "named_port": {"type": "string", "description": "This is only valid if :ref:`resolver_name\n <envoy_api_field_config.core.v3.SocketAddress.resolver_name>` is specified below and the\n named resolver is capable of named port resolution."}, "resolver_name": {"type": "string", "description": "The name of the custom resolver. This must have been registered with Envoy. If\n this is empty, a context dependent default applies. If the address is a concrete\n IP address, no resolution will occur. If address is a hostname this\n should be set for resolution other than DNS. Specifying a custom resolver with\n *STRICT_DNS* or *LOGICAL_DNS* will generate an error at runtime."}, "ipv4_compat": {"type": "boolean", "description": "When binding to an IPv6 address above, this enables `IPv4 compatibility\n <https://tools.ietf.org/html/rfc3493#page-11>`_. Binding to ``::`` will\n allow both IPv4 and IPv6 connections, with peer IPv4 addresses mapped into\n IPv6 space as ``::FFFF:<IPv4-address>``."}}, "additionalProperties": true, "type": "object"}, "pipe": {"properties": {"path": {"type": "string", "description": "Unix Domain Socket path. On Linux, paths starting with '@' will use the\n abstract namespace. The starting '@' is replaced by a null byte by Envoy.\n Paths starting with '@' will result in an error in environments other than\n Linux."}, "mode": {"type": "integer", "description": "The mode for the Pipe. Not applicable for abstract sockets."}}, "additionalProperties": true, "type": "object"}, "envoy_internal_address": {"properties": {"server_listener_name": {"type": "string", "description": "[#not-implemented-hide:] The :ref:`listener name <envoy_api_field_config.listener.v3.Listener.name>` of the destination internal listener."}}, "additionalProperties": true, "type": "object", "description": "[#not-implemented-hide:]"}}, "additionalProperties": true, "type": "object", "description": "The upstream host address.\n\n .. attention::\n\n   The form of host address depends on the given cluster type. For STATIC or EDS,\n   it is expected to be a direct IP address (or something resolvable by the\n   specified :ref:`resolver <envoy_api_field_config.core.v3.SocketAddress.resolver_name>`\n   in the Address). For LOGICAL or STRICT DNS, it is expected to be hostname,\n   and will be resolved via DNS."}, "health_check_config": {"properties": {"port_value": {"type": "integer", "description": "Optional alternative health check port value.\n\n By default the health check address port of an upstream host is the same\n as the host's serving address port. This provides an alternative health\n check port. Setting this with a non-zero value allows an upstream host\n to have different health check address port."}, "hostname": {"type": "string", "description": "By default, the host header for L7 health checks is controlled by cluster level configuration\n (see: :ref:`host <envoy_api_field_config.core.v3.HealthCheck.HttpHealthCheck.host>` and\n :ref:`authority <envoy_api_field_config.core.v3.HealthCheck.GrpcHealthCheck.authority>`). Setting this\n to a non-empty value allows overriding the cluster level configuration for a specific\n endpoint."}}, "additionalProperties": true, "type": "object", "description": "The optional health check configuration is used as configuration for the\n health checker to contact the health checked host.\n\n .. attention::\n\n   This takes into effect only for upstream clusters with\n   :ref:`active health checking <arch_overview_health_checking>` enabled."}, "hostname": {"type": "string", "description": "The hostname associated with this endpoint. This hostname is not used for routing or address\n resolution. If provided, it will be associated with the endpoint, and can be used for features\n that require a hostname, like\n :ref:`auto_host_rewrite <envoy_api_field_config.route.v3.RouteAction.auto_host_rewrite>`."}}, "additionalProperties": true, "type": "object", "description": "[#protodoc-title: Endpoints]\n\nUpstream host identifier.", "id": "envoy.config.endpoint.v3.Endpoint"}}}