{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "properties": {
        "cluster_name": {
            "type": "string",
            "description": "The name of the cluster."
        },
        "cluster_service_name": {
            "type": "string",
            "description": "The eds_cluster_config service_name of the cluster.\n It's possible that two clusters send the same service_name to EDS,\n in that case, the management server is supposed to do aggregation on the load reports."
        },
        "upstream_locality_stats": {
            "items": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "properties": {
                    "locality": {
                        "properties": {
                            "region": {
                                "type": "string",
                                "description": "Region this :ref:`zone \u003cenvoy_api_field_core.Locality.zone\u003e` belongs to."
                            },
                            "zone": {
                                "type": "string",
                                "description": "Defines the local service zone where Envoy is running. Though optional, it\n should be set if discovery service routing is used and the discovery\n service exposes :ref:`zone data \u003cenvoy_api_field_endpoint.LocalityLbEndpoints.locality\u003e`,\n either in this message or via :option:`--service-zone`. The meaning of zone\n is context dependent, e.g. `Availability Zone (AZ)\n \u003chttps://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html\u003e`_\n on AWS, `Zone \u003chttps://cloud.google.com/compute/docs/regions-zones/\u003e`_ on\n GCP, etc."
                            },
                            "sub_zone": {
                                "type": "string",
                                "description": "When used for locality of upstream hosts, this field further splits zone\n into smaller chunks of sub-zones so they can be load balanced\n independently."
                            }
                        },
                        "additionalProperties": true,
                        "type": "object",
                        "description": "Name of zone, region and optionally endpoint group these metrics were\n collected from. Zone and region names could be empty if unknown."
                    },
                    "total_successful_requests": {
                        "type": "string",
                        "description": "The total number of requests successfully completed by the endpoints in the\n locality."
                    },
                    "total_requests_in_progress": {
                        "type": "string",
                        "description": "The total number of unfinished requests"
                    },
                    "total_error_requests": {
                        "type": "string",
                        "description": "The total number of requests that failed due to errors at the endpoint,\n aggregated over all endpoints in the locality."
                    },
                    "total_issued_requests": {
                        "type": "string",
                        "description": "The total number of requests that were issued by this Envoy since\n the last report. This information is aggregated over all the\n upstream endpoints in the locality."
                    },
                    "load_metric_stats": {
                        "items": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "$ref": "envoy.api.v2.endpoint.EndpointLoadMetricStats"
                        },
                        "type": "array",
                        "description": "Stats for multi-dimensional load balancing."
                    },
                    "upstream_endpoint_stats": {
                        "items": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "properties": {
                                "address": {
                                    "properties": {
                                        "socket_address": {
                                            "properties": {
                                                "protocol": {
                                                    "enum": [
                                                        "TCP",
                                                        0,
                                                        "UDP",
                                                        1
                                                    ],
                                                    "oneOf": [
                                                        {
                                                            "type": "string"
                                                        },
                                                        {
                                                            "type": "integer"
                                                        }
                                                    ]
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "description": "The address for this socket. :ref:`Listeners \u003cconfig_listeners\u003e` will bind\n to the address. An empty address is not allowed. Specify ``0.0.0.0`` or ``::``\n to bind to any address. [#comment:TODO(zuercher) reinstate when implemented:\n It is possible to distinguish a Listener address via the prefix/suffix matching\n in :ref:`FilterChainMatch \u003cenvoy_api_msg_listener.FilterChainMatch\u003e`.] When used\n within an upstream :ref:`BindConfig \u003cenvoy_api_msg_core.BindConfig\u003e`, the address\n controls the source address of outbound connections. For :ref:`clusters\n \u003cenvoy_api_msg_Cluster\u003e`, the cluster type determines whether the\n address must be an IP (*STATIC* or *EDS* clusters) or a hostname resolved by DNS\n (*STRICT_DNS* or *LOGICAL_DNS* clusters). Address resolution can be customized\n via :ref:`resolver_name \u003cenvoy_api_field_core.SocketAddress.resolver_name\u003e`."
                                                },
                                                "port_value": {
                                                    "type": "integer"
                                                },
                                                "named_port": {
                                                    "type": "string",
                                                    "description": "This is only valid if :ref:`resolver_name\n \u003cenvoy_api_field_core.SocketAddress.resolver_name\u003e` is specified below and the\n named resolver is capable of named port resolution."
                                                },
                                                "resolver_name": {
                                                    "type": "string",
                                                    "description": "The name of the custom resolver. This must have been registered with Envoy. If\n this is empty, a context dependent default applies. If the address is a concrete\n IP address, no resolution will occur. If address is a hostname this\n should be set for resolution other than DNS. Specifying a custom resolver with\n *STRICT_DNS* or *LOGICAL_DNS* will generate an error at runtime."
                                                },
                                                "ipv4_compat": {
                                                    "type": "boolean",
                                                    "description": "When binding to an IPv6 address above, this enables `IPv4 compatibility\n \u003chttps://tools.ietf.org/html/rfc3493#page-11\u003e`_. Binding to ``::`` will\n allow both IPv4 and IPv6 connections, with peer IPv4 addresses mapped into\n IPv6 space as ``::FFFF:\u003cIPv4-address\u003e``."
                                                }
                                            },
                                            "additionalProperties": true,
                                            "type": "object"
                                        },
                                        "pipe": {
                                            "properties": {
                                                "path": {
                                                    "type": "string",
                                                    "description": "Unix Domain Socket path. On Linux, paths starting with '@' will use the\n abstract namespace. The starting '@' is replaced by a null byte by Envoy.\n Paths starting with '@' will result in an error in environments other than\n Linux."
                                                },
                                                "mode": {
                                                    "type": "integer",
                                                    "description": "The mode for the Pipe. Not applicable for abstract sockets."
                                                }
                                            },
                                            "additionalProperties": true,
                                            "type": "object"
                                        }
                                    },
                                    "additionalProperties": true,
                                    "type": "object",
                                    "description": "Upstream host address."
                                },
                                "metadata": {
                                    "properties": {
                                        "fields": {
                                            "additionalProperties": {
                                                "additionalProperties": true,
                                                "type": "object"
                                            },
                                            "type": "object",
                                            "description": "Unordered map of dynamically typed values."
                                        }
                                    },
                                    "additionalProperties": true,
                                    "type": "object",
                                    "description": "Opaque and implementation dependent metadata of the\n endpoint. Envoy will pass this directly to the management server."
                                },
                                "total_successful_requests": {
                                    "type": "string",
                                    "description": "The total number of requests successfully completed by the endpoints in the\n locality. These include non-5xx responses for HTTP, where errors\n originate at the client and the endpoint responded successfully. For gRPC,\n the grpc-status values are those not covered by total_error_requests below."
                                },
                                "total_requests_in_progress": {
                                    "type": "string",
                                    "description": "The total number of unfinished requests for this endpoint."
                                },
                                "total_error_requests": {
                                    "type": "string",
                                    "description": "The total number of requests that failed due to errors at the endpoint.\n For HTTP these are responses with 5xx status codes and for gRPC the\n grpc-status values:\n\n   - DeadlineExceeded\n   - Unimplemented\n   - Internal\n   - Unavailable\n   - Unknown\n   - DataLoss"
                                },
                                "total_issued_requests": {
                                    "type": "string",
                                    "description": "The total number of requests that were issued to this endpoint\n since the last report. A single TCP connection, HTTP or gRPC\n request or stream is counted as one request."
                                },
                                "load_metric_stats": {
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "$ref": "envoy.api.v2.endpoint.EndpointLoadMetricStats"
                                    },
                                    "type": "array",
                                    "description": "Stats for multi-dimensional load balancing."
                                }
                            },
                            "additionalProperties": true,
                            "type": "object",
                            "description": "[#not-implemented-hide:] Not configuration. TBD how to doc proto APIs.\n [#next-free-field: 8]"
                        },
                        "type": "array",
                        "description": "Endpoint granularity stats information for this locality. This information\n is populated if the Server requests it by setting\n :ref:`LoadStatsResponse.report_endpoint_granularity\u003cenvoy_api_field_service.load_stats.v2.LoadStatsResponse.report_endpoint_granularity\u003e`."
                    },
                    "priority": {
                        "type": "integer",
                        "description": "[#not-implemented-hide:] The priority of the endpoint group these metrics\n were collected from."
                    }
                },
                "additionalProperties": true,
                "type": "object",
                "description": "These are stats Envoy reports to GLB every so often. Report frequency is\n defined by\n :ref:`LoadStatsResponse.load_reporting_interval\u003cenvoy_api_field_service.load_stats.v2.LoadStatsResponse.load_reporting_interval\u003e`.\n Stats per upstream region/zone and optionally per subzone.\n [#not-implemented-hide:] Not configuration. TBD how to doc proto APIs.\n [#next-free-field: 9]"
            },
            "type": "array",
            "description": "Need at least one."
        },
        "total_dropped_requests": {
            "type": "string",
            "description": "Cluster-level stats such as total_successful_requests may be computed by\n summing upstream_locality_stats. In addition, below there are additional\n cluster-wide stats.\n\n The total number of dropped requests. This covers requests\n deliberately dropped by the drop_overload policy and circuit breaking."
        },
        "dropped_requests": {
            "items": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "properties": {
                    "category": {
                        "type": "string",
                        "description": "Identifier for the policy specifying the drop."
                    },
                    "dropped_count": {
                        "type": "string",
                        "description": "Total number of deliberately dropped requests for the category."
                    }
                },
                "additionalProperties": true,
                "type": "object"
            },
            "type": "array",
            "description": "Information about deliberately dropped requests for each category specified\n in the DropOverload policy."
        },
        "load_report_interval": {
            "properties": {
                "seconds": {
                    "type": "string",
                    "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                },
                "nanos": {
                    "type": "integer",
                    "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "Period over which the actual load report occurred. This will be guaranteed to include every\n request reported. Due to system load and delays between the *LoadStatsRequest* sent from Envoy\n and the *LoadStatsResponse* message sent from the management server, this may be longer than\n the requested load reporting interval in the *LoadStatsResponse*."
        }
    },
    "additionalProperties": true,
    "type": "object",
    "description": "Per cluster load stats. Envoy reports these stats a management server in a\n :ref:`LoadStatsRequest\u003cenvoy_api_msg_service.load_stats.v2.LoadStatsRequest\u003e`\n [#not-implemented-hide:] Not configuration. TBD how to doc proto APIs.\n Next ID: 7\n [#next-free-field: 7]",
    "definitions": {
        "envoy.api.v2.endpoint.EndpointLoadMetricStats": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": {
                "metric_name": {
                    "type": "string",
                    "description": "Name of the metric; may be empty."
                },
                "num_requests_finished_with_metric": {
                    "type": "string",
                    "description": "Number of calls that finished and included this metric."
                },
                "total_metric_value": {
                    "type": "number",
                    "description": "Sum of metric values across all calls that finished with this metric for\n load_reporting_interval."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "[#not-implemented-hide:] Not configuration. TBD how to doc proto APIs.",
            "id": "envoy.api.v2.endpoint.EndpointLoadMetricStats"
        }
    }
}