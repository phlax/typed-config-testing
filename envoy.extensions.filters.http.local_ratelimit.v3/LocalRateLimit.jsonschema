{"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"stat_prefix": {"type": "string", "description": "The human readable prefix to use when emitting stats."}, "status": {"properties": {"code": {"enum": ["Empty", 0, "Continue", 100, "OK", 200, "Created", 201, "Accepted", 202, "NonAuthoritativeInformation", 203, "NoContent", 204, "ResetContent", 205, "PartialContent", 206, "MultiStatus", 207, "AlreadyReported", 208, "IMUsed", 226, "MultipleChoices", 300, "MovedPermanently", 301, "Found", 302, "SeeOther", 303, "NotModified", 304, "UseProxy", 305, "TemporaryRedirect", 307, "PermanentRedirect", 308, "BadRequest", 400, "Unauthorized", 401, "PaymentRequired", 402, "Forbidden", 403, "NotFound", 404, "MethodNotAllowed", 405, "NotAcceptable", 406, "ProxyAuthenticationRequired", 407, "RequestTimeout", 408, "Conflict", 409, "Gone", 410, "LengthRequired", 411, "PreconditionFailed", 412, "PayloadTooLarge", 413, "URITooLong", 414, "UnsupportedMediaType", 415, "RangeNotSatisfiable", 416, "ExpectationFailed", 417, "MisdirectedRequest", 421, "UnprocessableEntity", 422, "Locked", 423, "FailedDependency", 424, "UpgradeRequired", 426, "PreconditionRequired", 428, "TooManyRequests", 429, "RequestHeaderFieldsTooLarge", 431, "InternalServerError", 500, "NotImplemented", 501, "BadGateway", 502, "ServiceUnavailable", 503, "GatewayTimeout", 504, "HTTPVersionNotSupported", 505, "VariantAlsoNegotiates", 506, "InsufficientStorage", 507, "LoopDetected", 508, "NotExtended", 510, "NetworkAuthenticationRequired", 511], "oneOf": [{"type": "string"}, {"type": "integer"}], "description": "Supplies HTTP response code."}}, "additionalProperties": true, "type": "object", "description": "This field allows for a custom HTTP response status code to the downstream client when\n the request has been rate limited.\n Defaults to 429 (TooManyRequests).\n\n .. note::\n   If this is set to < 400, 429 will be used instead."}, "token_bucket": {"$ref": "#/definitions/envoy.type.v3.TokenBucket", "additionalProperties": true, "description": "The token bucket configuration to use for rate limiting requests that are processed by this\n filter. Each request processed by the filter consumes a single token. If the token is available,\n the request will be allowed. If no tokens are available, the request will receive the configured\n rate limit status.\n\n .. note::\n   It's fine for the token bucket to be unset for the global configuration since the rate limit\n   can be applied at a the virtual host or route level. Thus, the token bucket must be set\n   for the per route configuration otherwise the config will be rejected.\n\n .. note::\n   When using per route configuration, the bucket becomes unique to that route.\n\n .. note::\n   In the current implementation the token bucket's :ref:`fill_interval\n   <envoy_api_field_type.v3.TokenBucket.fill_interval>` must be >= 50ms to avoid too aggressive\n   refills."}, "filter_enabled": {"$ref": "#/definitions/envoy.config.core.v3.RuntimeFractionalPercent", "additionalProperties": true, "description": "If set, this will enable -- but not necessarily enforce -- the rate limit for the given\n fraction of requests.\n Defaults to 0% of requests for safety."}, "filter_enforced": {"$ref": "#/definitions/envoy.config.core.v3.RuntimeFractionalPercent", "additionalProperties": true, "description": "If set, this will enforce the rate limit decisions for the given fraction of requests.\n\n Note: this only applies to the fraction of enabled requests.\n\n Defaults to 0% of requests for safety."}, "response_headers_to_add": {"items": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"header": {"properties": {"key": {"type": "string", "description": "Header name."}, "value": {"type": "string", "description": "Header value.\n\n The same :ref:`format specifier <config_access_log_format>` as used for\n :ref:`HTTP access logging <config_access_log>` applies here, however\n unknown header values are replaced with the empty string instead of `-`."}}, "additionalProperties": true, "type": "object", "description": "Header name/value pair that this option applies to."}, "append": {"additionalProperties": true, "type": "boolean", "description": "Should the value be appended? If true (default), the value is appended to\n existing values. Otherwise it replaces any existing values."}}, "additionalProperties": true, "type": "object", "description": "Header name/value pair plus option to control append behavior."}, "type": "array", "description": "Specifies a list of HTTP headers that should be added to each response for requests that\n have been rate limited."}, "descriptors": {"items": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"entries": {"items": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"key": {"type": "string", "description": "Descriptor key."}, "value": {"type": "string", "description": "Descriptor value."}}, "additionalProperties": true, "type": "object"}, "type": "array", "description": "Descriptor entries."}, "token_bucket": {"$ref": "#/definitions/envoy.type.v3.TokenBucket", "additionalProperties": true, "description": "Token Bucket algorithm for local ratelimiting."}}, "additionalProperties": true, "type": "object"}, "type": "array", "description": "The rate limit descriptor list to use in the local rate limit to override\n on. The rate limit descriptor is selected by the first full match from the\n request descriptors.\n\n Example on how to use ::ref:`this <config_http_filters_local_rate_limit_descriptors>`\n\n .. note::\n\n   In the current implementation the descriptor's token bucket :ref:`fill_interval\n   <envoy_api_field_type.v3.TokenBucket.fill_interval>` must be a multiple\n   global :ref:`token bucket's<envoy_api_field_extensions.filters.http.local_ratelimit.v3.LocalRateLimit.token_bucket>` fill interval.\n\n   The descriptors must match verbatim for rate limiting to apply. There is no partial\n   match by a subset of descriptor entries in the current implementation."}, "stage": {"type": "integer", "description": "Specifies the rate limit configurations to be applied with the same\n stage number. If not set, the default stage number is 0.\n\n .. note::\n\n  The filter supports a range of 0 - 10 inclusively for stage numbers."}}, "additionalProperties": true, "type": "object", "description": "[#protodoc-title: Local Rate limit]\n Local Rate limit :ref:`configuration overview <config_http_filters_local_rate_limit>`.\n [#extension: envoy.filters.http.local_ratelimit]\n\n[#next-free-field: 10]", "definitions": {"envoy.config.core.v3.RuntimeFractionalPercent": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"default_value": {"properties": {"numerator": {"type": "integer", "description": "Specifies the numerator. Defaults to 0."}, "denominator": {"enum": ["HUNDRED", 0, "TEN_THOUSAND", 1, "MILLION", 2], "oneOf": [{"type": "string"}, {"type": "integer"}], "description": "Specifies the denominator. If the denominator specified is less than the numerator, the final\n fractional percentage is capped at 1 (100%)."}}, "additionalProperties": true, "type": "object", "description": "Default value if the runtime value's for the numerator/denominator keys are not available."}, "runtime_key": {"type": "string", "description": "Runtime key for a YAML representation of a FractionalPercent."}}, "additionalProperties": true, "type": "object", "description": "Runtime derived FractionalPercent with defaults for when the numerator or denominator is not\n specified via a runtime key.\n\n .. note::\n\n   Parsing of the runtime key's data is implemented such that it may be represented as a\n   :ref:`FractionalPercent <envoy_api_msg_type.v3.FractionalPercent>` proto represented as JSON/YAML\n   and may also be represented as an integer with the assumption that the value is an integral\n   percentage out of 100. For instance, a runtime key lookup returning the value \"42\" would parse\n   as a `FractionalPercent` whose numerator is 42 and denominator is HUNDRED.", "id": "envoy.config.core.v3.RuntimeFractionalPercent"}, "envoy.type.v3.TokenBucket": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"max_tokens": {"type": "integer", "description": "The maximum tokens that the bucket can hold. This is also the number of tokens that the bucket\n initially contains."}, "tokens_per_fill": {"additionalProperties": true, "type": "integer", "description": "The number of tokens added to the bucket during each fill interval. If not specified, defaults\n to a single token."}, "fill_interval": {"properties": {"seconds": {"type": "string", "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"}, "nanos": {"type": "integer", "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."}}, "additionalProperties": true, "type": "object", "description": "The fill interval that tokens are added to the bucket. During each fill interval\n `tokens_per_fill` are added to the bucket. The bucket will never contain more than\n `max_tokens` tokens."}}, "additionalProperties": true, "type": "object", "description": "[#protodoc-title: Token bucket]\n\nConfigures a token bucket, typically used for rate limiting.", "id": "envoy.type.v3.TokenBucket"}}}