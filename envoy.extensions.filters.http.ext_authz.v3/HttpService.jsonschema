{"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"server_uri": {"properties": {"uri": {"type": "string", "description": "The HTTP server URI. It should be a full FQDN with protocol, host and path.\n\n Example:\n\n .. code-block:: yaml\n\n    uri: https://www.googleapis.com/oauth2/v1/certs"}, "cluster": {"type": "string", "description": "A cluster is created in the Envoy \"cluster_manager\" config\n section. This field specifies the cluster name.\n\n Example:\n\n .. code-block:: yaml\n\n    cluster: jwks_cluster"}, "timeout": {"properties": {"seconds": {"type": "string", "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"}, "nanos": {"type": "integer", "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."}}, "additionalProperties": true, "type": "object", "description": "Sets the maximum duration in milliseconds that a response can take to arrive upon request."}}, "additionalProperties": true, "type": "object", "description": "Sets the HTTP server URI which the authorization requests must be sent to."}, "path_prefix": {"type": "string", "description": "Sets a prefix to the value of authorization request header *Path*."}, "authorization_request": {"properties": {"allowed_headers": {"$ref": "https://phlax.github.io/typed-config-testing/envoy.type.matcher.v3/ListStringMatcher.jsonschema", "additionalProperties": true, "description": "Authorization request will include the client request headers that have a correspondent match\n in the :ref:`list <envoy_api_msg_type.matcher.v3.ListStringMatcher>`. Note that in addition to the\n user's supplied matchers:\n\n 1. *Host*, *Method*, *Path* and *Content-Length* are automatically included to the list.\n\n 2. *Content-Length* will be set to 0 and the request to the authorization service will not have\n a message body. However, the authorization request can include the buffered client request body\n (controlled by :ref:`with_request_body\n <envoy_api_field_extensions.filters.http.ext_authz.v3.ExtAuthz.with_request_body>` setting),\n consequently the value of *Content-Length* of the authorization request reflects the size of\n its payload size."}, "headers_to_add": {"items": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"key": {"type": "string", "description": "Header name."}, "value": {"type": "string", "description": "Header value.\n\n The same :ref:`format specifier <config_access_log_format>` as used for\n :ref:`HTTP access logging <config_access_log>` applies here, however\n unknown header values are replaced with the empty string instead of `-`."}}, "additionalProperties": true, "type": "object", "description": "Header name/value pair."}, "type": "array", "description": "Sets a list of headers that will be included to the request to authorization service. Note that\n client request of the same key will be overridden."}}, "additionalProperties": true, "type": "object", "description": "Settings used for controlling authorization request metadata."}, "authorization_response": {"properties": {"allowed_upstream_headers": {"$ref": "https://phlax.github.io/typed-config-testing/envoy.type.matcher.v3/ListStringMatcher.jsonschema", "additionalProperties": true, "description": "When this :ref:`list <envoy_api_msg_type.matcher.v3.ListStringMatcher>` is set, authorization\n response headers that have a correspondent match will be added to the original client request.\n Note that coexistent headers will be overridden."}, "allowed_upstream_headers_to_append": {"$ref": "https://phlax.github.io/typed-config-testing/envoy.type.matcher.v3/ListStringMatcher.jsonschema", "additionalProperties": true, "description": "When this :ref:`list <envoy_api_msg_type.matcher.v3.ListStringMatcher>` is set, authorization\n response headers that have a correspondent match will be added to the client's response. Note\n that coexistent headers will be appended."}, "allowed_client_headers": {"$ref": "https://phlax.github.io/typed-config-testing/envoy.type.matcher.v3/ListStringMatcher.jsonschema", "additionalProperties": true, "description": "When this :ref:`list <envoy_api_msg_type.matcher.v3.ListStringMatcher>`. is set, authorization\n response headers that have a correspondent match will be added to the client's response. Note\n that when this list is *not* set, all the authorization response headers, except *Authority\n (Host)* will be in the response to the client. When a header is included in this list, *Path*,\n *Status*, *Content-Length*, *WWWAuthenticate* and *Location* are automatically added."}}, "additionalProperties": true, "type": "object", "description": "Settings used for controlling authorization response metadata."}}, "additionalProperties": true, "type": "object", "description": "HttpService is used for raw HTTP communication between the filter and the authorization service.\n When configured, the filter will parse the client request and use these attributes to call the\n authorization server. Depending on the response, the filter may reject or accept the client\n request. Note that in any of these events, metadata can be added, removed or overridden by the\n filter:\n\n *On authorization request*, a list of allowed request headers may be supplied. See\n :ref:`allowed_headers\n <envoy_api_field_extensions.filters.http.ext_authz.v3.AuthorizationRequest.allowed_headers>`\n for details. Additional headers metadata may be added to the authorization request. See\n :ref:`headers_to_add\n <envoy_api_field_extensions.filters.http.ext_authz.v3.AuthorizationRequest.headers_to_add>` for\n details.\n\n On authorization response status HTTP 200 OK, the filter will allow traffic to the upstream and\n additional headers metadata may be added to the original client request. See\n :ref:`allowed_upstream_headers\n <envoy_api_field_extensions.filters.http.ext_authz.v3.AuthorizationResponse.allowed_upstream_headers>`\n for details.\n\n On other authorization response statuses, the filter will not allow traffic. Additional headers\n metadata as well as body may be added to the client's response. See :ref:`allowed_client_headers\n <envoy_api_field_extensions.filters.http.ext_authz.v3.AuthorizationResponse.allowed_client_headers>`\n for details.\n [#next-free-field: 9]", "definitions": {"envoy.type.matcher.v3.ListStringMatcher": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"patterns": {"items": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"exact": {"type": "string", "description": "The input string must match exactly the string specified here.\n\n Examples:\n\n * *abc* only matches the value *abc*."}, "prefix": {"type": "string", "description": "The input string must have the prefix specified here.\n Note: empty prefix is not allowed, please use regex instead.\n\n Examples:\n\n * *abc* matches the value *abc.xyz*"}, "suffix": {"type": "string", "description": "The input string must have the suffix specified here.\n Note: empty prefix is not allowed, please use regex instead.\n\n Examples:\n\n * *abc* matches the value *xyz.abc*"}, "safe_regex": {"properties": {"google_re2": {"properties": {"max_program_size": {"additionalProperties": true, "type": "integer", "description": "This field controls the RE2 \"program size\" which is a rough estimate of how complex a\n compiled regex is to evaluate. A regex that has a program size greater than the configured\n value will fail to compile. In this case, the configured max program size can be increased\n or the regex can be simplified. If not specified, the default is 100.\n\n This field is deprecated; regexp validation should be performed on the management server\n instead of being done by each individual client."}}, "additionalProperties": true, "type": "object", "description": "Google's RE2 regex engine."}, "regex": {"type": "string", "description": "The regex match string. The string must be supported by the configured engine."}}, "additionalProperties": true, "type": "object", "description": "The input string must match the regular expression specified here."}, "contains": {"type": "string", "description": "The input string must have the substring specified here.\n Note: empty contains match is not allowed, please use regex instead.\n\n Examples:\n\n * *abc* matches the value *xyz.abc.def*"}, "ignore_case": {"type": "boolean", "description": "If true, indicates the exact/prefix/suffix matching should be case insensitive. This has no\n effect for the safe_regex match.\n For example, the matcher *data* will match both input string *Data* and *data* if set to true."}}, "additionalProperties": true, "type": "object", "description": "[#protodoc-title: String matcher]\n\nSpecifies the way to match a string.\n [#next-free-field: 8]"}, "type": "array"}}, "additionalProperties": true, "type": "object", "description": "Specifies a list of ways to match a string.", "id": "envoy.type.matcher.v3.ListStringMatcher"}}}