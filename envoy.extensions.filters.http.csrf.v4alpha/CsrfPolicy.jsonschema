{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "properties": {
        "filter_enabled": {
            "$ref": "envoy.config.core.v4alpha.RuntimeFractionalPercent",
            "additionalProperties": true,
            "description": "Specifies the % of requests for which the CSRF filter is enabled.\n\n If :ref:`runtime_key \u003cenvoy_api_field_config.core.v4alpha.RuntimeFractionalPercent.runtime_key\u003e` is specified,\n Envoy will lookup the runtime key to get the percentage of requests to filter.\n\n .. note::\n\n   This field defaults to 100/:ref:`HUNDRED\n   \u003cenvoy_api_enum_type.v3.FractionalPercent.DenominatorType\u003e`."
        },
        "shadow_enabled": {
            "$ref": "envoy.config.core.v4alpha.RuntimeFractionalPercent",
            "additionalProperties": true,
            "description": "Specifies that CSRF policies will be evaluated and tracked, but not enforced.\n\n This is intended to be used when ``filter_enabled`` is off and will be ignored otherwise.\n\n If :ref:`runtime_key \u003cenvoy_api_field_config.core.v4alpha.RuntimeFractionalPercent.runtime_key\u003e` is specified,\n Envoy will lookup the runtime key to get the percentage of requests for which it will evaluate\n and track the request's *Origin* and *Destination* to determine if it's valid, but will not\n enforce any policies."
        },
        "additional_origins": {
            "items": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "properties": {
                    "exact": {
                        "type": "string",
                        "description": "The input string must match exactly the string specified here.\n\n Examples:\n\n * *abc* only matches the value *abc*."
                    },
                    "prefix": {
                        "type": "string",
                        "description": "The input string must have the prefix specified here.\n Note: empty prefix is not allowed, please use regex instead.\n\n Examples:\n\n * *abc* matches the value *abc.xyz*"
                    },
                    "suffix": {
                        "type": "string",
                        "description": "The input string must have the suffix specified here.\n Note: empty prefix is not allowed, please use regex instead.\n\n Examples:\n\n * *abc* matches the value *xyz.abc*"
                    },
                    "safe_regex": {
                        "properties": {
                            "google_re2": {
                                "additionalProperties": true,
                                "type": "object",
                                "description": "Google's RE2 regex engine."
                            },
                            "regex": {
                                "type": "string",
                                "description": "The regex match string. The string must be supported by the configured engine."
                            }
                        },
                        "additionalProperties": true,
                        "type": "object",
                        "description": "The input string must match the regular expression specified here."
                    },
                    "contains": {
                        "type": "string",
                        "description": "The input string must have the substring specified here.\n Note: empty contains match is not allowed, please use regex instead.\n\n Examples:\n\n * *abc* matches the value *xyz.abc.def*"
                    },
                    "ignore_case": {
                        "type": "boolean",
                        "description": "If true, indicates the exact/prefix/suffix matching should be case insensitive. This has no\n effect for the safe_regex match.\n For example, the matcher *data* will match both input string *Data* and *data* if set to true."
                    }
                },
                "additionalProperties": true,
                "type": "object",
                "description": "[#protodoc-title: String matcher]\n\nSpecifies the way to match a string.\n [#next-free-field: 8]"
            },
            "type": "array",
            "description": "Specifies additional source origins that will be allowed in addition to\n the destination origin.\n\n More information on how this can be configured via runtime can be found\n :ref:`here \u003ccsrf-configuration\u003e`."
        }
    },
    "additionalProperties": true,
    "type": "object",
    "description": "[#protodoc-title: CSRF]\n Cross-Site Request Forgery :ref:`configuration overview \u003cconfig_http_filters_csrf\u003e`.\n [#extension: envoy.filters.http.csrf]\n\nCSRF filter config.",
    "definitions": {
        "envoy.config.core.v4alpha.RuntimeFractionalPercent": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": {
                "default_value": {
                    "properties": {
                        "numerator": {
                            "type": "integer",
                            "description": "Specifies the numerator. Defaults to 0."
                        },
                        "denominator": {
                            "enum": [
                                "HUNDRED",
                                0,
                                "TEN_THOUSAND",
                                1,
                                "MILLION",
                                2
                            ],
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ],
                            "description": "Specifies the denominator. If the denominator specified is less than the numerator, the final\n fractional percentage is capped at 1 (100%)."
                        }
                    },
                    "additionalProperties": true,
                    "type": "object",
                    "description": "Default value if the runtime value's for the numerator/denominator keys are not available."
                },
                "runtime_key": {
                    "type": "string",
                    "description": "Runtime key for a YAML representation of a FractionalPercent."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "Runtime derived FractionalPercent with defaults for when the numerator or denominator is not\n specified via a runtime key.\n\n .. note::\n\n   Parsing of the runtime key's data is implemented such that it may be represented as a\n   :ref:`FractionalPercent \u003cenvoy_api_msg_type.v3.FractionalPercent\u003e` proto represented as JSON/YAML\n   and may also be represented as an integer with the assumption that the value is an integral\n   percentage out of 100. For instance, a runtime key lookup returning the value \"42\" would parse\n   as a `FractionalPercent` whose numerator is 42 and denominator is HUNDRED.",
            "id": "envoy.config.core.v4alpha.RuntimeFractionalPercent"
        }
    }
}