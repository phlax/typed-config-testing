{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "properties": {
        "allow_origin": {
            "items": {
                "type": "string"
            },
            "type": "array",
            "description": "Specifies the origins that will be allowed to do CORS requests.\n\n An origin is allowed if either allow_origin or allow_origin_regex match.\n\n .. attention::\n  This field has been deprecated in favor of `allow_origin_string_match`."
        },
        "allow_origin_regex": {
            "items": {
                "type": "string"
            },
            "type": "array",
            "description": "Specifies regex patterns that match allowed origins.\n\n An origin is allowed if either allow_origin or allow_origin_regex match.\n\n .. attention::\n   This field has been deprecated in favor of `allow_origin_string_match` as it is not safe for\n   use with untrusted input in all cases."
        },
        "allow_origin_string_match": {
            "items": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "properties": {
                    "exact": {
                        "type": "string",
                        "description": "The input string must match exactly the string specified here.\n\n Examples:\n\n * *abc* only matches the value *abc*."
                    },
                    "prefix": {
                        "type": "string",
                        "description": "The input string must have the prefix specified here.\n Note: empty prefix is not allowed, please use regex instead.\n\n Examples:\n\n * *abc* matches the value *abc.xyz*"
                    },
                    "suffix": {
                        "type": "string",
                        "description": "The input string must have the suffix specified here.\n Note: empty prefix is not allowed, please use regex instead.\n\n Examples:\n\n * *abc* matches the value *xyz.abc*"
                    },
                    "regex": {
                        "type": "string",
                        "description": "The input string must match the regular expression specified here.\n The regex grammar is defined `here\n \u003chttps://en.cppreference.com/w/cpp/regex/ecmascript\u003e`_.\n\n Examples:\n\n * The regex ``\\d{3}`` matches the value *123*\n * The regex ``\\d{3}`` does not match the value *1234*\n * The regex ``\\d{3}`` does not match the value *123.456*\n\n .. attention::\n   This field has been deprecated in favor of `safe_regex` as it is not safe for use with\n   untrusted input in all cases."
                    },
                    "safe_regex": {
                        "properties": {
                            "google_re2": {
                                "properties": {
                                    "max_program_size": {
                                        "additionalProperties": true,
                                        "type": "integer",
                                        "description": "This field controls the RE2 \"program size\" which is a rough estimate of how complex a\n compiled regex is to evaluate. A regex that has a program size greater than the configured\n value will fail to compile. In this case, the configured max program size can be increased\n or the regex can be simplified. If not specified, the default is 100.\n\n This field is deprecated; regexp validation should be performed on the management server\n instead of being done by each individual client."
                                    }
                                },
                                "additionalProperties": true,
                                "type": "object",
                                "description": "Google's RE2 regex engine."
                            },
                            "regex": {
                                "type": "string",
                                "description": "The regex match string. The string must be supported by the configured engine."
                            }
                        },
                        "additionalProperties": true,
                        "type": "object",
                        "description": "The input string must match the regular expression specified here."
                    },
                    "ignore_case": {
                        "type": "boolean",
                        "description": "If true, indicates the exact/prefix/suffix matching should be case insensitive. This has no\n effect for the safe_regex match.\n For example, the matcher *data* will match both input string *Data* and *data* if set to true."
                    }
                },
                "additionalProperties": true,
                "type": "object",
                "description": "[#protodoc-title: String matcher]\n\nSpecifies the way to match a string.\n [#next-free-field: 7]"
            },
            "type": "array",
            "description": "Specifies string patterns that match allowed origins. An origin is allowed if any of the\n string matchers match."
        },
        "allow_methods": {
            "type": "string",
            "description": "Specifies the content for the *access-control-allow-methods* header."
        },
        "allow_headers": {
            "type": "string",
            "description": "Specifies the content for the *access-control-allow-headers* header."
        },
        "expose_headers": {
            "type": "string",
            "description": "Specifies the content for the *access-control-expose-headers* header."
        },
        "max_age": {
            "type": "string",
            "description": "Specifies the content for the *access-control-max-age* header."
        },
        "allow_credentials": {
            "additionalProperties": true,
            "type": "boolean",
            "description": "Specifies whether the resource allows credentials."
        },
        "enabled": {
            "additionalProperties": true,
            "type": "boolean",
            "description": "Specifies if the CORS filter is enabled. Defaults to true. Only effective on route.\n\n .. attention::\n\n   **This field is deprecated**. Set the\n   :ref:`filter_enabled\u003cenvoy_api_field_route.CorsPolicy.filter_enabled\u003e` field instead."
        },
        "filter_enabled": {
            "$ref": "envoy.api.v2.core.RuntimeFractionalPercent",
            "additionalProperties": true,
            "description": "Specifies the % of requests for which the CORS filter is enabled.\n\n If neither ``enabled``, ``filter_enabled``, nor ``shadow_enabled`` are specified, the CORS\n filter will be enabled for 100% of the requests.\n\n If :ref:`runtime_key \u003cenvoy_api_field_core.RuntimeFractionalPercent.runtime_key\u003e` is\n specified, Envoy will lookup the runtime key to get the percentage of requests to filter."
        },
        "shadow_enabled": {
            "$ref": "envoy.api.v2.core.RuntimeFractionalPercent",
            "additionalProperties": true,
            "description": "Specifies the % of requests for which the CORS policies will be evaluated and tracked, but not\n enforced.\n\n This field is intended to be used when ``filter_enabled`` and ``enabled`` are off. One of those\n fields have to explicitly disable the filter in order for this setting to take effect.\n\n If :ref:`runtime_key \u003cenvoy_api_field_core.RuntimeFractionalPercent.runtime_key\u003e` is specified,\n Envoy will lookup the runtime key to get the percentage of requests for which it will evaluate\n and track the request's *Origin* to determine if it's valid but will not enforce any policies."
        }
    },
    "additionalProperties": true,
    "type": "object",
    "description": "[#next-free-field: 12]",
    "definitions": {
        "envoy.api.v2.core.RuntimeFractionalPercent": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": {
                "default_value": {
                    "properties": {
                        "numerator": {
                            "type": "integer",
                            "description": "Specifies the numerator. Defaults to 0."
                        },
                        "denominator": {
                            "enum": [
                                "HUNDRED",
                                0,
                                "TEN_THOUSAND",
                                1,
                                "MILLION",
                                2
                            ],
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ],
                            "description": "Specifies the denominator. If the denominator specified is less than the numerator, the final\n fractional percentage is capped at 1 (100%)."
                        }
                    },
                    "additionalProperties": true,
                    "type": "object",
                    "description": "Default value if the runtime value's for the numerator/denominator keys are not available."
                },
                "runtime_key": {
                    "type": "string",
                    "description": "Runtime key for a YAML representation of a FractionalPercent."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "Runtime derived FractionalPercent with defaults for when the numerator or denominator is not\n specified via a runtime key.\n\n .. note::\n\n   Parsing of the runtime key's data is implemented such that it may be represented as a\n   :ref:`FractionalPercent \u003cenvoy_api_msg_type.FractionalPercent\u003e` proto represented as JSON/YAML\n   and may also be represented as an integer with the assumption that the value is an integral\n   percentage out of 100. For instance, a runtime key lookup returning the value \"42\" would parse\n   as a `FractionalPercent` whose numerator is 42 and denominator is HUNDRED.",
            "id": "envoy.api.v2.core.RuntimeFractionalPercent"
        }
    }
}