{"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"initial_requests": {"additionalProperties": true, "type": "integer", "description": "Specifies the number of initial requests that should be sent upstream.\n Must be at least 1.\n Defaults to 1.\n [#not-implemented-hide:]"}, "additional_request_chance": {"properties": {"numerator": {"type": "integer", "description": "Specifies the numerator. Defaults to 0."}, "denominator": {"enum": ["HUNDRED", 0, "TEN_THOUSAND", 1, "MILLION", 2], "oneOf": [{"type": "string"}, {"type": "integer"}], "description": "Specifies the denominator. If the denominator specified is less than the numerator, the final\n fractional percentage is capped at 1 (100%)."}}, "additionalProperties": true, "type": "object", "description": "Specifies a probability that an additional upstream request should be sent\n on top of what is specified by initial_requests.\n Defaults to 0.\n [#not-implemented-hide:]"}, "hedge_on_per_try_timeout": {"type": "boolean", "description": "Indicates that a hedged request should be sent when the per-try timeout is hit.\n This means that a retry will be issued without resetting the original request, leaving multiple upstream requests in flight.\n The first request to complete successfully will be the one returned to the caller.\n\n * At any time, a successful response (i.e. not triggering any of the retry-on conditions) would be returned to the client.\n * Before per-try timeout, an error response (per retry-on conditions) would be retried immediately or returned ot the client\n   if there are no more retries left.\n * After per-try timeout, an error response would be discarded, as a retry in the form of a hedged request is already in progress.\n\n Note: For this to have effect, you must have a :ref:`RetryPolicy <envoy_api_msg_route.RetryPolicy>` that retries at least\n one error code and specifies a maximum number of retries.\n\n Defaults to false."}}, "additionalProperties": true, "type": "object", "description": "HTTP request hedging :ref:`architecture overview <arch_overview_http_routing_hedging>`."}