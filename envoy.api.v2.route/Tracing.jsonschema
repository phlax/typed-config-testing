{"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"client_sampling": {"$ref": "#/definitions/envoy.type.FractionalPercent", "additionalProperties": true, "description": "Target percentage of requests managed by this HTTP connection manager that will be force\n traced if the :ref:`x-client-trace-id <config_http_conn_man_headers_x-client-trace-id>`\n header is set. This field is a direct analog for the runtime variable\n 'tracing.client_sampling' in the :ref:`HTTP Connection Manager\n <config_http_conn_man_runtime>`.\n Default: 100%"}, "random_sampling": {"$ref": "#/definitions/envoy.type.FractionalPercent", "additionalProperties": true, "description": "Target percentage of requests managed by this HTTP connection manager that will be randomly\n selected for trace generation, if not requested by the client or not forced. This field is\n a direct analog for the runtime variable 'tracing.random_sampling' in the\n :ref:`HTTP Connection Manager <config_http_conn_man_runtime>`.\n Default: 100%"}, "overall_sampling": {"$ref": "#/definitions/envoy.type.FractionalPercent", "additionalProperties": true, "description": "Target percentage of requests managed by this HTTP connection manager that will be traced\n after all other sampling checks have been applied (client-directed, force tracing, random\n sampling). This field functions as an upper limit on the total configured sampling rate. For\n instance, setting client_sampling to 100% but overall_sampling to 1% will result in only 1%\n of client requests with the appropriate headers to be force traced. This field is a direct\n analog for the runtime variable 'tracing.global_enabled' in the\n :ref:`HTTP Connection Manager <config_http_conn_man_runtime>`.\n Default: 100%"}, "custom_tags": {"items": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"tag": {"type": "string", "description": "Used to populate the tag name."}, "literal": {"properties": {"value": {"type": "string", "description": "Static literal value to populate the tag value."}}, "additionalProperties": true, "type": "object", "description": "A literal custom tag."}, "environment": {"properties": {"name": {"type": "string", "description": "Environment variable name to obtain the value to populate the tag value."}, "default_value": {"type": "string", "description": "When the environment variable is not found,\n the tag value will be populated with this default value if specified,\n otherwise no tag will be populated."}}, "additionalProperties": true, "type": "object", "description": "An environment custom tag."}, "request_header": {"properties": {"name": {"type": "string", "description": "Header name to obtain the value to populate the tag value."}, "default_value": {"type": "string", "description": "When the header does not exist,\n the tag value will be populated with this default value if specified,\n otherwise no tag will be populated."}}, "additionalProperties": true, "type": "object", "description": "A request header custom tag."}, "metadata": {"properties": {"kind": {"properties": {"request": {"additionalProperties": true, "type": "object", "description": "Request kind of metadata."}, "route": {"additionalProperties": true, "type": "object", "description": "Route kind of metadata."}, "cluster": {"additionalProperties": true, "type": "object", "description": "Cluster kind of metadata."}, "host": {"additionalProperties": true, "type": "object", "description": "Host kind of metadata."}}, "additionalProperties": true, "type": "object", "description": "Specify what kind of metadata to obtain tag value from."}, "metadata_key": {"properties": {"key": {"type": "string", "description": "The key name of Metadata to retrieve the Struct from the metadata.\n Typically, it represents a builtin subsystem or custom extension."}, "path": {"items": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"key": {"type": "string", "description": "If specified, use the key to retrieve the value in a Struct."}}, "additionalProperties": true, "type": "object", "description": "Specifies the segment in a path to retrieve value from Metadata.\n Currently it is only supported to specify the key, i.e. field name, as one segment of a path."}, "type": "array", "description": "The path to retrieve the Value from the Struct. It can be a prefix or a full path,\n e.g. ``[prop, xyz]`` for a struct or ``[prop, foo]`` for a string in the example,\n which depends on the particular scenario.\n\n Note: Due to that only the key type segment is supported, the path can not specify a list\n unless the list is the last segment."}}, "additionalProperties": true, "type": "object", "description": "Metadata key to define the path to retrieve the tag value."}, "default_value": {"type": "string", "description": "When no valid metadata is found,\n the tag value would be populated with this default value if specified,\n otherwise no tag would be populated."}}, "additionalProperties": true, "type": "object", "description": "A custom tag to obtain tag value from the metadata."}}, "additionalProperties": true, "type": "object", "description": "[#protodoc-title: Custom Tag]\n\nDescribes custom tags for the active span.\n [#next-free-field: 6]"}, "type": "array", "description": "A list of custom tags with unique tag name to create tags for the active span.\n It will take effect after merging with the :ref:`corresponding configuration\n <envoy_api_field_config.filter.network.http_connection_manager.v2.HttpConnectionManager.Tracing.custom_tags>`\n configured in the HTTP connection manager. If two tags with the same name are configured\n each in the HTTP connection manager and the route level, the one configured here takes\n priority."}}, "additionalProperties": true, "type": "object", "definitions": {"envoy.type.FractionalPercent": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"numerator": {"type": "integer", "description": "Specifies the numerator. Defaults to 0."}, "denominator": {"enum": ["HUNDRED", 0, "TEN_THOUSAND", 1, "MILLION", 2], "oneOf": [{"type": "string"}, {"type": "integer"}], "description": "Specifies the denominator. If the denominator specified is less than the numerator, the final\n fractional percentage is capped at 1 (100%)."}}, "additionalProperties": true, "type": "object", "description": "A fractional percentage is used in cases in which for performance reasons performing floating\n point to integer conversions during randomness calculations is undesirable. The message includes\n both a numerator and denominator that together determine the final fractional value.\n\n * **Example**: 1/100 = 1%.\n * **Example**: 3/10000 = 0.03%.", "id": "envoy.type.FractionalPercent"}}}