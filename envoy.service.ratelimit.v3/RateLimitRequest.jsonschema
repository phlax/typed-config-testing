{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "properties": {
        "domain": {
            "type": "string",
            "description": "All rate limit requests must specify a domain. This enables the configuration to be per\n application without fear of overlap. E.g., \"envoy\"."
        },
        "descriptors": {
            "items": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "properties": {
                    "entries": {
                        "items": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "properties": {
                                "key": {
                                    "type": "string",
                                    "description": "Descriptor key."
                                },
                                "value": {
                                    "type": "string",
                                    "description": "Descriptor value."
                                }
                            },
                            "additionalProperties": true,
                            "type": "object"
                        },
                        "type": "array",
                        "description": "Descriptor entries."
                    },
                    "limit": {
                        "properties": {
                            "requests_per_unit": {
                                "type": "integer",
                                "description": "The number of requests per unit of time."
                            },
                            "unit": {
                                "enum": [
                                    "UNKNOWN",
                                    0,
                                    "SECOND",
                                    1,
                                    "MINUTE",
                                    2,
                                    "HOUR",
                                    3,
                                    "DAY",
                                    4
                                ],
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "integer"
                                    }
                                ],
                                "description": "The unit of time."
                            }
                        },
                        "additionalProperties": true,
                        "type": "object",
                        "description": "Optional rate limit override to supply to the ratelimit service."
                    }
                },
                "additionalProperties": true,
                "type": "object",
                "description": "[#protodoc-title: Common rate limit components]\n\nA RateLimitDescriptor is a list of hierarchical entries that are used by the service to\n determine the final rate limit key and overall allowed limit. Here are some examples of how\n they might be used for the domain \"envoy\".\n\n .. code-block:: cpp\n\n   [\"authenticated\": \"false\"], [\"remote_address\": \"10.0.0.1\"]\n\n What it does: Limits all unauthenticated traffic for the IP address 10.0.0.1. The\n configuration supplies a default limit for the *remote_address* key. If there is a desire to\n raise the limit for 10.0.0.1 or block it entirely it can be specified directly in the\n configuration.\n\n .. code-block:: cpp\n\n   [\"authenticated\": \"false\"], [\"path\": \"/foo/bar\"]\n\n What it does: Limits all unauthenticated traffic globally for a specific path (or prefix if\n configured that way in the service).\n\n .. code-block:: cpp\n\n   [\"authenticated\": \"false\"], [\"path\": \"/foo/bar\"], [\"remote_address\": \"10.0.0.1\"]\n\n What it does: Limits unauthenticated traffic to a specific path for a specific IP address.\n Like (1) we can raise/block specific IP addresses if we want with an override configuration.\n\n .. code-block:: cpp\n\n   [\"authenticated\": \"true\"], [\"client_id\": \"foo\"]\n\n What it does: Limits all traffic for an authenticated client \"foo\"\n\n .. code-block:: cpp\n\n   [\"authenticated\": \"true\"], [\"client_id\": \"foo\"], [\"path\": \"/foo/bar\"]\n\n What it does: Limits traffic to a specific path for an authenticated client \"foo\"\n\n The idea behind the API is that (1)/(2)/(3) and (4)/(5) can be sent in 1 request if desired.\n This enables building complex application scenarios with a generic backend.\n\n Optionally the descriptor can contain a limit override under a \"limit\" key, that specifies\n the number of requests per unit to use instead of the number configured in the\n rate limiting service."
            },
            "type": "array",
            "description": "All rate limit requests must specify at least one RateLimitDescriptor. Each descriptor is\n processed by the service (see below). If any of the descriptors are over limit, the entire\n request is considered to be over limit."
        },
        "hits_addend": {
            "type": "integer",
            "description": "Rate limit requests can optionally specify the number of hits a request adds to the matched\n limit. If the value is not set in the message, a request increases the matched limit by 1."
        }
    },
    "additionalProperties": true,
    "type": "object",
    "description": "Main message for a rate limit request. The rate limit service is designed to be fully generic\n in the sense that it can operate on arbitrary hierarchical key/value pairs. The loaded\n configuration will parse the request and find the most specific limit to apply. In addition,\n a RateLimitRequest can contain multiple \"descriptors\" to limit on. When multiple descriptors\n are provided, the server will limit on *ALL* of them and return an OVER_LIMIT response if any\n of them are over limit. This enables more complex application level rate limiting scenarios\n if desired."
}