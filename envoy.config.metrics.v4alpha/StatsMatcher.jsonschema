{"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"reject_all": {"type": "boolean", "description": "If `reject_all` is true, then all stats are disabled. If `reject_all` is false, then all\n stats are enabled."}, "exclusion_list": {"$ref": "#/definitions/envoy.type.matcher.v4alpha.ListStringMatcher", "additionalProperties": true, "description": "Exclusive match. All stats are enabled except for those matching one of the supplied\n StringMatcher protos."}, "inclusion_list": {"$ref": "#/definitions/envoy.type.matcher.v4alpha.ListStringMatcher", "additionalProperties": true, "description": "Inclusive match. No stats are enabled except for those matching one of the supplied\n StringMatcher protos."}}, "additionalProperties": true, "type": "object", "description": "Configuration for disabling stat instantiation.\n\nThe instantiation of stats is unrestricted by default. If the goal is to configure Envoy to\n instantiate all stats, there is no need to construct a StatsMatcher.\n\n However, StatsMatcher can be used to limit the creation of families of stats in order to\n conserve memory. Stats can either be disabled entirely, or they can be\n limited by either an exclusion or an inclusion list of :ref:`StringMatcher\n <envoy_api_msg_type.matcher.v4alpha.StringMatcher>` protos:\n\n * If `reject_all` is set to `true`, no stats will be instantiated. If `reject_all` is set to\n   `false`, all stats will be instantiated.\n\n * If an exclusion list is supplied, any stat name matching *any* of the StringMatchers in the\n   list will not instantiate.\n\n * If an inclusion list is supplied, no stats will instantiate, except those matching *any* of\n   the StringMatchers in the list.\n\n\n A StringMatcher can be used to match against an exact string, a suffix / prefix, or a regex.\n **NB:** For performance reasons, it is highly recommended to use a prefix- or suffix-based\n matcher rather than a regex-based matcher.\n\n Example 1. Excluding all stats.\n\n .. code-block:: json\n\n   {\n     \"statsMatcher\": {\n       \"rejectAll\": \"true\"\n     }\n   }\n\n Example 2. Excluding all cluster-specific stats, but not cluster-manager stats:\n\n .. code-block:: json\n\n   {\n     \"statsMatcher\": {\n       \"exclusionList\": {\n         \"patterns\": [\n           {\n             \"prefix\": \"cluster.\"\n           }\n         ]\n       }\n     }\n   }\n\n Example 3. Including only manager-related stats:\n\n .. code-block:: json\n\n   {\n     \"statsMatcher\": {\n       \"inclusionList\": {\n         \"patterns\": [\n           {\n             \"prefix\": \"cluster_manager.\"\n           },\n           {\n             \"prefix\": \"listener_manager.\"\n           }\n         ]\n       }\n     }\n   }", "definitions": {"envoy.type.matcher.v4alpha.ListStringMatcher": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"patterns": {"items": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"exact": {"type": "string", "description": "The input string must match exactly the string specified here.\n\n Examples:\n\n * *abc* only matches the value *abc*."}, "prefix": {"type": "string", "description": "The input string must have the prefix specified here.\n Note: empty prefix is not allowed, please use regex instead.\n\n Examples:\n\n * *abc* matches the value *abc.xyz*"}, "suffix": {"type": "string", "description": "The input string must have the suffix specified here.\n Note: empty prefix is not allowed, please use regex instead.\n\n Examples:\n\n * *abc* matches the value *xyz.abc*"}, "safe_regex": {"properties": {"google_re2": {"additionalProperties": true, "type": "object", "description": "Google's RE2 regex engine."}, "regex": {"type": "string", "description": "The regex match string. The string must be supported by the configured engine."}}, "additionalProperties": true, "type": "object", "description": "The input string must match the regular expression specified here."}, "contains": {"type": "string", "description": "The input string must have the substring specified here.\n Note: empty contains match is not allowed, please use regex instead.\n\n Examples:\n\n * *abc* matches the value *xyz.abc.def*"}, "ignore_case": {"type": "boolean", "description": "If true, indicates the exact/prefix/suffix matching should be case insensitive. This has no\n effect for the safe_regex match.\n For example, the matcher *data* will match both input string *Data* and *data* if set to true."}}, "additionalProperties": true, "type": "object", "description": "[#protodoc-title: String matcher]\n\nSpecifies the way to match a string.\n [#next-free-field: 8]"}, "type": "array"}}, "additionalProperties": true, "type": "object", "description": "Specifies a list of ways to match a string.", "id": "envoy.type.matcher.v4alpha.ListStringMatcher"}}}