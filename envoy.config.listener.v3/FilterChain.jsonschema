{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "properties": {
        "filter_chain_match": {
            "properties": {
                "destination_port": {
                    "additionalProperties": true,
                    "type": "integer",
                    "description": "Optional destination port to consider when use_original_dst is set on the\n listener in determining a filter chain match."
                },
                "prefix_ranges": {
                    "items": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "$ref": "envoy.config.core.v3.CidrRange"
                    },
                    "type": "array",
                    "description": "If non-empty, an IP address and prefix length to match addresses when the\n listener is bound to 0.0.0.0/:: or when use_original_dst is specified."
                },
                "address_suffix": {
                    "type": "string",
                    "description": "If non-empty, an IP address and suffix length to match addresses when the\n listener is bound to 0.0.0.0/:: or when use_original_dst is specified.\n [#not-implemented-hide:]"
                },
                "suffix_len": {
                    "additionalProperties": true,
                    "type": "integer",
                    "description": "[#not-implemented-hide:]"
                },
                "source_type": {
                    "enum": [
                        "ANY",
                        0,
                        "SAME_IP_OR_LOOPBACK",
                        1,
                        "EXTERNAL",
                        2
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "description": "Specifies the connection source IP match type. Can be any, local or external network."
                },
                "source_prefix_ranges": {
                    "items": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "$ref": "envoy.config.core.v3.CidrRange"
                    },
                    "type": "array",
                    "description": "The criteria is satisfied if the source IP address of the downstream\n connection is contained in at least one of the specified subnets. If the\n parameter is not specified or the list is empty, the source IP address is\n ignored."
                },
                "source_ports": {
                    "items": {
                        "type": "integer"
                    },
                    "type": "array",
                    "description": "The criteria is satisfied if the source port of the downstream connection\n is contained in at least one of the specified ports. If the parameter is\n not specified, the source port is ignored."
                },
                "server_names": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "If non-empty, a list of server names (e.g. SNI for TLS protocol) to consider when determining\n a filter chain match. Those values will be compared against the server names of a new\n connection, when detected by one of the listener filters.\n\n The server name will be matched against all wildcard domains, i.e. ``www.example.com``\n will be first matched against ``www.example.com``, then ``*.example.com``, then ``*.com``.\n\n Note that partial wildcards are not supported, and values like ``*w.example.com`` are invalid.\n\n .. attention::\n\n   See the :ref:`FAQ entry \u003cfaq_how_to_setup_sni\u003e` on how to configure SNI for more\n   information."
                },
                "transport_protocol": {
                    "type": "string",
                    "description": "If non-empty, a transport protocol to consider when determining a filter chain match.\n This value will be compared against the transport protocol of a new connection, when\n it's detected by one of the listener filters.\n\n Suggested values include:\n\n * ``raw_buffer`` - default, used when no transport protocol is detected,\n * ``tls`` - set by :ref:`envoy.filters.listener.tls_inspector \u003cconfig_listener_filters_tls_inspector\u003e`\n   when TLS protocol is detected."
                },
                "application_protocols": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "If non-empty, a list of application protocols (e.g. ALPN for TLS protocol) to consider when\n determining a filter chain match. Those values will be compared against the application\n protocols of a new connection, when detected by one of the listener filters.\n\n Suggested values include:\n\n * ``http/1.1`` - set by :ref:`envoy.filters.listener.tls_inspector\n   \u003cconfig_listener_filters_tls_inspector\u003e`,\n * ``h2`` - set by :ref:`envoy.filters.listener.tls_inspector \u003cconfig_listener_filters_tls_inspector\u003e`\n\n .. attention::\n\n   Currently, only :ref:`TLS Inspector \u003cconfig_listener_filters_tls_inspector\u003e` provides\n   application protocol detection based on the requested\n   `ALPN \u003chttps://en.wikipedia.org/wiki/Application-Layer_Protocol_Negotiation\u003e`_ values.\n\n   However, the use of ALPN is pretty much limited to the HTTP/2 traffic on the Internet,\n   and matching on values other than ``h2`` is going to lead to a lot of false negatives,\n   unless all connecting clients are known to use ALPN."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "The criteria to use when matching a connection to this filter chain."
        },
        "filters": {
            "items": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the filter to instantiate. The name must match a\n :ref:`supported filter \u003cconfig_network_filters\u003e`."
                    },
                    "typed_config": {
                        "properties": {
                            "type_url": {
                                "type": "string",
                                "description": "A URL/resource name that uniquely identifies the type of the serialized\n protocol buffer message. This string must contain at least\n one \"/\" character. The last segment of the URL's path must represent\n the fully qualified name of the type (as in\n `path/google.protobuf.Duration`). The name should be in a canonical form\n (e.g., leading \".\" is not accepted).\n\n In practice, teams usually precompile into the binary all types that they\n expect it to use in the context of Any. However, for URLs which use the\n scheme `http`, `https`, or no scheme, one can optionally set up a type\n server that maps type URLs to message definitions as follows:\n\n * If no scheme is provided, `https` is assumed.\n * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n   value in binary format, or produce an error.\n * Applications are allowed to cache lookup results based on the\n   URL, or have them precompiled into a binary to avoid any\n   lookup. Therefore, binary compatibility needs to be preserved\n   on changes to types. (Use versioned type names to manage\n   breaking changes.)\n\n Note: this functionality is not currently available in the official\n protobuf release, and it is not used for type URLs beginning with\n type.googleapis.com.\n\n Schemes other than `http`, `https` (or the empty scheme) might be\n used with implementation specific semantics."
                            },
                            "value": {
                                "type": "string",
                                "description": "Must be a valid serialized protocol buffer of the above specified type."
                            }
                        },
                        "additionalProperties": true,
                        "type": "object",
                        "description": "Filter specific configuration which depends on the filter being\n instantiated. See the supported filters for further documentation."
                    },
                    "config_discovery": {
                        "properties": {
                            "config_source": {
                                "properties": {
                                    "authorities": {
                                        "items": {
                                            "$schema": "http://json-schema.org/draft-04/schema#",
                                            "properties": {
                                                "name": {
                                                    "type": "string"
                                                }
                                            },
                                            "additionalProperties": true,
                                            "type": "object",
                                            "description": "xDS authority information."
                                        },
                                        "type": "array",
                                        "description": "Authorities that this config source may be used for. An authority specified in a xdstp:// URL\n is resolved to a *ConfigSource* prior to configuration fetch. This field provides the\n association between authority name and configuration source.\n [#not-implemented-hide:]"
                                    },
                                    "path": {
                                        "type": "string",
                                        "description": "Path on the filesystem to source and watch for configuration updates.\n When sourcing configuration for :ref:`secret \u003cenvoy_api_msg_extensions.transport_sockets.tls.v3.Secret\u003e`,\n the certificate and key files are also watched for updates.\n\n .. note::\n\n  The path to the source must exist at config load time.\n\n .. note::\n\n   Envoy will only watch the file path for *moves.* This is because in general only moves\n   are atomic. The same method of swapping files as is demonstrated in the\n   :ref:`runtime documentation \u003cconfig_runtime_symbolic_link_swap\u003e` can be used here also."
                                    },
                                    "api_config_source": {
                                        "properties": {
                                            "api_type": {
                                                "enum": [
                                                    "DEPRECATED_AND_UNAVAILABLE_DO_NOT_USE",
                                                    0,
                                                    "REST",
                                                    1,
                                                    "GRPC",
                                                    2,
                                                    "DELTA_GRPC",
                                                    3,
                                                    "AGGREGATED_GRPC",
                                                    5,
                                                    "AGGREGATED_DELTA_GRPC",
                                                    6
                                                ],
                                                "oneOf": [
                                                    {
                                                        "type": "string"
                                                    },
                                                    {
                                                        "type": "integer"
                                                    }
                                                ],
                                                "description": "API type (gRPC, REST, delta gRPC)"
                                            },
                                            "transport_api_version": {
                                                "enum": [
                                                    "AUTO",
                                                    0,
                                                    "V2",
                                                    1,
                                                    "V3",
                                                    2
                                                ],
                                                "oneOf": [
                                                    {
                                                        "type": "string"
                                                    },
                                                    {
                                                        "type": "integer"
                                                    }
                                                ],
                                                "description": "API version for xDS transport protocol. This describes the xDS gRPC/REST\n endpoint and version of [Delta]DiscoveryRequest/Response used on the wire."
                                            },
                                            "cluster_names": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array",
                                                "description": "Cluster names should be used only with REST. If \u003e 1\n cluster is defined, clusters will be cycled through if any kind of failure\n occurs.\n\n .. note::\n\n  The cluster with name ``cluster_name`` must be statically defined and its\n  type must not be ``EDS``."
                                            },
                                            "grpc_services": {
                                                "items": {
                                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                                    "properties": {
                                                        "envoy_grpc": {
                                                            "properties": {
                                                                "cluster_name": {
                                                                    "type": "string",
                                                                    "description": "The name of the upstream gRPC cluster. SSL credentials will be supplied\n in the :ref:`Cluster \u003cenvoy_api_msg_config.cluster.v3.Cluster\u003e` :ref:`transport_socket\n \u003cenvoy_api_field_config.cluster.v3.Cluster.transport_socket\u003e`."
                                                                },
                                                                "authority": {
                                                                    "type": "string",
                                                                    "description": "The `:authority` header in the grpc request. If this field is not set, the authority header value will be `cluster_name`.\n Note that this authority does not override the SNI. The SNI is provided by the transport socket of the cluster."
                                                                }
                                                            },
                                                            "additionalProperties": true,
                                                            "type": "object",
                                                            "description": "Envoy's in-built gRPC client.\n See the :ref:`gRPC services overview \u003carch_overview_grpc_services\u003e`\n documentation for discussion on gRPC client selection."
                                                        },
                                                        "google_grpc": {
                                                            "properties": {
                                                                "target_uri": {
                                                                    "type": "string",
                                                                    "description": "The target URI when using the `Google C++ gRPC client\n \u003chttps://github.com/grpc/grpc\u003e`_. SSL credentials will be supplied in\n :ref:`channel_credentials \u003cenvoy_api_field_config.core.v3.GrpcService.GoogleGrpc.channel_credentials\u003e`."
                                                                },
                                                                "channel_credentials": {
                                                                    "properties": {
                                                                        "ssl_credentials": {
                                                                            "properties": {
                                                                                "root_certs": {
                                                                                    "$ref": "envoy.config.core.v3.DataSource",
                                                                                    "additionalProperties": true,
                                                                                    "description": "PEM encoded server root certificates."
                                                                                },
                                                                                "private_key": {
                                                                                    "$ref": "envoy.config.core.v3.DataSource",
                                                                                    "additionalProperties": true,
                                                                                    "description": "PEM encoded client private key."
                                                                                },
                                                                                "cert_chain": {
                                                                                    "$ref": "envoy.config.core.v3.DataSource",
                                                                                    "additionalProperties": true,
                                                                                    "description": "PEM encoded client certificate chain."
                                                                                }
                                                                            },
                                                                            "additionalProperties": true,
                                                                            "type": "object"
                                                                        },
                                                                        "google_default": {
                                                                            "additionalProperties": true,
                                                                            "type": "object",
                                                                            "description": "https://grpc.io/grpc/cpp/namespacegrpc.html#a6beb3ac70ff94bd2ebbd89b8f21d1f61"
                                                                        },
                                                                        "local_credentials": {
                                                                            "additionalProperties": true,
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "additionalProperties": true,
                                                                    "type": "object"
                                                                },
                                                                "call_credentials": {
                                                                    "items": {
                                                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                                                        "properties": {
                                                                            "access_token": {
                                                                                "type": "string",
                                                                                "description": "Access token credentials.\n https://grpc.io/grpc/cpp/namespacegrpc.html#ad3a80da696ffdaea943f0f858d7a360d."
                                                                            },
                                                                            "google_compute_engine": {
                                                                                "additionalProperties": true,
                                                                                "type": "object",
                                                                                "description": "Google Compute Engine credentials.\n https://grpc.io/grpc/cpp/namespacegrpc.html#a6beb3ac70ff94bd2ebbd89b8f21d1f61"
                                                                            },
                                                                            "google_refresh_token": {
                                                                                "type": "string",
                                                                                "description": "Google refresh token credentials.\n https://grpc.io/grpc/cpp/namespacegrpc.html#a96901c997b91bc6513b08491e0dca37c."
                                                                            },
                                                                            "service_account_jwt_access": {
                                                                                "properties": {
                                                                                    "json_key": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "token_lifetime_seconds": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "additionalProperties": true,
                                                                                "type": "object",
                                                                                "description": "Service Account JWT Access credentials.\n https://grpc.io/grpc/cpp/namespacegrpc.html#a92a9f959d6102461f66ee973d8e9d3aa."
                                                                            },
                                                                            "google_iam": {
                                                                                "properties": {
                                                                                    "authorization_token": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "authority_selector": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "additionalProperties": true,
                                                                                "type": "object",
                                                                                "description": "Google IAM credentials.\n https://grpc.io/grpc/cpp/namespacegrpc.html#a9fc1fc101b41e680d47028166e76f9d0."
                                                                            },
                                                                            "from_plugin": {
                                                                                "properties": {
                                                                                    "name": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "typed_config": {
                                                                                        "properties": {
                                                                                            "type_url": {
                                                                                                "type": "string",
                                                                                                "description": "A URL/resource name that uniquely identifies the type of the serialized\n protocol buffer message. This string must contain at least\n one \"/\" character. The last segment of the URL's path must represent\n the fully qualified name of the type (as in\n `path/google.protobuf.Duration`). The name should be in a canonical form\n (e.g., leading \".\" is not accepted).\n\n In practice, teams usually precompile into the binary all types that they\n expect it to use in the context of Any. However, for URLs which use the\n scheme `http`, `https`, or no scheme, one can optionally set up a type\n server that maps type URLs to message definitions as follows:\n\n * If no scheme is provided, `https` is assumed.\n * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n   value in binary format, or produce an error.\n * Applications are allowed to cache lookup results based on the\n   URL, or have them precompiled into a binary to avoid any\n   lookup. Therefore, binary compatibility needs to be preserved\n   on changes to types. (Use versioned type names to manage\n   breaking changes.)\n\n Note: this functionality is not currently available in the official\n protobuf release, and it is not used for type URLs beginning with\n type.googleapis.com.\n\n Schemes other than `http`, `https` (or the empty scheme) might be\n used with implementation specific semantics."
                                                                                            },
                                                                                            "value": {
                                                                                                "type": "string",
                                                                                                "description": "Must be a valid serialized protocol buffer of the above specified type."
                                                                                            }
                                                                                        },
                                                                                        "additionalProperties": true,
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "additionalProperties": true,
                                                                                "type": "object",
                                                                                "description": "Custom authenticator credentials.\n https://grpc.io/grpc/cpp/namespacegrpc.html#a823c6a4b19ffc71fb33e90154ee2ad07.\n https://grpc.io/docs/guides/auth.html#extending-grpc-to-support-other-authentication-mechanisms."
                                                                            },
                                                                            "sts_service": {
                                                                                "properties": {
                                                                                    "token_exchange_service_uri": {
                                                                                        "type": "string",
                                                                                        "description": "URI of the token exchange service that handles token exchange requests.\n [#comment:TODO(asraa): Add URI validation when implemented. Tracked by\n https://github.com/envoyproxy/protoc-gen-validate/issues/303]"
                                                                                    },
                                                                                    "resource": {
                                                                                        "type": "string",
                                                                                        "description": "Location of the target service or resource where the client\n intends to use the requested security token."
                                                                                    },
                                                                                    "audience": {
                                                                                        "type": "string",
                                                                                        "description": "Logical name of the target service where the client intends to\n use the requested security token."
                                                                                    },
                                                                                    "scope": {
                                                                                        "type": "string",
                                                                                        "description": "The desired scope of the requested security token in the\n context of the service or resource where the token will be used."
                                                                                    },
                                                                                    "requested_token_type": {
                                                                                        "type": "string",
                                                                                        "description": "Type of the requested security token."
                                                                                    },
                                                                                    "subject_token_path": {
                                                                                        "type": "string",
                                                                                        "description": "The path of subject token, a security token that represents the\n identity of the party on behalf of whom the request is being made."
                                                                                    },
                                                                                    "subject_token_type": {
                                                                                        "type": "string",
                                                                                        "description": "Type of the subject token."
                                                                                    },
                                                                                    "actor_token_path": {
                                                                                        "type": "string",
                                                                                        "description": "The path of actor token, a security token that represents the identity\n of the acting party. The acting party is authorized to use the\n requested security token and act on behalf of the subject."
                                                                                    },
                                                                                    "actor_token_type": {
                                                                                        "type": "string",
                                                                                        "description": "Type of the actor token."
                                                                                    }
                                                                                },
                                                                                "additionalProperties": true,
                                                                                "type": "object",
                                                                                "description": "Custom security token service which implements OAuth 2.0 token exchange.\n https://tools.ietf.org/html/draft-ietf-oauth-token-exchange-16\n See https://github.com/grpc/grpc/pull/19587."
                                                                            }
                                                                        },
                                                                        "additionalProperties": true,
                                                                        "type": "object",
                                                                        "description": "[#next-free-field: 8]"
                                                                    },
                                                                    "type": "array",
                                                                    "description": "A set of call credentials that can be composed with `channel credentials\n \u003chttps://grpc.io/docs/guides/auth.html#credential-types\u003e`_."
                                                                },
                                                                "stat_prefix": {
                                                                    "type": "string",
                                                                    "description": "The human readable prefix to use when emitting statistics for the gRPC\n service.\n\n .. csv-table::\n    :header: Name, Type, Description\n    :widths: 1, 1, 2\n\n    streams_total, Counter, Total number of streams opened\n    streams_closed_\u003cgRPC status code\u003e, Counter, Total streams closed with \u003cgRPC status code\u003e"
                                                                },
                                                                "credentials_factory_name": {
                                                                    "type": "string",
                                                                    "description": "The name of the Google gRPC credentials factory to use. This must have been registered with\n Envoy. If this is empty, a default credentials factory will be used that sets up channel\n credentials based on other configuration parameters."
                                                                },
                                                                "config": {
                                                                    "properties": {
                                                                        "fields": {
                                                                            "additionalProperties": {
                                                                                "additionalProperties": true,
                                                                                "type": "object"
                                                                            },
                                                                            "type": "object",
                                                                            "description": "Unordered map of dynamically typed values."
                                                                        }
                                                                    },
                                                                    "additionalProperties": true,
                                                                    "type": "object",
                                                                    "description": "Additional configuration for site-specific customizations of the Google\n gRPC library."
                                                                },
                                                                "per_stream_buffer_limit_bytes": {
                                                                    "additionalProperties": true,
                                                                    "type": "integer",
                                                                    "description": "How many bytes each stream can buffer internally.\n If not set an implementation defined default is applied (1MiB)."
                                                                },
                                                                "channel_args": {
                                                                    "properties": {
                                                                        "args": {
                                                                            "additionalProperties": {
                                                                                "properties": {
                                                                                    "string_value": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "int_value": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "additionalProperties": true,
                                                                                "type": "object"
                                                                            },
                                                                            "type": "object",
                                                                            "description": "See grpc_types.h GRPC_ARG #defines for keys that work here."
                                                                        }
                                                                    },
                                                                    "additionalProperties": true,
                                                                    "type": "object",
                                                                    "description": "Custom channels args."
                                                                }
                                                            },
                                                            "additionalProperties": true,
                                                            "type": "object",
                                                            "description": "`Google C++ gRPC client \u003chttps://github.com/grpc/grpc\u003e`_\n See the :ref:`gRPC services overview \u003carch_overview_grpc_services\u003e`\n documentation for discussion on gRPC client selection."
                                                        },
                                                        "timeout": {
                                                            "properties": {
                                                                "seconds": {
                                                                    "type": "string",
                                                                    "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                                                                },
                                                                "nanos": {
                                                                    "type": "integer",
                                                                    "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."
                                                                }
                                                            },
                                                            "additionalProperties": true,
                                                            "type": "object",
                                                            "description": "The timeout for the gRPC request. This is the timeout for a specific\n request."
                                                        },
                                                        "initial_metadata": {
                                                            "items": {
                                                                "$schema": "http://json-schema.org/draft-04/schema#",
                                                                "properties": {
                                                                    "key": {
                                                                        "type": "string",
                                                                        "description": "Header name."
                                                                    },
                                                                    "value": {
                                                                        "type": "string",
                                                                        "description": "Header value.\n\n The same :ref:`format specifier \u003cconfig_access_log_format\u003e` as used for\n :ref:`HTTP access logging \u003cconfig_access_log\u003e` applies here, however\n unknown header values are replaced with the empty string instead of `-`."
                                                                    }
                                                                },
                                                                "additionalProperties": true,
                                                                "type": "object",
                                                                "description": "Header name/value pair."
                                                            },
                                                            "type": "array",
                                                            "description": "Additional metadata to include in streams initiated to the GrpcService. This can be used for\n scenarios in which additional ad hoc authorization headers (e.g. ``x-foo-bar: baz-key``) are to\n be injected. For more information, including details on header value syntax, see the\n documentation on :ref:`custom request headers\n \u003cconfig_http_conn_man_headers_custom_request_headers\u003e`."
                                                        }
                                                    },
                                                    "additionalProperties": true,
                                                    "type": "object",
                                                    "description": "[#protodoc-title: gRPC services]\n\ngRPC service configuration. This is used by :ref:`ApiConfigSource\n \u003cenvoy_api_msg_config.core.v3.ApiConfigSource\u003e` and filter configurations.\n [#next-free-field: 6]"
                                                },
                                                "type": "array",
                                                "description": "Multiple gRPC services be provided for GRPC. If \u003e 1 cluster is defined,\n services will be cycled through if any kind of failure occurs."
                                            },
                                            "refresh_delay": {
                                                "properties": {
                                                    "seconds": {
                                                        "type": "string",
                                                        "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                                                    },
                                                    "nanos": {
                                                        "type": "integer",
                                                        "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."
                                                    }
                                                },
                                                "additionalProperties": true,
                                                "type": "object",
                                                "description": "For REST APIs, the delay between successive polls."
                                            },
                                            "request_timeout": {
                                                "properties": {
                                                    "seconds": {
                                                        "type": "string",
                                                        "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                                                    },
                                                    "nanos": {
                                                        "type": "integer",
                                                        "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."
                                                    }
                                                },
                                                "additionalProperties": true,
                                                "type": "object",
                                                "description": "For REST APIs, the request timeout. If not set, a default value of 1s will be used."
                                            },
                                            "rate_limit_settings": {
                                                "properties": {
                                                    "max_tokens": {
                                                        "additionalProperties": true,
                                                        "type": "integer",
                                                        "description": "Maximum number of tokens to be used for rate limiting discovery request calls. If not set, a\n default value of 100 will be used."
                                                    },
                                                    "fill_rate": {
                                                        "additionalProperties": true,
                                                        "type": "number",
                                                        "description": "Rate at which tokens will be filled per second. If not set, a default fill rate of 10 tokens\n per second will be used."
                                                    }
                                                },
                                                "additionalProperties": true,
                                                "type": "object",
                                                "description": "For GRPC APIs, the rate limit settings. If present, discovery requests made by Envoy will be\n rate limited."
                                            },
                                            "set_node_on_first_message_only": {
                                                "type": "boolean",
                                                "description": "Skip the node identifier in subsequent discovery requests for streaming gRPC config types."
                                            }
                                        },
                                        "additionalProperties": true,
                                        "type": "object",
                                        "description": "API configuration source."
                                    },
                                    "ads": {
                                        "additionalProperties": true,
                                        "type": "object",
                                        "description": "When set, ADS will be used to fetch resources. The ADS API configuration\n source in the bootstrap configuration is used."
                                    },
                                    "self": {
                                        "properties": {
                                            "transport_api_version": {
                                                "enum": [
                                                    "AUTO",
                                                    0,
                                                    "V2",
                                                    1,
                                                    "V3",
                                                    2
                                                ],
                                                "oneOf": [
                                                    {
                                                        "type": "string"
                                                    },
                                                    {
                                                        "type": "integer"
                                                    }
                                                ],
                                                "description": "API version for xDS transport protocol. This describes the xDS gRPC/REST\n endpoint and version of [Delta]DiscoveryRequest/Response used on the wire."
                                            }
                                        },
                                        "additionalProperties": true,
                                        "type": "object",
                                        "description": "[#not-implemented-hide:]\n When set, the client will access the resources from the same server it got the\n ConfigSource from, although not necessarily from the same stream. This is similar to the\n :ref:`ads\u003cenvoy_api_field.ConfigSource.ads\u003e` field, except that the client may use a\n different stream to the same server. As a result, this field can be used for things\n like LRS that cannot be sent on an ADS stream. It can also be used to link from (e.g.)\n LDS to RDS on the same server without requiring the management server to know its name\n or required credentials.\n [#next-major-version: In xDS v3, consider replacing the ads field with this one, since\n this field can implicitly mean to use the same stream in the case where the ConfigSource\n is provided via ADS and the specified data can also be obtained via ADS.]"
                                    },
                                    "initial_fetch_timeout": {
                                        "properties": {
                                            "seconds": {
                                                "type": "string",
                                                "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                                            },
                                            "nanos": {
                                                "type": "integer",
                                                "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."
                                            }
                                        },
                                        "additionalProperties": true,
                                        "type": "object",
                                        "description": "When this timeout is specified, Envoy will wait no longer than the specified time for first\n config response on this xDS subscription during the :ref:`initialization process\n \u003carch_overview_initialization\u003e`. After reaching the timeout, Envoy will move to the next\n initialization phase, even if the first config is not delivered yet. The timer is activated\n when the xDS API subscription starts, and is disarmed on first config update or on error. 0\n means no timeout - Envoy will wait indefinitely for the first xDS config (unless another\n timeout applies). The default is 15s."
                                    },
                                    "resource_api_version": {
                                        "enum": [
                                            "AUTO",
                                            0,
                                            "V2",
                                            1,
                                            "V3",
                                            2
                                        ],
                                        "oneOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "integer"
                                            }
                                        ],
                                        "description": "API version for xDS resources. This implies the type URLs that the client\n will request for resources and the resource type that the client will in\n turn expect to be delivered."
                                    }
                                },
                                "additionalProperties": true,
                                "type": "object"
                            },
                            "default_config": {
                                "properties": {
                                    "type_url": {
                                        "type": "string",
                                        "description": "A URL/resource name that uniquely identifies the type of the serialized\n protocol buffer message. This string must contain at least\n one \"/\" character. The last segment of the URL's path must represent\n the fully qualified name of the type (as in\n `path/google.protobuf.Duration`). The name should be in a canonical form\n (e.g., leading \".\" is not accepted).\n\n In practice, teams usually precompile into the binary all types that they\n expect it to use in the context of Any. However, for URLs which use the\n scheme `http`, `https`, or no scheme, one can optionally set up a type\n server that maps type URLs to message definitions as follows:\n\n * If no scheme is provided, `https` is assumed.\n * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n   value in binary format, or produce an error.\n * Applications are allowed to cache lookup results based on the\n   URL, or have them precompiled into a binary to avoid any\n   lookup. Therefore, binary compatibility needs to be preserved\n   on changes to types. (Use versioned type names to manage\n   breaking changes.)\n\n Note: this functionality is not currently available in the official\n protobuf release, and it is not used for type URLs beginning with\n type.googleapis.com.\n\n Schemes other than `http`, `https` (or the empty scheme) might be\n used with implementation specific semantics."
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "Must be a valid serialized protocol buffer of the above specified type."
                                    }
                                },
                                "additionalProperties": true,
                                "type": "object",
                                "description": "Optional default configuration to use as the initial configuration if\n there is a failure to receive the initial extension configuration or if\n `apply_default_config_without_warming` flag is set."
                            },
                            "apply_default_config_without_warming": {
                                "type": "boolean",
                                "description": "Use the default config as the initial configuration without warming and\n waiting for the first discovery response. Requires the default configuration\n to be supplied."
                            },
                            "type_urls": {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array",
                                "description": "A set of permitted extension type URLs. Extension configuration updates are rejected\n if they do not match any type URL in the set."
                            }
                        },
                        "additionalProperties": true,
                        "type": "object",
                        "description": "Configuration source specifier for an extension configuration discovery\n service. In case of a failure and without the default configuration, the\n listener closes the connections.\n [#not-implemented-hide:]"
                    }
                },
                "additionalProperties": true,
                "type": "object",
                "description": "[#protodoc-title: Listener components]\n Listener :ref:`configuration overview \u003cconfig_listeners\u003e`\n\n[#next-free-field: 6]"
            },
            "type": "array",
            "description": "A list of individual network filters that make up the filter chain for\n connections established with the listener. Order matters as the filters are\n processed sequentially as connection events happen. Note: If the filter\n list is empty, the connection will close by default."
        },
        "use_proxy_proto": {
            "additionalProperties": true,
            "type": "boolean",
            "description": "Whether the listener should expect a PROXY protocol V1 header on new\n connections. If this option is enabled, the listener will assume that that\n remote address of the connection is the one specified in the header. Some\n load balancers including the AWS ELB support this option. If the option is\n absent or set to false, Envoy will use the physical peer address of the\n connection as the remote address.\n\n This field is deprecated. Add a\n :ref:`PROXY protocol listener filter \u003cconfig_listener_filters_proxy_protocol\u003e`\n explicitly instead."
        },
        "metadata": {
            "properties": {
                "filter_metadata": {
                    "additionalProperties": {
                        "properties": {
                            "fields": {
                                "additionalProperties": {
                                    "additionalProperties": true,
                                    "type": "object"
                                },
                                "type": "object",
                                "description": "Unordered map of dynamically typed values."
                            }
                        },
                        "additionalProperties": true,
                        "type": "object"
                    },
                    "type": "object",
                    "description": "Key is the reverse DNS filter name, e.g. com.acme.widget. The envoy.*\n namespace is reserved for Envoy's built-in filters."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "[#not-implemented-hide:] filter chain metadata."
        },
        "transport_socket": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the transport socket to instantiate. The name must match a supported transport\n socket implementation."
                },
                "typed_config": {
                    "properties": {
                        "type_url": {
                            "type": "string",
                            "description": "A URL/resource name that uniquely identifies the type of the serialized\n protocol buffer message. This string must contain at least\n one \"/\" character. The last segment of the URL's path must represent\n the fully qualified name of the type (as in\n `path/google.protobuf.Duration`). The name should be in a canonical form\n (e.g., leading \".\" is not accepted).\n\n In practice, teams usually precompile into the binary all types that they\n expect it to use in the context of Any. However, for URLs which use the\n scheme `http`, `https`, or no scheme, one can optionally set up a type\n server that maps type URLs to message definitions as follows:\n\n * If no scheme is provided, `https` is assumed.\n * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n   value in binary format, or produce an error.\n * Applications are allowed to cache lookup results based on the\n   URL, or have them precompiled into a binary to avoid any\n   lookup. Therefore, binary compatibility needs to be preserved\n   on changes to types. (Use versioned type names to manage\n   breaking changes.)\n\n Note: this functionality is not currently available in the official\n protobuf release, and it is not used for type URLs beginning with\n type.googleapis.com.\n\n Schemes other than `http`, `https` (or the empty scheme) might be\n used with implementation specific semantics."
                        },
                        "value": {
                            "type": "string",
                            "description": "Must be a valid serialized protocol buffer of the above specified type."
                        }
                    },
                    "additionalProperties": true,
                    "type": "object"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "Optional custom transport socket implementation to use for downstream connections.\n To setup TLS, set a transport socket with name `tls` and\n :ref:`DownstreamTlsContext \u003cenvoy_api_msg_extensions.transport_sockets.tls.v3.DownstreamTlsContext\u003e` in the `typed_config`.\n If no transport socket configuration is specified, new connections\n will be set up with plaintext."
        },
        "transport_socket_connect_timeout": {
            "properties": {
                "seconds": {
                    "type": "string",
                    "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                },
                "nanos": {
                    "type": "integer",
                    "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "If present and nonzero, the amount of time to allow incoming connections to complete any\n transport socket negotiations. If this expires before the transport reports connection\n establishment, the connection is summarily closed."
        },
        "name": {
            "type": "string",
            "description": "[#not-implemented-hide:] The unique name (or empty) by which this filter chain is known. If no\n name is provided, Envoy will allocate an internal UUID for the filter chain. If the filter\n chain is to be dynamically updated or removed via FCDS a unique name must be provided."
        },
        "on_demand_configuration": {
            "properties": {
                "rebuild_timeout": {
                    "properties": {
                        "seconds": {
                            "type": "string",
                            "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                        },
                        "nanos": {
                            "type": "integer",
                            "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive."
                        }
                    },
                    "additionalProperties": true,
                    "type": "object",
                    "description": "The timeout to wait for filter chain placeholders to complete rebuilding.\n 1. If this field is set to 0, timeout is disabled.\n 2. If not specified, a default timeout of 15s is used.\n Rebuilding will wait until dependencies are ready, have failed, or this timeout is reached.\n Upon failure or timeout, all connections related to this filter chain will be closed.\n Rebuilding will start again on the next new connection."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "[#not-implemented-hide:] The configuration to specify whether the filter chain will be built on-demand.\n If this field is not empty, the filter chain will be built on-demand.\n Otherwise, the filter chain will be built normally and block listener warming."
        }
    },
    "additionalProperties": true,
    "type": "object",
    "description": "A filter chain wraps a set of match criteria, an option TLS context, a set of filters, and\n various other parameters.\n [#next-free-field: 10]",
    "definitions": {
        "envoy.config.core.v3.CidrRange": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": {
                "address_prefix": {
                    "type": "string",
                    "description": "IPv4 or IPv6 address, e.g. ``192.0.0.0`` or ``2001:db8::``."
                },
                "prefix_len": {
                    "additionalProperties": true,
                    "type": "integer",
                    "description": "Length of prefix, e.g. 0, 32."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "CidrRange specifies an IP Address and a prefix length to construct\n the subnet mask for a `CIDR \u003chttps://tools.ietf.org/html/rfc4632\u003e`_ range.",
            "id": "envoy.config.core.v3.CidrRange"
        },
        "envoy.config.core.v3.DataSource": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "properties": {
                "filename": {
                    "type": "string",
                    "description": "Local filesystem data source."
                },
                "inline_bytes": {
                    "type": "string",
                    "description": "Bytes inlined in the configuration."
                },
                "inline_string": {
                    "type": "string",
                    "description": "String inlined in the configuration."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "Data source consisting of either a file or an inline value.",
            "id": "envoy.config.core.v3.DataSource"
        }
    }
}